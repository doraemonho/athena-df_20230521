!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AverageFluxBoundary	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::AverageFluxBoundary() {$/;"	f	class:FaceCenteredBoundaryVariable
BVALS_FC_BVALS_FC_HPP_	bvals_fc.hpp	/^#define BVALS_FC_BVALS_FC_HPP_$/;"	d
ClearBoundary	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::ClearBoundary(BoundaryCommSubset phase) {$/;"	f	class:FaceCenteredBoundaryVariable
ClearCoarseFluxBoundary	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::ClearCoarseFluxBoundary() {$/;"	f	class:FaceCenteredBoundaryVariable
ClearEMFShearing	bvals_shear_emf.cpp	/^void FaceCenteredBoundaryVariable::ClearEMFShearing(EdgeField &work) {$/;"	f	class:FaceCenteredBoundaryVariable
ComputeFluxCorrectionBufferSize	bvals_fc.cpp	/^int FaceCenteredBoundaryVariable::ComputeFluxCorrectionBufferSize($/;"	f	class:FaceCenteredBoundaryVariable
ComputeVariableBufferSize	bvals_fc.cpp	/^int FaceCenteredBoundaryVariable::ComputeVariableBufferSize(const NeighborIndexes& ni,$/;"	f	class:FaceCenteredBoundaryVariable
CopyPolarBufferSameProcess	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::CopyPolarBufferSameProcess($/;"	f	class:FaceCenteredBoundaryVariable
CountFineEdges	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::CountFineEdges() {$/;"	f	class:FaceCenteredBoundaryVariable
FaceCenteredBoundaryVariable	bvals_fc.cpp	/^FaceCenteredBoundaryVariable::FaceCenteredBoundaryVariable($/;"	f	class:FaceCenteredBoundaryVariable
FaceCenteredBoundaryVariable	bvals_fc.hpp	/^class FaceCenteredBoundaryVariable : public BoundaryVariable {$/;"	c
LoadBoundaryBufferSameLevel	bvals_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadBoundaryBufferSameLevel(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
LoadBoundaryBufferToCoarser	bvals_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadBoundaryBufferToCoarser(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
LoadBoundaryBufferToFiner	bvals_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadBoundaryBufferToFiner(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
LoadEMFShearingBoxBoundarySameLevel	bvals_shear_emf.cpp	/^void FaceCenteredBoundaryVariable::LoadEMFShearingBoxBoundarySameLevel($/;"	f	class:FaceCenteredBoundaryVariable
LoadFluxBoundaryBufferSameLevel	flux_correction_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadFluxBoundaryBufferSameLevel($/;"	f	class:FaceCenteredBoundaryVariable
LoadFluxBoundaryBufferToCoarser	flux_correction_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadFluxBoundaryBufferToCoarser($/;"	f	class:FaceCenteredBoundaryVariable
LoadFluxBoundaryBufferToPolar	flux_correction_fc.cpp	/^int FaceCenteredBoundaryVariable::LoadFluxBoundaryBufferToPolar($/;"	f	class:FaceCenteredBoundaryVariable
LoadShearingBoxBoundarySameLevel	bvals_shear_fc.cpp	/^void FaceCenteredBoundaryVariable::LoadShearingBoxBoundarySameLevel($/;"	f	class:FaceCenteredBoundaryVariable
OutflowInnerX1	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowInnerX1($/;"	f	class:FaceCenteredBoundaryVariable
OutflowInnerX2	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowInnerX2($/;"	f	class:FaceCenteredBoundaryVariable
OutflowInnerX3	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowInnerX3($/;"	f	class:FaceCenteredBoundaryVariable
OutflowOuterX1	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowOuterX1($/;"	f	class:FaceCenteredBoundaryVariable
OutflowOuterX2	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowOuterX2($/;"	f	class:FaceCenteredBoundaryVariable
OutflowOuterX3	outflow_fc.cpp	/^void FaceCenteredBoundaryVariable::OutflowOuterX3($/;"	f	class:FaceCenteredBoundaryVariable
PolarBoundarySingleAzimuthalBlock	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::PolarBoundarySingleAzimuthalBlock() {$/;"	f	class:FaceCenteredBoundaryVariable
PolarFieldBoundaryAverage	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::PolarFieldBoundaryAverage() {$/;"	f	class:FaceCenteredBoundaryVariable
PolarFluxBoundarySingleAzimuthalBlock	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::PolarFluxBoundarySingleAzimuthalBlock() {$/;"	f	class:FaceCenteredBoundaryVariable
PolarWedgeInnerX2	polarwedge_fc.cpp	/^void FaceCenteredBoundaryVariable::PolarWedgeInnerX2($/;"	f	class:FaceCenteredBoundaryVariable
PolarWedgeOuterX2	polarwedge_fc.cpp	/^void FaceCenteredBoundaryVariable::PolarWedgeOuterX2($/;"	f	class:FaceCenteredBoundaryVariable
ReceiveAndSetBoundariesWithWait	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::ReceiveAndSetBoundariesWithWait() {$/;"	f	class:FaceCenteredBoundaryVariable
ReceiveEMFShearingBoxBoundaryCorrection	bvals_shear_emf.cpp	/^bool FaceCenteredBoundaryVariable::ReceiveEMFShearingBoxBoundaryCorrection() {$/;"	f	class:FaceCenteredBoundaryVariable
ReceiveFluxCorrection	flux_correction_fc.cpp	/^bool FaceCenteredBoundaryVariable::ReceiveFluxCorrection() {$/;"	f	class:FaceCenteredBoundaryVariable
ReceiveShearingBoxBoundaryBuffers	bvals_shear_fc.cpp	/^bool FaceCenteredBoundaryVariable::ReceiveShearingBoxBoundaryBuffers() {$/;"	f	class:FaceCenteredBoundaryVariable
ReflectInnerX1	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectInnerX1($/;"	f	class:FaceCenteredBoundaryVariable
ReflectInnerX2	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectInnerX2($/;"	f	class:FaceCenteredBoundaryVariable
ReflectInnerX3	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectInnerX3($/;"	f	class:FaceCenteredBoundaryVariable
ReflectOuterX1	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectOuterX1($/;"	f	class:FaceCenteredBoundaryVariable
ReflectOuterX2	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectOuterX2($/;"	f	class:FaceCenteredBoundaryVariable
ReflectOuterX3	reflect_fc.cpp	/^void FaceCenteredBoundaryVariable::ReflectOuterX3($/;"	f	class:FaceCenteredBoundaryVariable
SendEMFShearingBoxBoundaryCorrection	bvals_shear_emf.cpp	/^void FaceCenteredBoundaryVariable::SendEMFShearingBoxBoundaryCorrection() {$/;"	f	class:FaceCenteredBoundaryVariable
SendFluxCorrection	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::SendFluxCorrection() {$/;"	f	class:FaceCenteredBoundaryVariable
SendShearingBoxBoundaryBuffers	bvals_shear_fc.cpp	/^void FaceCenteredBoundaryVariable::SendShearingBoxBoundaryBuffers() {$/;"	f	class:FaceCenteredBoundaryVariable
SetBoundaries	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::SetBoundaries() {$/;"	f	class:FaceCenteredBoundaryVariable
SetBoundaryFromCoarser	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::SetBoundaryFromCoarser(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
SetBoundaryFromFiner	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::SetBoundaryFromFiner(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
SetBoundarySameLevel	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::SetBoundarySameLevel(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
SetEMFShearingBoxBoundaryCorrection	bvals_shear_emf.cpp	/^void FaceCenteredBoundaryVariable::SetEMFShearingBoxBoundaryCorrection() {$/;"	f	class:FaceCenteredBoundaryVariable
SetEMFShearingBoxBoundarySameLevel	bvals_shear_emf.cpp	/^void FaceCenteredBoundaryVariable::SetEMFShearingBoxBoundarySameLevel($/;"	f	class:FaceCenteredBoundaryVariable
SetFluxBoundaryFromFiner	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::SetFluxBoundaryFromFiner(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
SetFluxBoundaryFromPolar	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::SetFluxBoundaryFromPolar(Real **buf_list, int num_bufs,$/;"	f	class:FaceCenteredBoundaryVariable
SetFluxBoundarySameLevel	flux_correction_fc.cpp	/^void FaceCenteredBoundaryVariable::SetFluxBoundarySameLevel(Real *buf,$/;"	f	class:FaceCenteredBoundaryVariable
SetShearingBoxBoundaryBuffers	bvals_shear_fc.cpp	/^void FaceCenteredBoundaryVariable::SetShearingBoxBoundaryBuffers() {$/;"	f	class:FaceCenteredBoundaryVariable
SetShearingBoxBoundarySameLevel	bvals_shear_fc.cpp	/^void FaceCenteredBoundaryVariable::SetShearingBoxBoundarySameLevel($/;"	f	class:FaceCenteredBoundaryVariable
SetupPersistentMPI	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::SetupPersistentMPI() {$/;"	f	class:FaceCenteredBoundaryVariable
StartReceiving	bvals_fc.cpp	/^void FaceCenteredBoundaryVariable::StartReceiving(BoundaryCommSubset phase) {$/;"	f	class:FaceCenteredBoundaryVariable
StartReceivingShear	bvals_shear_fc.cpp	/^void FaceCenteredBoundaryVariable::StartReceivingShear(BoundaryCommSubset phase) {$/;"	f	class:FaceCenteredBoundaryVariable
coarse_buf	bvals_fc.hpp	/^  FaceField &coarse_buf;$/;"	m	class:FaceCenteredBoundaryVariable
e1	bvals_fc.hpp	/^  AthenaArray<Real> &e1, &e2, &e3;  \/\/ same for EdgeField$/;"	m	class:FaceCenteredBoundaryVariable
e2	bvals_fc.hpp	/^  AthenaArray<Real> &e1, &e2, &e3;  \/\/ same for EdgeField$/;"	m	class:FaceCenteredBoundaryVariable
e3	bvals_fc.hpp	/^  AthenaArray<Real> &e1, &e2, &e3;  \/\/ same for EdgeField$/;"	m	class:FaceCenteredBoundaryVariable
edge_flag_	bvals_fc.hpp	/^  bool edge_flag_[12];$/;"	m	class:FaceCenteredBoundaryVariable
fc_flx_phys_id_	bvals_fc.hpp	/^  int fc_phys_id_, fc_flx_phys_id_, fc_flx_pole_phys_id_;$/;"	m	class:FaceCenteredBoundaryVariable
fc_flx_pole_phys_id_	bvals_fc.hpp	/^  int fc_phys_id_, fc_flx_phys_id_, fc_flx_pole_phys_id_;$/;"	m	class:FaceCenteredBoundaryVariable
fc_phys_id_	bvals_fc.hpp	/^  int fc_phys_id_, fc_flx_phys_id_, fc_flx_pole_phys_id_;$/;"	m	class:FaceCenteredBoundaryVariable
flip_across_pole_	bvals_fc.hpp	/^  const bool *flip_across_pole_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_north_flag_	bvals_fc.hpp	/^  BoundaryStatus *flux_north_flag_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_north_recv_	bvals_fc.hpp	/^  Real **flux_north_send_, **flux_north_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_north_send_	bvals_fc.hpp	/^  Real **flux_north_send_, **flux_north_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_south_flag_	bvals_fc.hpp	/^  BoundaryStatus *flux_south_flag_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_south_recv_	bvals_fc.hpp	/^  Real **flux_south_send_, **flux_south_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
flux_south_send_	bvals_fc.hpp	/^  Real **flux_south_send_, **flux_south_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
max_phys_id	bvals_fc.hpp	/^  static constexpr int max_phys_id = 5;$/;"	m	class:FaceCenteredBoundaryVariable
nedge_fine_	bvals_fc.hpp	/^  int nedge_fine_[12];$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                         int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                         int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int il, int iu, int jl, int ju, int kl, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int il, int iu, int jl, int ju, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int il, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^                      int iu, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  bool ReceiveFluxCorrection() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  int ComputeFluxCorrectionBufferSize(const NeighborIndexes& ni, int cng) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  int ComputeVariableBufferSize(const NeighborIndexes& ni, int cng) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  int LoadBoundaryBufferSameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  int LoadBoundaryBufferToCoarser(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  int LoadBoundaryBufferToFiner(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void ClearBoundary(BoundaryCommSubset phase) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void PolarBoundarySingleAzimuthalBlock() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void ReceiveAndSetBoundariesWithWait() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SendFluxCorrection() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SetBoundaries() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SetBoundaryFromCoarser(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SetBoundaryFromFiner(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SetBoundarySameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void SetupPersistentMPI() override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void StartReceiving(BoundaryCommSubset phase) override;$/;"	m	class:FaceCenteredBoundaryVariable
override	bvals_fc.hpp	/^  void StartReceivingShear(BoundaryCommSubset phase) override;$/;"	m	class:FaceCenteredBoundaryVariable
pbuf	bvals_fc.hpp	/^  AthenaArray<Real> pbuf;$/;"	m	class:FaceCenteredBoundaryVariable
recv_flx_same_lvl_	bvals_fc.hpp	/^  bool recv_flx_same_lvl_;$/;"	m	class:FaceCenteredBoundaryVariable
req_flux_north_recv_	bvals_fc.hpp	/^  MPI_Request *req_flux_north_send_, *req_flux_north_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
req_flux_north_send_	bvals_fc.hpp	/^  MPI_Request *req_flux_north_send_, *req_flux_north_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
req_flux_south_recv_	bvals_fc.hpp	/^  MPI_Request *req_flux_south_send_, *req_flux_south_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
req_flux_south_send_	bvals_fc.hpp	/^  MPI_Request *req_flux_south_send_, *req_flux_south_recv_;$/;"	m	class:FaceCenteredBoundaryVariable
shear_emf_phys_id_	bvals_fc.hpp	/^  int shear_emf_phys_id_;$/;"	m	class:FaceCenteredBoundaryVariable
shear_fc_	bvals_fc.hpp	/^  FaceField shear_fc_[2];$/;"	m	class:FaceCenteredBoundaryVariable
shear_fc_phys_id_	bvals_fc.hpp	/^  int shear_fc_phys_id_;$/;"	m	class:FaceCenteredBoundaryVariable
shear_map_emf_	bvals_fc.hpp	/^  EdgeField shear_map_emf_[2];$/;"	m	class:FaceCenteredBoundaryVariable
shear_recv_count_emf_	bvals_fc.hpp	/^  int shear_send_count_emf_[2][3], shear_recv_count_emf_[2][3];$/;"	m	class:FaceCenteredBoundaryVariable
shear_recv_count_fc_	bvals_fc.hpp	/^  int shear_send_count_fc_[2][4], shear_recv_count_fc_[2][4];$/;"	m	class:FaceCenteredBoundaryVariable
shear_send_count_emf_	bvals_fc.hpp	/^  int shear_send_count_emf_[2][3], shear_recv_count_emf_[2][3];$/;"	m	class:FaceCenteredBoundaryVariable
shear_send_count_fc_	bvals_fc.hpp	/^  int shear_send_count_fc_[2][4], shear_recv_count_fc_[2][4];$/;"	m	class:FaceCenteredBoundaryVariable
shear_var_emf_	bvals_fc.hpp	/^  EdgeField shear_var_emf_[2];$/;"	m	class:FaceCenteredBoundaryVariable
var_fc	bvals_fc.hpp	/^  FaceField *var_fc;$/;"	m	class:FaceCenteredBoundaryVariable
xgh_	bvals_fc.hpp	/^  int xorder_, xgh_;$/;"	m	class:FaceCenteredBoundaryVariable
xorder_	bvals_fc.hpp	/^  int xorder_, xgh_;$/;"	m	class:FaceCenteredBoundaryVariable
~FaceCenteredBoundaryVariable	bvals_fc.cpp	/^FaceCenteredBoundaryVariable::~FaceCenteredBoundaryVariable() {$/;"	f	class:FaceCenteredBoundaryVariable
