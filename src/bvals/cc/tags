!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AddDustDiffusionShearForInit	dustdiffusion/bvals_shear_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::AddDustDiffusionShearForInit() {$/;"	f	class:DustDiffusionBoundaryVariable
AddDustFluidsShearForInit	dustfluids/bvals_shear_dustfluids.cpp	/^void DustFluidsBoundaryVariable::AddDustFluidsShearForInit() {$/;"	f	class:DustFluidsBoundaryVariable
AddHydroShearForInit	hydro/bvals_shear_hydro.cpp	/^void HydroBoundaryVariable::AddHydroShearForInit() {$/;"	f	class:HydroBoundaryVariable
ApplyPhysicalBoundaries	mg/bvals_mg.cpp	/^void MGBoundaryValues::ApplyPhysicalBoundaries(int flag) {$/;"	f	class:MGBoundaryValues
BVALS_CC_BVALS_CC_HPP_	bvals_cc.hpp	/^#define BVALS_CC_BVALS_CC_HPP_$/;"	d
BVALS_CC_DUSTDIFFUSION_HPP_	dustdiffusion/bvals_dustdiffusion.hpp	/^#define BVALS_CC_DUSTDIFFUSION_HPP_$/;"	d
BVALS_CC_DUSTFLUIDS_BVALS_DUSTFLUIDS_HPP_	dustfluids/bvals_dustfluids.hpp	/^#define BVALS_CC_DUSTFLUIDS_BVALS_DUSTFLUIDS_HPP_$/;"	d
BVALS_CC_HYDRO_BVALS_HYDRO_HPP_	hydro/bvals_hydro.hpp	/^#define BVALS_CC_HYDRO_BVALS_HYDRO_HPP_$/;"	d
BVALS_CC_MG_BVALS_MG_HPP_	mg/bvals_mg.hpp	/^#define BVALS_CC_MG_BVALS_MG_HPP_$/;"	d
CellCenteredBoundaryVariable	bvals_cc.cpp	/^CellCenteredBoundaryVariable::CellCenteredBoundaryVariable($/;"	f	class:CellCenteredBoundaryVariable
CellCenteredBoundaryVariable	bvals_cc.hpp	/^class CellCenteredBoundaryVariable : public BoundaryVariable {$/;"	c
ClearBoundary	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::ClearBoundary(BoundaryCommSubset phase) {$/;"	f	class:CellCenteredBoundaryVariable
ClearBoundaryMultigrid	mg/bvals_mg.cpp	/^void MGBoundaryValues::ClearBoundaryMultigrid(BoundaryQuantity type) {$/;"	f	class:MGBoundaryValues
ComputeFluxCorrectionBufferSize	bvals_cc.cpp	/^int CellCenteredBoundaryVariable::ComputeFluxCorrectionBufferSize($/;"	f	class:CellCenteredBoundaryVariable
ComputeVariableBufferSize	bvals_cc.cpp	/^int CellCenteredBoundaryVariable::ComputeVariableBufferSize(const NeighborIndexes& ni,$/;"	f	class:CellCenteredBoundaryVariable
CopyNeighborInfoFromMeshBlock	mg/bvals_mg.cpp	/^void MGBoundaryValues::CopyNeighborInfoFromMeshBlock() {$/;"	f	class:MGBoundaryValues
DestroyBoundaryData	mg/bvals_mg.cpp	/^void MGBoundaryValues::DestroyBoundaryData() {$/;"	f	class:MGBoundaryValues
DustDiffusionBoundaryVariable	dustdiffusion/bvals_dustdiffusion.cpp	/^DustDiffusionBoundaryVariable::DustDiffusionBoundaryVariable($/;"	f	class:DustDiffusionBoundaryVariable
DustDiffusionBoundaryVariable	dustdiffusion/bvals_dustdiffusion.hpp	/^class DustDiffusionBoundaryVariable : public CellCenteredBoundaryVariable {$/;"	c
DustFluidsBoundaryVariable	dustfluids/bvals_dustfluids.cpp	/^DustFluidsBoundaryVariable::DustFluidsBoundaryVariable($/;"	f	class:DustFluidsBoundaryVariable
DustFluidsBoundaryVariable	dustfluids/bvals_dustfluids.hpp	/^class DustFluidsBoundaryVariable : public CellCenteredBoundaryVariable {$/;"	c
HydroBoundaryVariable	hydro/bvals_hydro.cpp	/^HydroBoundaryVariable::HydroBoundaryVariable($/;"	f	class:HydroBoundaryVariable
HydroBoundaryVariable	hydro/bvals_hydro.hpp	/^class HydroBoundaryVariable : public CellCenteredBoundaryVariable {$/;"	c
InitBoundaryData	mg/bvals_mg.cpp	/^void MGBoundaryValues::InitBoundaryData(BoundaryQuantity type) {$/;"	f	class:MGBoundaryValues
LoadBoundaryBufferSameLevel	bvals_cc.cpp	/^int CellCenteredBoundaryVariable::LoadBoundaryBufferSameLevel(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
LoadBoundaryBufferToCoarser	bvals_cc.cpp	/^int CellCenteredBoundaryVariable::LoadBoundaryBufferToCoarser(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
LoadBoundaryBufferToFiner	bvals_cc.cpp	/^int CellCenteredBoundaryVariable::LoadBoundaryBufferToFiner(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
LoadFluxBoundaryBufferSameLevel	dustdiffusion/flux_correction_dustdiffusion.cpp	/^int DustDiffusionBoundaryVariable::LoadFluxBoundaryBufferSameLevel(Real *buf,$/;"	f	class:DustDiffusionBoundaryVariable
LoadFluxBoundaryBufferSameLevel	dustfluids/flux_correction_dustfluids.cpp	/^int DustFluidsBoundaryVariable::LoadFluxBoundaryBufferSameLevel(Real *buf,$/;"	f	class:DustFluidsBoundaryVariable
LoadFluxBoundaryBufferSameLevel	flux_correction_cc.cpp	/^int CellCenteredBoundaryVariable::LoadFluxBoundaryBufferSameLevel(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
LoadFluxBoundaryBufferSameLevel	hydro/flux_correction_hydro.cpp	/^int HydroBoundaryVariable::LoadFluxBoundaryBufferSameLevel(Real *buf,$/;"	f	class:HydroBoundaryVariable
LoadFluxBoundaryBufferToCoarser	flux_correction_cc.cpp	/^int CellCenteredBoundaryVariable::LoadFluxBoundaryBufferToCoarser(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
LoadFluxShearingBoxBoundarySameLevel	bvals_shear_flux.cpp	/^void CellCenteredBoundaryVariable::LoadFluxShearingBoxBoundarySameLevel($/;"	f	class:CellCenteredBoundaryVariable
LoadMultigridBoundaryBufferSameLevel	mg/bvals_mg.cpp	/^int MGBoundaryValues::LoadMultigridBoundaryBufferSameLevel(Real *buf,$/;"	f	class:MGBoundaryValues
LoadMultigridBoundaryBufferToCoarser	mg/bvals_mg.cpp	/^int MGBoundaryValues::LoadMultigridBoundaryBufferToCoarser(Real *buf,$/;"	f	class:MGBoundaryValues
LoadMultigridBoundaryBufferToCoarserFluxCons	mg/bvals_mg.cpp	/^int MGGravityBoundaryValues::LoadMultigridBoundaryBufferToCoarserFluxCons(Real *buf,$/;"	f	class:MGGravityBoundaryValues
LoadMultigridBoundaryBufferToFiner	mg/bvals_mg.cpp	/^int MGBoundaryValues::LoadMultigridBoundaryBufferToFiner(Real *buf,$/;"	f	class:MGBoundaryValues
LoadMultigridBoundaryBufferToFinerFluxCons	mg/bvals_mg.cpp	/^int MGGravityBoundaryValues::LoadMultigridBoundaryBufferToFinerFluxCons(Real *buf,$/;"	f	class:MGGravityBoundaryValues
LoadShearingBoxBoundarySameLevel	bvals_shear_cc.cpp	/^void CellCenteredBoundaryVariable::LoadShearingBoxBoundarySameLevel($/;"	f	class:CellCenteredBoundaryVariable
MGBoundaryFunction_	mg/bvals_mg.hpp	/^  MGBoundaryFunc MGBoundaryFunction_[6];$/;"	m	class:MGBoundaryValues
MGBoundaryValues	mg/bvals_mg.cpp	/^MGBoundaryValues::MGBoundaryValues(Multigrid *pmg, BoundaryFlag *input_bcs)$/;"	f	class:MGBoundaryValues
MGBoundaryValues	mg/bvals_mg.hpp	/^class MGBoundaryValues : public BoundaryBase {$/;"	c
MGGravityBoundaryValues	mg/bvals_mg.hpp	/^  MGGravityBoundaryValues(Multigrid *pmg, BoundaryFlag *input_bcs)$/;"	f	class:MGGravityBoundaryValues
MGGravityBoundaryValues	mg/bvals_mg.hpp	/^class MGGravityBoundaryValues : public MGBoundaryValues {$/;"	c
OutflowInnerX1	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowInnerX1($/;"	f	class:CellCenteredBoundaryVariable
OutflowInnerX2	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowInnerX2($/;"	f	class:CellCenteredBoundaryVariable
OutflowInnerX3	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowInnerX3($/;"	f	class:CellCenteredBoundaryVariable
OutflowOuterX1	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowOuterX1($/;"	f	class:CellCenteredBoundaryVariable
OutflowOuterX2	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowOuterX2($/;"	f	class:CellCenteredBoundaryVariable
OutflowOuterX3	outflow_cc.cpp	/^void CellCenteredBoundaryVariable::OutflowOuterX3($/;"	f	class:CellCenteredBoundaryVariable
PolarBoundarySingleAzimuthalBlock	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::PolarBoundarySingleAzimuthalBlock() {$/;"	f	class:CellCenteredBoundaryVariable
PolarWedgeInnerX2	dustdiffusion/polarwedge_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::PolarWedgeInnerX2($/;"	f	class:DustDiffusionBoundaryVariable
PolarWedgeInnerX2	dustfluids/polarwedge_dustfluids.cpp	/^void DustFluidsBoundaryVariable::PolarWedgeInnerX2($/;"	f	class:DustFluidsBoundaryVariable
PolarWedgeInnerX2	polarwedge_cc.cpp	/^void CellCenteredBoundaryVariable::PolarWedgeInnerX2($/;"	f	class:CellCenteredBoundaryVariable
PolarWedgeOuterX2	dustdiffusion/polarwedge_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::PolarWedgeOuterX2($/;"	f	class:DustDiffusionBoundaryVariable
PolarWedgeOuterX2	dustfluids/polarwedge_dustfluids.cpp	/^void DustFluidsBoundaryVariable::PolarWedgeOuterX2($/;"	f	class:DustFluidsBoundaryVariable
PolarWedgeOuterX2	polarwedge_cc.cpp	/^void CellCenteredBoundaryVariable::PolarWedgeOuterX2($/;"	f	class:CellCenteredBoundaryVariable
ProlongateMultigridBoundaries	mg/bvals_mg.cpp	/^void MGBoundaryValues::ProlongateMultigridBoundaries(bool folddata) {$/;"	f	class:MGBoundaryValues
ProlongateMultigridBoundariesFluxCons	mg/bvals_mg.cpp	/^void MGBoundaryValues::ProlongateMultigridBoundariesFluxCons() {$/;"	f	class:MGBoundaryValues
ReceiveFluxCorrection	flux_correction_cc.cpp	/^bool CellCenteredBoundaryVariable::ReceiveFluxCorrection() {$/;"	f	class:CellCenteredBoundaryVariable
ReceiveFluxShearingBoxBoundaryBuffers	bvals_shear_flux.cpp	/^bool CellCenteredBoundaryVariable::ReceiveFluxShearingBoxBoundaryBuffers() {$/;"	f	class:CellCenteredBoundaryVariable
ReceiveMultigridBoundaryBuffers	mg/bvals_mg.cpp	/^bool MGBoundaryValues::ReceiveMultigridBoundaryBuffers(BoundaryQuantity type,$/;"	f	class:MGBoundaryValues
ReceiveShearingBoxBoundaryBuffers	bvals_shear_cc.cpp	/^bool CellCenteredBoundaryVariable::ReceiveShearingBoxBoundaryBuffers() {$/;"	f	class:CellCenteredBoundaryVariable
ReflectInnerX1	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectInnerX1($/;"	f	class:DustDiffusionBoundaryVariable
ReflectInnerX1	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectInnerX1($/;"	f	class:DustFluidsBoundaryVariable
ReflectInnerX1	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectInnerX1($/;"	f	class:HydroBoundaryVariable
ReflectInnerX1	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectInnerX1($/;"	f	class:CellCenteredBoundaryVariable
ReflectInnerX2	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectInnerX2($/;"	f	class:DustDiffusionBoundaryVariable
ReflectInnerX2	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectInnerX2($/;"	f	class:DustFluidsBoundaryVariable
ReflectInnerX2	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectInnerX2($/;"	f	class:HydroBoundaryVariable
ReflectInnerX2	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectInnerX2($/;"	f	class:CellCenteredBoundaryVariable
ReflectInnerX3	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectInnerX3($/;"	f	class:DustDiffusionBoundaryVariable
ReflectInnerX3	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectInnerX3($/;"	f	class:DustFluidsBoundaryVariable
ReflectInnerX3	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectInnerX3($/;"	f	class:HydroBoundaryVariable
ReflectInnerX3	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectInnerX3($/;"	f	class:CellCenteredBoundaryVariable
ReflectOuterX1	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectOuterX1($/;"	f	class:DustDiffusionBoundaryVariable
ReflectOuterX1	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectOuterX1($/;"	f	class:DustFluidsBoundaryVariable
ReflectOuterX1	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectOuterX1($/;"	f	class:HydroBoundaryVariable
ReflectOuterX1	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectOuterX1($/;"	f	class:CellCenteredBoundaryVariable
ReflectOuterX2	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectOuterX2($/;"	f	class:DustDiffusionBoundaryVariable
ReflectOuterX2	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectOuterX2($/;"	f	class:DustFluidsBoundaryVariable
ReflectOuterX2	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectOuterX2($/;"	f	class:HydroBoundaryVariable
ReflectOuterX2	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectOuterX2($/;"	f	class:CellCenteredBoundaryVariable
ReflectOuterX3	dustdiffusion/reflect_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ReflectOuterX3($/;"	f	class:DustDiffusionBoundaryVariable
ReflectOuterX3	dustfluids/reflect_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ReflectOuterX3($/;"	f	class:DustFluidsBoundaryVariable
ReflectOuterX3	hydro/reflect_hydro.cpp	/^void HydroBoundaryVariable::ReflectOuterX3($/;"	f	class:HydroBoundaryVariable
ReflectOuterX3	reflect_cc.cpp	/^void CellCenteredBoundaryVariable::ReflectOuterX3($/;"	f	class:CellCenteredBoundaryVariable
SelectCoarseBuffer	dustdiffusion/bvals_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::SelectCoarseBuffer(DustDiffusionBoundaryQuantity dustdiffusion_type) {$/;"	f	class:DustDiffusionBoundaryVariable
SelectCoarseBuffer	dustfluids/bvals_dustfluids.cpp	/^void DustFluidsBoundaryVariable::SelectCoarseBuffer(DustFluidsBoundaryQuantity dustfluids_type) {$/;"	f	class:DustFluidsBoundaryVariable
SelectCoarseBuffer	hydro/bvals_hydro.cpp	/^void HydroBoundaryVariable::SelectCoarseBuffer(HydroBoundaryQuantity hydro_type) {$/;"	f	class:HydroBoundaryVariable
SendFluxCorrection	flux_correction_cc.cpp	/^void CellCenteredBoundaryVariable::SendFluxCorrection() {$/;"	f	class:CellCenteredBoundaryVariable
SendFluxShearingBoxBoundaryBuffers	bvals_shear_flux.cpp	/^void CellCenteredBoundaryVariable::SendFluxShearingBoxBoundaryBuffers() {$/;"	f	class:CellCenteredBoundaryVariable
SendMultigridBoundaryBuffers	mg/bvals_mg.cpp	/^bool MGBoundaryValues::SendMultigridBoundaryBuffers(BoundaryQuantity type,$/;"	f	class:MGBoundaryValues
SendShearingBoxBoundaryBuffers	bvals_shear_cc.cpp	/^void CellCenteredBoundaryVariable::SendShearingBoxBoundaryBuffers() {$/;"	f	class:CellCenteredBoundaryVariable
SetBoundaryFromCoarser	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::SetBoundaryFromCoarser(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
SetBoundaryFromCoarser	dustdiffusion/bvals_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::SetBoundaryFromCoarser(Real *buf,$/;"	f	class:DustDiffusionBoundaryVariable
SetBoundaryFromCoarser	dustfluids/bvals_dustfluids.cpp	/^void DustFluidsBoundaryVariable::SetBoundaryFromCoarser(Real *buf,$/;"	f	class:DustFluidsBoundaryVariable
SetBoundaryFromFiner	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::SetBoundaryFromFiner(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
SetBoundaryFromFiner	dustdiffusion/bvals_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::SetBoundaryFromFiner(Real *buf,$/;"	f	class:DustDiffusionBoundaryVariable
SetBoundaryFromFiner	dustfluids/bvals_dustfluids.cpp	/^void DustFluidsBoundaryVariable::SetBoundaryFromFiner(Real *buf,$/;"	f	class:DustFluidsBoundaryVariable
SetBoundarySameLevel	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::SetBoundarySameLevel(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
SetBoundarySameLevel	dustdiffusion/bvals_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::SetBoundarySameLevel(Real *buf,$/;"	f	class:DustDiffusionBoundaryVariable
SetBoundarySameLevel	dustfluids/bvals_dustfluids.cpp	/^void DustFluidsBoundaryVariable::SetBoundarySameLevel(Real *buf,$/;"	f	class:DustFluidsBoundaryVariable
SetBoundarySameLevel	hydro/bvals_hydro.cpp	/^void HydroBoundaryVariable::SetBoundarySameLevel(Real *buf,$/;"	f	class:HydroBoundaryVariable
SetFluxBoundaryFromFiner	flux_correction_cc.cpp	/^void CellCenteredBoundaryVariable::SetFluxBoundaryFromFiner(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
SetFluxBoundarySameLevel	flux_correction_cc.cpp	/^void CellCenteredBoundaryVariable::SetFluxBoundarySameLevel(Real *buf,$/;"	f	class:CellCenteredBoundaryVariable
SetFluxShearingBoxBoundaryBuffers	bvals_shear_flux.cpp	/^void CellCenteredBoundaryVariable::SetFluxShearingBoxBoundaryBuffers(int order) {$/;"	f	class:CellCenteredBoundaryVariable
SetFluxShearingBoxBoundarySameLevel	bvals_shear_flux.cpp	/^void CellCenteredBoundaryVariable::SetFluxShearingBoxBoundarySameLevel($/;"	f	class:CellCenteredBoundaryVariable
SetMultigridBoundaryFromCoarser	mg/bvals_mg.cpp	/^void MGBoundaryValues::SetMultigridBoundaryFromCoarser(const Real *buf,$/;"	f	class:MGBoundaryValues
SetMultigridBoundaryFromCoarserFluxCons	mg/bvals_mg.cpp	/^void MGGravityBoundaryValues::SetMultigridBoundaryFromCoarserFluxCons(const Real *buf,$/;"	f	class:MGGravityBoundaryValues
SetMultigridBoundaryFromFiner	mg/bvals_mg.cpp	/^void MGBoundaryValues::SetMultigridBoundaryFromFiner(const Real *buf,$/;"	f	class:MGBoundaryValues
SetMultigridBoundaryFromFinerFluxCons	mg/bvals_mg.cpp	/^void MGGravityBoundaryValues::SetMultigridBoundaryFromFinerFluxCons(const Real *buf,$/;"	f	class:MGGravityBoundaryValues
SetMultigridBoundarySameLevel	mg/bvals_mg.cpp	/^void MGBoundaryValues::SetMultigridBoundarySameLevel(const Real *buf,$/;"	f	class:MGBoundaryValues
SetShearingBoxBoundaryBuffers	bvals_shear_cc.cpp	/^void CellCenteredBoundaryVariable::SetShearingBoxBoundaryBuffers(int order) {$/;"	f	class:CellCenteredBoundaryVariable
SetShearingBoxBoundarySameLevel	bvals_shear_cc.cpp	/^void CellCenteredBoundaryVariable::SetShearingBoxBoundarySameLevel($/;"	f	class:CellCenteredBoundaryVariable
SetupPersistentMPI	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::SetupPersistentMPI() {$/;"	f	class:CellCenteredBoundaryVariable
ShearQuantities	bvals_cc.hpp	/^  virtual void ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) {}$/;"	f	class:CellCenteredBoundaryVariable
ShearQuantities	dustdiffusion/bvals_shear_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) {$/;"	f	class:DustDiffusionBoundaryVariable
ShearQuantities	dustfluids/bvals_shear_dustfluids.cpp	/^void DustFluidsBoundaryVariable::ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) {$/;"	f	class:DustFluidsBoundaryVariable
ShearQuantities	hydro/bvals_shear_hydro.cpp	/^void HydroBoundaryVariable::ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) {$/;"	f	class:HydroBoundaryVariable
StartReceiving	bvals_cc.cpp	/^void CellCenteredBoundaryVariable::StartReceiving(BoundaryCommSubset phase) {$/;"	f	class:CellCenteredBoundaryVariable
StartReceivingMultigrid	mg/bvals_mg.cpp	/^void MGBoundaryValues::StartReceivingMultigrid(BoundaryQuantity type, bool folddata) {$/;"	f	class:MGBoundaryValues
StartReceivingShear	bvals_shear_cc.cpp	/^void CellCenteredBoundaryVariable::StartReceivingShear(BoundaryCommSubset phase) {$/;"	f	class:CellCenteredBoundaryVariable
SwapDustDiffusionQuantity	dustdiffusion/bvals_dustdiffusion.cpp	/^void DustDiffusionBoundaryVariable::SwapDustDiffusionQuantity(AthenaArray<Real> &var_dustdiffusion,$/;"	f	class:DustDiffusionBoundaryVariable
SwapDustFluidsQuantity	dustfluids/bvals_dustfluids.cpp	/^void DustFluidsBoundaryVariable::SwapDustFluidsQuantity(AthenaArray<Real> &var_dustfluids,$/;"	f	class:DustFluidsBoundaryVariable
SwapHydroQuantity	hydro/bvals_hydro.cpp	/^void HydroBoundaryVariable::SwapHydroQuantity(AthenaArray<Real> &var_hydro,$/;"	f	class:HydroBoundaryVariable
bdata_	mg/bvals_mg.hpp	/^  BoundaryData<> bdata_;$/;"	m	class:MGBoundaryValues
cbuf_	mg/bvals_mg.hpp	/^  AthenaArray<Real> cbuf_, cbufold_;$/;"	m	class:MGBoundaryValues
cbufold_	mg/bvals_mg.hpp	/^  AthenaArray<Real> cbuf_, cbufold_;$/;"	m	class:MGBoundaryValues
cc_flx_phys_id_	bvals_cc.hpp	/^  int cc_phys_id_, cc_flx_phys_id_;$/;"	m	class:CellCenteredBoundaryVariable
cc_phys_id_	bvals_cc.hpp	/^  int cc_phys_id_, cc_flx_phys_id_;$/;"	m	class:CellCenteredBoundaryVariable
coarse_buf	bvals_cc.hpp	/^  AthenaArray<Real> *coarse_buf;  \/\/!< may pass nullptr if mesh refinement is unsupported$/;"	m	class:CellCenteredBoundaryVariable
dustdiffusion_type_	dustdiffusion/bvals_dustdiffusion.hpp	/^  DustDiffusionBoundaryQuantity dustdiffusion_type_;$/;"	m	class:DustDiffusionBoundaryVariable
dustfluids_type_	dustfluids/bvals_dustfluids.hpp	/^  DustFluidsBoundaryQuantity dustfluids_type_;$/;"	m	class:DustFluidsBoundaryVariable
final	dustdiffusion/bvals_dustdiffusion.hpp	/^  int LoadFluxBoundaryBufferSameLevel(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustDiffusionBoundaryVariable
final	dustdiffusion/bvals_dustdiffusion.hpp	/^  void PolarWedgeInnerX2( Real time, Real dt, int il, int iu, int jl, int kl, int ku, int ngh) final;$/;"	m	class:DustDiffusionBoundaryVariable
final	dustdiffusion/bvals_dustdiffusion.hpp	/^  void PolarWedgeOuterX2( Real time, Real dt, int il, int iu, int jl, int kl, int ku, int ngh) final;$/;"	m	class:DustDiffusionBoundaryVariable
final	dustdiffusion/bvals_dustdiffusion.hpp	/^  void SetBoundaryFromCoarser(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustDiffusionBoundaryVariable
final	dustdiffusion/bvals_dustdiffusion.hpp	/^  void SetBoundaryFromFiner(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustDiffusionBoundaryVariable
final	dustfluids/bvals_dustfluids.hpp	/^  int LoadFluxBoundaryBufferSameLevel(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustFluidsBoundaryVariable
final	dustfluids/bvals_dustfluids.hpp	/^  void PolarWedgeInnerX2( Real time, Real dt, int il, int iu, int jl, int kl, int ku, int ngh) final;$/;"	m	class:DustFluidsBoundaryVariable
final	dustfluids/bvals_dustfluids.hpp	/^  void PolarWedgeOuterX2( Real time, Real dt, int il, int iu, int jl, int kl, int ku, int ngh) final;$/;"	m	class:DustFluidsBoundaryVariable
final	dustfluids/bvals_dustfluids.hpp	/^  void SetBoundaryFromCoarser(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustFluidsBoundaryVariable
final	dustfluids/bvals_dustfluids.hpp	/^  void SetBoundaryFromFiner(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:DustFluidsBoundaryVariable
final	hydro/bvals_hydro.hpp	/^  int LoadFluxBoundaryBufferSameLevel(Real *buf, const NeighborBlock& nb) final;$/;"	m	class:HydroBoundaryVariable
final	mg/bvals_mg.hpp	/^                                                   const NeighborBlock& nb) final;$/;"	m	class:MGGravityBoundaryValues
final	mg/bvals_mg.hpp	/^                                                 const NeighborBlock& nb) final;$/;"	m	class:MGGravityBoundaryValues
final	mg/bvals_mg.hpp	/^                                               const NeighborBlock& nb) final;$/;"	m	class:MGGravityBoundaryValues
final	mg/bvals_mg.hpp	/^                                             const NeighborBlock& nb) final;$/;"	m	class:MGGravityBoundaryValues
flip_across_pole_	bvals_cc.hpp	/^  const bool *flip_across_pole_;$/;"	m	class:CellCenteredBoundaryVariable
hydro_type_	hydro/bvals_hydro.hpp	/^  HydroBoundaryQuantity hydro_type_;$/;"	m	class:HydroBoundaryVariable
max_phys_id	bvals_cc.hpp	/^  static constexpr int max_phys_id = 4;$/;"	m	class:CellCenteredBoundaryVariable
mgcomm_	mg/bvals_mg.hpp	/^  MPI_Comm mgcomm_;$/;"	m	class:MGBoundaryValues
nl_	bvals_cc.hpp	/^  int nl_, nu_;$/;"	m	class:CellCenteredBoundaryVariable
nu_	bvals_cc.hpp	/^  int nl_, nu_;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                         int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                         int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int il, int iu, int jl, int ju, int kl, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int il, int iu, int jl, int ju, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int il, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^                      int iu, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  bool ReceiveFluxCorrection() override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  int ComputeFluxCorrectionBufferSize(const NeighborIndexes& ni, int cng) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  int ComputeVariableBufferSize(const NeighborIndexes& ni, int cng) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  int LoadBoundaryBufferSameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  int LoadBoundaryBufferToCoarser(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  int LoadBoundaryBufferToFiner(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void ClearBoundary(BoundaryCommSubset phase) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void PolarBoundarySingleAzimuthalBlock() override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void SendFluxCorrection() override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void SetBoundaryFromCoarser(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void SetBoundaryFromFiner(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void SetBoundarySameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void SetupPersistentMPI() override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void StartReceiving(BoundaryCommSubset phase) override;$/;"	m	class:CellCenteredBoundaryVariable
override	bvals_cc.hpp	/^  void StartReceivingShear(BoundaryCommSubset phase) override;$/;"	m	class:CellCenteredBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int il, int iu, int jl, int ju, int kl, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int il, int iu, int jl, int ju, int ku, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int il, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^                      int iu, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^  void SetBoundarySameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustdiffusion/bvals_dustdiffusion.hpp	/^  void ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) override;$/;"	m	class:DustDiffusionBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int il, int iu, int jl, int ju, int kl, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int il, int iu, int jl, int ju, int ku, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int il, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^                      int iu, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^  void SetBoundarySameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:DustFluidsBoundaryVariable
override	dustfluids/bvals_dustfluids.hpp	/^  void ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) override;$/;"	m	class:DustFluidsBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int il, int iu, int jl, int ju, int kl, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int il, int iu, int jl, int ju, int ku, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int il, int iu, int jl, int kl, int ku, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int il, int iu, int ju, int kl, int ku, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int il, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^                      int iu, int jl, int ju, int kl, int ku, int ngh) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^  void SetBoundarySameLevel(Real *buf, const NeighborBlock& nb) override;$/;"	m	class:HydroBoundaryVariable
override	hydro/bvals_hydro.hpp	/^  void ShearQuantities(AthenaArray<Real> &shear_cc_, bool upper) override;$/;"	m	class:HydroBoundaryVariable
pbuf	bvals_cc.hpp	/^  AthenaArray<Real> pbuf;$/;"	m	class:CellCenteredBoundaryVariable
pmy_mg_	mg/bvals_mg.hpp	/^  Multigrid *pmy_mg_;$/;"	m	class:MGBoundaryValues
shear_cc_	bvals_cc.hpp	/^  AthenaArray<Real>  shear_cc_[2];$/;"	m	class:CellCenteredBoundaryVariable
shear_cc_phys_id_	bvals_cc.hpp	/^  int shear_cc_phys_id_;$/;"	m	class:CellCenteredBoundaryVariable
shear_flx_phys_id_	bvals_cc.hpp	/^  int shear_flx_phys_id_;$/;"	m	class:CellCenteredBoundaryVariable
shear_map_flx_	bvals_cc.hpp	/^  AthenaArray<Real> shear_map_flx_[2];$/;"	m	class:CellCenteredBoundaryVariable
shear_recv_count_cc_	bvals_cc.hpp	/^  int shear_send_count_cc_[2][4], shear_recv_count_cc_[2][4]; \/\/ buffer sizes$/;"	m	class:CellCenteredBoundaryVariable
shear_recv_count_flx_	bvals_cc.hpp	/^  int shear_send_count_flx_[2][3], shear_recv_count_flx_[2][3];$/;"	m	class:CellCenteredBoundaryVariable
shear_send_count_cc_	bvals_cc.hpp	/^  int shear_send_count_cc_[2][4], shear_recv_count_cc_[2][4]; \/\/ buffer sizes$/;"	m	class:CellCenteredBoundaryVariable
shear_send_count_flx_	bvals_cc.hpp	/^  int shear_send_count_flx_[2][3], shear_recv_count_flx_[2][3];$/;"	m	class:CellCenteredBoundaryVariable
shear_var_flx_	bvals_cc.hpp	/^  AthenaArray<Real> shear_var_flx_[2];$/;"	m	class:CellCenteredBoundaryVariable
var_cc	bvals_cc.hpp	/^  AthenaArray<Real> *var_cc;$/;"	m	class:CellCenteredBoundaryVariable
x1flux	bvals_cc.hpp	/^  AthenaArray<Real> &x1flux, &x2flux, &x3flux;$/;"	m	class:CellCenteredBoundaryVariable
x2flux	bvals_cc.hpp	/^  AthenaArray<Real> &x1flux, &x2flux, &x3flux;$/;"	m	class:CellCenteredBoundaryVariable
x3flux	bvals_cc.hpp	/^  AthenaArray<Real> &x1flux, &x2flux, &x3flux;$/;"	m	class:CellCenteredBoundaryVariable
~CellCenteredBoundaryVariable	bvals_cc.cpp	/^CellCenteredBoundaryVariable::~CellCenteredBoundaryVariable() {$/;"	f	class:CellCenteredBoundaryVariable
~MGBoundaryValues	mg/bvals_mg.cpp	/^MGBoundaryValues::~MGBoundaryValues() {$/;"	f	class:MGBoundaryValues
