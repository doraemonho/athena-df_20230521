!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Cons1D	hlld.cpp	/^struct Cons1D {$/;"	s	file:
Cons1D	hlld_backup.cpp	/^struct Cons1D {$/;"	s	file:
Cons1D	hlld_iso.cpp	/^struct Cons1D {$/;"	s	file:
Cons1D	lhlld.cpp	/^struct Cons1D {$/;"	s	file:
EResidual	hlld_rel.cpp	/^Real EResidual(Real w_guess, Real dd, Real ee, Real m_sq, Real bb_sq, Real ss_sq,$/;"	f	namespace:__anon8
EResidualPrime	hlld_rel.cpp	/^Real EResidualPrime(Real w_guess, Real dd, Real m_sq, Real bb_sq, Real ss_sq,$/;"	f	namespace:__anon8
HLLDTransforming	hlld_rel.cpp	/^void HLLDTransforming(MeshBlock *pmb, const int k, const int j,$/;"	f	namespace:__anon8
HLLENonTransforming	hlld_rel.cpp	/^void HLLENonTransforming(MeshBlock *pmb, const int k, const int j,$/;"	f	namespace:__anon8
HLLENonTransforming	hlle_mhd_rel.cpp	/^void HLLENonTransforming(MeshBlock *pmb, const int k, const int j,$/;"	f	namespace:__anon4
HLLETransforming	hlle_mhd_rel.cpp	/^void HLLETransforming(MeshBlock *pmb, const int k, const int j,$/;"	f	namespace:__anon4
LLFNonTransforming	llf_mhd_rel.cpp	/^void LLFNonTransforming(MeshBlock *pmb, const int k, const int j, const int il,$/;"	f	namespace:__anon6
LLFTransforming	llf_mhd_rel.cpp	/^void LLFTransforming(MeshBlock *pmb, const int k, const int j,$/;"	f	namespace:__anon6
RiemannSolver	hlld.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlld_backup.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlld_iso.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlld_rel.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlle_mhd.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlle_mhd_rel.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	hlle_mhd_rel_no_transform.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	lhlld.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	llf_mhd.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	llf_mhd_rel.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	llf_mhd_rel_no_transform.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RiemannSolver	roe_mhd.cpp	/^void Hydro::RiemannSolver(const int k, const int j, const int il, const int iu,$/;"	f	class:Hydro
RoeFlux	roe_mhd.cpp	/^inline void RoeFlux(const Real wroe[], const Real b1, const Real x, const Real y,$/;"	f	namespace:__anon2
SMALL_NUMBER	hlld_backup.cpp	/^#define SMALL_NUMBER /;"	d	file:
by	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
by	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
by	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
by	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
bz	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
bz	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
bz	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
bz	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
d	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
d	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
d	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
d	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
e	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
e	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
e	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
gm1	roe_mhd.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon1	file:
iso_cs	roe_mhd.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon1	file:
mx	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
mx	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
mx	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
mx	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
my	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
my	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
my	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
my	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
mz	hlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
mz	hlld_backup.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
mz	hlld_iso.cpp	/^  Real d, mx, my, mz, by, bz;$/;"	m	struct:Cons1D	file:
mz	lhlld.cpp	/^  Real d, mx, my, mz, e, by, bz;$/;"	m	struct:Cons1D	file:
