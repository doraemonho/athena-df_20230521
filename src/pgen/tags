!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A0	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
A0	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
A0	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
A0	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
A0	visc_dustfluids.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2;$/;"	m	namespace:__anon116	file:
A0	visc_scalars.cpp	/^Real A0, sig;$/;"	m	namespace:__anon18	file:
A1	cpaw.cpp	/^Real A1(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon54
A1	dusty_wave.cpp	/^Real A1(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon52
A1	field_loop_poles.cpp	/^Real A1(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon22
A1	linear_wave.cpp	/^Real A1(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon91
A2	cpaw.cpp	/^Real A2(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon54
A2	dusty_wave.cpp	/^Real A2(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon52
A2	field_loop_poles.cpp	/^Real A2(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon22
A2	linear_wave.cpp	/^Real A2(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon91
A3	cpaw.cpp	/^Real A3(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon54
A3	dusty_wave.cpp	/^Real A3(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon52
A3	field_loop_poles.cpp	/^Real A3(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon22
A3	linear_wave.cpp	/^Real A3(const Real x1, const Real x2, const Real x3) {$/;"	f	namespace:__anon91
A30	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
AN	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
A_bump	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
A_bump	disk_dust_diffusion.cpp	/^Real A_bump, sigma_bump, r0_bump;$/;"	m	namespace:__anon35	file:
A_bump	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
A_gap	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
A_gap	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
AccumulateData	disk_VSI.cpp	/^void AccumulateData(MeshBlock *pmb) {$/;"	f
AddPoloidalField	disk_3d_mhd_dust.cpp	/^void AddPoloidalField(MeshBlock *pmb)$/;"	f	namespace:__anon26
AdvanceSystemRK4	disk_multiple_planet_dust_cylindrical.cpp	/^void AdvanceSystemRK4(Real dt) {$/;"	f
AdvanceSystemRK4	disk_multiple_planets_dust_cylindrical.cpp	/^void AdvanceSystemRK4(Real dt) {$/;"	f
Am0	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
Am_in	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
AphiLoop	disk_3d_mhd_dust.cpp	/^Real AphiLoop(const Real x1, const Real x2, const Real x3, Real R1, Real R2, int nloop)$/;"	f	namespace:__anon26
AphiOpen	disk_3d_mhd_dust.cpp	/^Real AphiOpen(const Real x1, const Real x2, const Real x3)$/;"	f	namespace:__anon26
B0	hb3.cpp	/^Real beta, B0;$/;"	m	namespace:__anon23	file:
BN	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
Bump_Flag	disk_RWI_2D.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon66	file:
Bump_Flag	disk_dust_diffusion.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon35	file:
Bump_flag	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
Bump_flag	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
Bump_flag	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
Bump_flag	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
Bz0	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
CalculateFromTable	gr_mhd_inflow.cpp	/^void CalculateFromTable(Real r, Real theta, Real *prho, Real *put, Real *pur,$/;"	f	namespace:__anon38
CalculateLFromRPeak	gr_torus.cpp	/^Real CalculateLFromRPeak(Real r) {$/;"	f	namespace:__anon9
CalculatePrimitives	gr_bondi.cpp	/^void CalculatePrimitives(Real r, Real temp_min, Real temp_max, Real *prho,$/;"	f	namespace:__anon46
CalculateRPeakFromL	gr_torus.cpp	/^Real CalculateRPeakFromL(Real l_target) {$/;"	f	namespace:__anon10
CalculateVelocityInTiltedTorus	gr_torus.cpp	/^void CalculateVelocityInTiltedTorus(Real r, Real th, Real ph, Real *p_ut, Real *p_ur,$/;"	f	namespace:__anon13
CalculateVelocityInTorus	gr_torus.cpp	/^void CalculateVelocityInTorus(Real r, Real sth, Real *p_ut, Real *p_uph) {$/;"	f	namespace:__anon12
Car2Sph	inject_pebble_3D.cpp	/^void Car2Sph(Real rad, Real theta,Real phi, Real vx, Real vy, Real vz, Real &v1, Real &v2, Real &v3) {$/;"	f	namespace:__anon28
CartInnerX1	dust_diffusion.cpp	/^void CartInnerX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
CartInnerX2	dust_diffusion.cpp	/^void CartInnerX2(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
CartOuterX1	dust_diffusion.cpp	/^void CartOuterX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
CartOuterX2	dust_diffusion.cpp	/^void CartOuterX2(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
CompressedX2	disk_3d_mhd_dust.cpp	/^Real CompressedX2(Real x, RegionSize rs)$/;"	f	namespace:__anon26
CubicRootReal	gr_linear_wave.cpp	/^Real CubicRootReal(Real a2, Real a1, Real a0) {$/;"	f	namespace:__anon50
DMRInnerX1	dmr.cpp	/^void DMRInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f
DMRInnerX1	dmr_dust.cpp	/^void DMRInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DMRInnerX2	dmr.cpp	/^void DMRInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f
DMRInnerX2	dmr_dust.cpp	/^void DMRInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DMROuterX2	dmr.cpp	/^void DMROuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f
DMROuterX2	dmr_dust.cpp	/^void DMROuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
Damping_Flag	disk_RWI_2D.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon66	file:
Damping_Flag	disk_dust_diffusion.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon35	file:
Damping_Flag	disk_dust_drift.cpp	/^bool Damping_Flag;$/;"	m	namespace:__anon29	file:
Damping_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon33	file:
Damping_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon74	file:
Damping_Flag	disk_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon64	file:
Damping_Flag	disk_planet_dust_spherical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon78	file:
Damping_Flag	disk_streaming_cylindrical.cpp	/^bool Damping_Flag;$/;"	m	namespace:__anon19	file:
Damping_Flag	disk_streaming_spherical.cpp	/^bool Damping_Flag;$/;"	m	namespace:__anon40	file:
Damping_Flag	dust_diffusion.cpp	/^bool Damping_Flag, Isothermal_Flag;$/;"	m	namespace:__anon82	file:
Damping_Flag	ssheet_RWI_dust.cpp	/^bool DustDrift_Flag, Damping_Flag;$/;"	m	namespace:__anon55	file:
Damping_Flag	ssheet_planet_dust.cpp	/^bool DustDrift_Flag, Damping_Flag;$/;"	m	namespace:__anon76	file:
Dd	disk_dust_diffusion.cpp	/^weight_dust[NDUSTFLUIDS], Dd[NDUSTFLUIDS];$/;"	m	namespace:__anon35	file:
Delta_dust_vphi	disk_RWI_2D.cpp	/^Real Delta_dust_vphi(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon67
Delta_dust_vphi	disk_dust_diffusion.cpp	/^Real Delta_dust_vphi(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon36
Delta_dust_vphi	disk_dust_drift.cpp	/^Real Delta_dust_vphi(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon30
Delta_dust_vphi	disk_streaming_cylindrical.cpp	/^Real Delta_dust_vphi(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon20
Delta_dust_vphi	disk_streaming_spherical.cpp	/^Real Delta_dust_vphi(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon41
Delta_dust_vr	disk_RWI_2D.cpp	/^Real Delta_dust_vr(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon67
Delta_dust_vr	disk_dust_diffusion.cpp	/^Real Delta_dust_vr(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon36
Delta_dust_vr	disk_dust_drift.cpp	/^Real Delta_dust_vr(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon30
Delta_dust_vr	disk_streaming_cylindrical.cpp	/^Real Delta_dust_vr(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon20
Delta_dust_vr	disk_streaming_spherical.cpp	/^Real Delta_dust_vr(const Real ts, const Real vk, const Real d_vgr, const Real d_vgphi) {$/;"	f	namespace:__anon41
Delta_gas_vphi	disk_RWI_2D.cpp	/^Real Delta_gas_vphi(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon67
Delta_gas_vphi	disk_dust_diffusion.cpp	/^Real Delta_gas_vphi(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon36
Delta_gas_vphi	disk_dust_drift.cpp	/^Real Delta_gas_vphi(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon30
Delta_gas_vphi	disk_streaming_cylindrical.cpp	/^Real Delta_gas_vphi(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon20
Delta_gas_vphi	disk_streaming_spherical.cpp	/^Real Delta_gas_vphi(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon41
Delta_gas_vr	disk_RWI_2D.cpp	/^Real Delta_gas_vr(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon67
Delta_gas_vr	disk_dust_diffusion.cpp	/^Real Delta_gas_vr(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon36
Delta_gas_vr	disk_dust_drift.cpp	/^Real Delta_gas_vr(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon30
Delta_gas_vr	disk_streaming_cylindrical.cpp	/^Real Delta_gas_vr(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon20
Delta_gas_vr	disk_streaming_spherical.cpp	/^Real Delta_gas_vr(const Real vk, const Real SN, const Real QN, const Real Psi) {$/;"	f	namespace:__anon41
DenProfileCyl	disk.cpp	/^Real DenProfileCyl(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon2
DenProfileCyl	disk_dust_drift.cpp	/^Real DenProfileCyl(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon30
DenProfileCyl_Dust	disk_streaming_cylindrical.cpp	/^Real DenProfileCyl_Dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon20
DenProfileCyl_Dust	disk_streaming_spherical.cpp	/^Real DenProfileCyl_Dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon41
DenProfileCyl_Gas	disk_streaming_cylindrical.cpp	/^Real DenProfileCyl_Gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon20
DenProfileCyl_Gas	disk_streaming_spherical.cpp	/^Real DenProfileCyl_Gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon41
DenProfileCyl_dust	disk_RWI_2D.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon67
DenProfileCyl_dust	disk_VSI.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon99
DenProfileCyl_dust	disk_dust_diffusion.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon36
DenProfileCyl_dust	disk_multiple_planet_dust_cylindrical.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon34
DenProfileCyl_dust	disk_multiple_planets_dust_cylindrical.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon75
DenProfileCyl_dust	disk_planet_dust_cylindrical.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon65
DenProfileCyl_dust	disk_planet_dust_spherical.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon79
DenProfileCyl_dust	dust_diffusion.cpp	/^Real DenProfileCyl_dust(const Real rad, const Real phi, const Real z, const Real den_ratio, const Real H_ratio) {$/;"	f	namespace:__anon83
DenProfileCyl_gas	disk_RWI_2D.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon67
DenProfileCyl_gas	disk_VSI.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon99
DenProfileCyl_gas	disk_dust_diffusion.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon36
DenProfileCyl_gas	disk_multiple_planet_dust_cylindrical.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon34
DenProfileCyl_gas	disk_multiple_planets_dust_cylindrical.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon75
DenProfileCyl_gas	disk_planet_dust_cylindrical.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon65
DenProfileCyl_gas	disk_planet_dust_spherical.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon79
DenProfileCyl_gas	dust_diffusion.cpp	/^Real DenProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon83
DensityFloor	disk_VSI.cpp	/^void DensityFloor(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon99
Density_interpolate	disk_dust_drift.cpp	/^void Density_interpolate(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon30
Density_interpolate	disk_streaming_cylindrical.cpp	/^void Density_interpolate(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon20
Density_interpolate	disk_streaming_spherical.cpp	/^void Density_interpolate(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon41
DerivMotionRK4	disk_multiple_planet_dust_cylindrical.cpp	/^void DerivMotionRK4(Real *q_init, Real *gmasses, Real *deriv, int n, Real dt, bool *feelothers) {$/;"	f
DerivMotionRK4	disk_multiple_planets_dust_cylindrical.cpp	/^void DerivMotionRK4(Real *q_init, Real *gmasses, Real *deriv, int n, Real dt, bool *feelothers) {$/;"	f
Diffusion_Flag	dmr_dust.cpp	/^bool Diffusion_Flag;$/;"	m	namespace:__anon113	file:
DiffusivityNonidealMHD	disk_3d_mhd_dust.cpp	/^void DiffusivityNonidealMHD(FieldDiffusion *pfdif, MeshBlock *pmb,$/;"	f	namespace:__anon26
DiskInnerX1	disk.cpp	/^void DiskInnerX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskInnerX1	disk_3d_mhd_dust.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
DiskInnerX1	disk_RWI_2D.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_VSI.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_dust_diffusion.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_multiple_planet_dust_cylindrical.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_multiple_planets_dust_cylindrical.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_planet_dust_cylindrical.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	disk_planet_dust_spherical.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	dust_diffusion.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX1	inject_pebble_3D.cpp	/^void DiskInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk.cpp	/^void DiskInnerX2(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskInnerX2	disk_3d_mhd_dust.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
DiskInnerX2	disk_VSI.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk_dust_diffusion.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk_multiple_planet_dust_cylindrical.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk_multiple_planets_dust_cylindrical.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk_planet_dust_cylindrical.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	disk_planet_dust_spherical.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskInnerX2	inject_pebble_3D.cpp	/^void DiskInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
DiskInnerX3	disk.cpp	/^void DiskInnerX3(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskInnerX3	disk_dust_diffusion.cpp	/^void DiskInnerX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk.cpp	/^void DiskOuterX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskOuterX1	disk_3d_mhd_dust.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
DiskOuterX1	disk_RWI_2D.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_VSI.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_dust_diffusion.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_multiple_planet_dust_cylindrical.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_multiple_planets_dust_cylindrical.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_planet_dust_cylindrical.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	disk_planet_dust_spherical.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	dust_diffusion.cpp	/^void DiskOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX1	inject_pebble_3D.cpp	/^void DiskOuterX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f
DiskOuterX2	disk.cpp	/^void DiskOuterX2(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskOuterX2	disk_3d_mhd_dust.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
DiskOuterX2	disk_VSI.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	disk_dust_diffusion.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	disk_multiple_planet_dust_cylindrical.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	disk_multiple_planets_dust_cylindrical.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	disk_planet_dust_cylindrical.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	disk_planet_dust_spherical.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX2	inject_pebble_3D.cpp	/^void DiskOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
DiskOuterX3	disk.cpp	/^void DiskOuterX3(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
DiskOuterX3	disk_dust_diffusion.cpp	/^void DiskOuterX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
Dist	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
Dist	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
DistanceBetweenPoints	gr_blast.cpp	/^Real DistanceBetweenPoints(Real x1, Real x2, Real x3, Real y1, Real y2, Real y3) {$/;"	f	namespace:__anon44
DoOutput	disk_VSI.cpp	/^void DoOutput(MeshBlock *pmb, int dlevel) {$/;"	f
DustDrift_Flag	ssheet_RWI_dust.cpp	/^bool DustDrift_Flag, Damping_Flag;$/;"	m	namespace:__anon55	file:
DustDrift_Flag	ssheet_planet_dust.cpp	/^bool DustDrift_Flag, Damping_Flag;$/;"	m	namespace:__anon76	file:
DustFluidsDyeEntropy	dusty_kh.cpp	/^Real DustFluidsDyeEntropy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon95
DustFluidsDyeEntropy	kh_dust.cpp	/^Real DustFluidsDyeEntropy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon73
DustFluidsGasStd	dust_NSH.cpp	/^Real DustFluidsGasStd(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon69
DustFluidsGasStd	streaming_nonlinear.cpp	/^Real DustFluidsGasStd(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustFluidsRatioMaximum	disk_VSI.cpp	/^Real DustFluidsRatioMaximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon99
DustFluidsRatioMaximum	dust_NSH.cpp	/^Real DustFluidsRatioMaximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon69
DustFluidsRatioMaximum	streaming_nonlinear.cpp	/^Real DustFluidsRatioMaximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustFluidsRatioStd	dust_NSH.cpp	/^Real DustFluidsRatioStd(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon69
DustFluidsRatioStd	streaming_nonlinear.cpp	/^Real DustFluidsRatioStd(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustVel1Maximum	streaming_nonlinear.cpp	/^Real DustVel1Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustVel2Maximum	streaming_nonlinear.cpp	/^Real DustVel2Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustVel3Maximum	streaming_nonlinear.cpp	/^Real DustVel3Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
DustVelProfileCyl	disk_dust_drift.cpp	/^void DustVelProfileCyl(const Real rad, const Real phi, const Real z,$/;"	f	namespace:__anon30
DustVelProfileCyl	dust_diffusion.cpp	/^void DustVelProfileCyl(const Real rad, const Real phi, const Real z,$/;"	f	namespace:__anon83
DustVelProfileCyl_NSH	disk_RWI_2D.cpp	/^void DustVelProfileCyl_NSH(const Real ts, const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon67
DustVelProfileCyl_NSH	disk_dust_diffusion.cpp	/^void DustVelProfileCyl_NSH(const Real ts, const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon36
DustVelProfileCyl_NSH	disk_dust_drift.cpp	/^void DustVelProfileCyl_NSH(const Real ts, const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon30
DustVelProfileCyl_NSH	disk_streaming_cylindrical.cpp	/^void DustVelProfileCyl_NSH(const Real ts, const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon20
DustVelProfileCyl_NSH	disk_streaming_spherical.cpp	/^void DustVelProfileCyl_NSH(const Real ts, const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon41
Eigensystem	dusty_wave.cpp	/^void Eigensystem(const Real d, const Real v1, const Real v2, const Real v3,$/;"	f	namespace:__anon52
Eigensystem	linear_wave.cpp	/^void Eigensystem(const Real d, const Real v1, const Real v2, const Real v3,$/;"	f	namespace:__anon91
FeelOthers_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon33	file:
FeelOthers_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, Gap_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon74	file:
FinalCosineProfile	mignone_advection.cpp	/^Real FinalCosineProfile(Real x2) {$/;"	f	namespace:__anon115
FinalCosineSphericalIntegrand	mignone_advection.cpp	/^Real FinalCosineSphericalIntegrand(Real x2) {$/;"	f	namespace:__anon115
FinalGaussianCylindricalIntegrand	mignone_advection.cpp	/^Real FinalGaussianCylindricalIntegrand(Real x1) {$/;"	f	namespace:__anon115
FinalGaussianProfile	mignone_advection.cpp	/^Real FinalGaussianProfile(Real x1) {$/;"	f	namespace:__anon115
FinalGaussianSphericalIntegrand	mignone_advection.cpp	/^Real FinalGaussianSphericalIntegrand(Real x1) {$/;"	f	namespace:__anon115
FixedBoundary	gr_bondi.cpp	/^void FixedBoundary(MeshBlock *pmb, Coordinates *pcoord, AthenaArray<Real> &prim,$/;"	f
FixedBoundary	gr_geodesic_infall.cpp	/^void FixedBoundary(MeshBlock *pmb, Coordinates *pcoord, AthenaArray<Real> &prim,$/;"	f
FixedBoundary	gr_mhd_inflow.cpp	/^void FixedBoundary(MeshBlock *pmb, Coordinates *pcoord, AthenaArray<Real> &prim,$/;"	f
FixedDust	disk_3d_mhd_dust.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_RWI_2D.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_VSI.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_multiple_planet_dust_cylindrical.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_multiple_planets_dust_cylindrical.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_planet_dust_cylindrical.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	disk_planet_dust_spherical.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	ssheet_RWI_dust.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
FixedDust	ssheet_planet_dust.cpp	/^void FixedDust(MeshBlock *pmb, int il, int iu, int jl, int ju, int kl, int ku,$/;"	f
GM	disk_3d_mhd_dust.cpp	/^Real GM = 1.0, R0 = 1.0;$/;"	m	namespace:__anon25	file:
Gap_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, Gap_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon74	file:
GasVel1Maximum	streaming_nonlinear.cpp	/^Real GasVel1Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
GasVel2Maximum	streaming_nonlinear.cpp	/^Real GasVel2Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
GasVel3Maximum	streaming_nonlinear.cpp	/^Real GasVel3Maximum(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon101
GasVelProfileCyl	disk_dust_drift.cpp	/^void GasVelProfileCyl(const Real rad, const Real phi, const Real z,$/;"	f	namespace:__anon30
GasVelProfileCyl	dust_diffusion.cpp	/^void GasVelProfileCyl(const Real rad, const Real phi, const Real z,$/;"	f	namespace:__anon83
GasVelProfileCyl_NSH	disk_RWI_2D.cpp	/^void GasVelProfileCyl_NSH(const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon67
GasVelProfileCyl_NSH	disk_dust_diffusion.cpp	/^void GasVelProfileCyl_NSH(const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon36
GasVelProfileCyl_NSH	disk_dust_drift.cpp	/^void GasVelProfileCyl_NSH(const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon30
GasVelProfileCyl_NSH	disk_streaming_cylindrical.cpp	/^void GasVelProfileCyl_NSH(const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon20
GasVelProfileCyl_NSH	disk_streaming_spherical.cpp	/^void GasVelProfileCyl_NSH(const Real SN, const Real QN, const Real Psi,$/;"	f	namespace:__anon41
GetBoyerLindquistCoordinates	gr_bondi.cpp	/^void GetBoyerLindquistCoordinates(Real x1, Real x2, Real x3, Real *pr,$/;"	f	namespace:__anon46
GetBoyerLindquistCoordinates	gr_geodesic_infall.cpp	/^void GetBoyerLindquistCoordinates(Real x1, Real x2, Real x3, Real *pr,$/;"	f	namespace:__anon104
GetBoyerLindquistCoordinates	gr_mhd_inflow.cpp	/^void GetBoyerLindquistCoordinates(Real x1, Real x2, Real x3, Real *pr,$/;"	f	namespace:__anon38
GetBoyerLindquistCoordinates	gr_torus.cpp	/^void GetBoyerLindquistCoordinates(Real x1, Real x2, Real x3, Real *p_r, Real *p_th,$/;"	f	namespace:__anon6
GetCartesian	disk_planet_dust_spherical.cpp	/^void GetCartesian(Coordinates *pco, Real &x, Real &y, Real &z, int i, int j, int k) {$/;"	f	namespace:__anon79
GetCylCoord	disk.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon2
GetCylCoord	disk_RWI_2D.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon67
GetCylCoord	disk_dust_diffusion.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon36
GetCylCoord	disk_dust_drift.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon30
GetCylCoord	disk_multiple_planet_dust_cylindrical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon34
GetCylCoord	disk_multiple_planets_dust_cylindrical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon75
GetCylCoord	disk_planet_dust_cylindrical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon65
GetCylCoord	disk_planet_dust_spherical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon79
GetCylCoord	disk_streaming_cylindrical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon20
GetCylCoord	disk_streaming_spherical.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon41
GetCylCoord	dust_diffusion.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon83
GetCylCoord	inject_pebble_3D.cpp	/^void GetCylCoord(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon28
GetCylCoordInSpherical	disk_VSI.cpp	/^void GetCylCoordInSpherical(Coordinates *pco,Real &rad,Real &phi,Real &z,int i,int j,int k) {$/;"	f	namespace:__anon99
GetKerrSchildCoordinates	gr_torus.cpp	/^void GetKerrSchildCoordinates(Real x1, Real x2, Real x3, Real *p_r, Real *p_th,$/;"	f	namespace:__anon5
GetMinkowskiCoordinates	gr_blast.cpp	/^void GetMinkowskiCoordinates(Real x0, Real x1, Real x2, Real x3, Real *pt,$/;"	f	namespace:__anon44
GetMinkowskiCoordinates	gr_linear_wave.cpp	/^void GetMinkowskiCoordinates(Real x0, Real x1, Real x2, Real x3, Real *pt,$/;"	f	namespace:__anon50
GetMinkowskiCoordinates	gr_shock_tube.cpp	/^void GetMinkowskiCoordinates(Real x0, Real x1, Real x2, Real x3, Real *pt,$/;"	f	namespace:__anon59
GetSphCoord	inject_pebble_3D.cpp	/^void GetSphCoord(Coordinates *pco,Real &rad,Real &theta,Real &phi,int i,int j,int k) {$/;"	f	namespace:__anon28
Get_E_kg	inject_pebble_3D.cpp	/^void Get_E_kg(AthenaArray<Real> gas_vel_array, Real &E_kg){$/;"	f	namespace:__anon28
Get_T_rhoe	inject_pebble_3D.cpp	/^Real Get_T_rhoe(Real rhoe, Real rho_g, AthenaArray<Real> rho_d_array, Real fv){$/;"	f	namespace:__anon28
Get_T_rhoe_g	inject_pebble_3D.cpp	/^Real Get_T_rhoe_g(Real rhoe_g, Real rho_g, Real fv){$/;"	f	namespace:__anon28
Get_Z	inject_pebble_3D.cpp	/^Real Get_Z(Real rho_g, Real T){$/;"	f	namespace:__anon28
Get_mu	inject_pebble_3D.cpp	/^Real Get_mu(Real fv){$/;"	f	namespace:__anon28
Get_rhoe	inject_pebble_3D.cpp	/^Real Get_rhoe(Real rhoE_total, Real rho_g, Real E_kg, AthenaArray<Real> rho_d_array, AthenaArray<Real> E_kd_array){$/;"	f	namespace:__anon28
Get_rhomu_d	inject_pebble_3D.cpp	/^Real Get_rhomu_d(AthenaArray<Real> rho_d_array){$/;"	f	namespace:__anon28
Get_vel_new_fromMC	inject_pebble_3D.cpp	/^void Get_vel_new_fromMC(AthenaArray<Real> gas_vel_array,$/;"	f	namespace:__anon28
Hdust	streaming_stratified.cpp	/^Real Hg, Hdust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon119	file:
Hg	streaming_stratified.cpp	/^Real Hg, Hdust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon119	file:
Hill_radius	disk_multiple_planet_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon33	file:
Hill_radius	disk_multiple_planets_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon74	file:
Hill_radius	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
Hill_radius	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
HistoryBs	jgg.cpp	/^Real HistoryBs(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HistoryBxBy	hb3.cpp	/^Real HistoryBxBy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon24
HistoryBxBy	hgb.cpp	/^Real HistoryBxBy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon81
HistoryBxBy	strat.cpp	/^Real HistoryBxBy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon93
HistoryBxc	jgg.cpp	/^Real HistoryBxc(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HistoryBzc	jgg.cpp	/^Real HistoryBzc(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HistorySum	gr_torus.cpp	/^Real HistorySum(MeshBlock *pmb, int iout) {$/;"	f
HistorydBxc	jgg.cpp	/^Real HistorydBxc(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HistorydByc	jgg.cpp	/^Real HistorydByc(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HistorydVxVy	hgb.cpp	/^Real HistorydVxVy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon81
HistorydVxVy	strat.cpp	/^Real HistorydVxVy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon93
Historydvyc	ssheet.cpp	/^Real Historydvyc(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon61
Historydvys	ssheet.cpp	/^Real Historydvys(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon61
Historyvxs	ssheet.cpp	/^Real Historyvxs(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon61
HistoryxidBx	jgg.cpp	/^Real HistoryxidBx(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon89
HoR0	disk_3d_mhd_dust.cpp	/^Real rho0, alpha, HoR0, HoRc, theta_trans;$/;"	m	namespace:__anon25	file:
HoRc	disk_3d_mhd_dust.cpp	/^Real rho0, alpha, HoR0, HoRc, theta_trans;$/;"	m	namespace:__anon25	file:
Hratio	disk_3d_mhd_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon25	file:
Hratio	disk_RWI_2D.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon66	file:
Hratio	disk_VSI.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon98	file:
Hratio	disk_dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon35	file:
Hratio	disk_multiple_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon33	file:
Hratio	disk_multiple_planets_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon74	file:
Hratio	disk_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon64	file:
Hratio	disk_planet_dust_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon78	file:
Hratio	disk_streaming_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon19	file:
Hratio	disk_streaming_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon40	file:
Hratio	dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], nu_dust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon82	file:
Hratio	inject_pebble_3D.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], boundary_D2G[NDUSTFLUIDS], const_stopping_time[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
Hratio	streaming_stratified.cpp	/^Real Hg, Hdust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon119	file:
InflowBoundary	gr_torus.cpp	/^void InflowBoundary(MeshBlock *pmb, Coordinates *pcoord, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
InitUserMeshBlockData	default_pgen.cpp	/^void __attribute__((weak)) MeshBlock::InitUserMeshBlockData(ParameterInput *pin) {$/;"	f	class:MeshBlock
InitUserMeshBlockData	disk_3d_mhd_dust.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin)$/;"	f	class:MeshBlock
InitUserMeshBlockData	disk_VSI.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin) {$/;"	f	class:MeshBlock
InitUserMeshBlockData	dusty_wave.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin) {$/;"	f	class:MeshBlock
InitUserMeshBlockData	gr_torus.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin) {$/;"	f	class:MeshBlock
InitUserMeshBlockData	inject_pebble_3D.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin){$/;"	f	class:MeshBlock
InitUserMeshBlockData	linear_wave.cpp	/^void MeshBlock::InitUserMeshBlockData(ParameterInput *pin) {$/;"	f	class:MeshBlock
InitUserMeshData	blast.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	cpaw.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	default_pgen.cpp	/^void __attribute__((weak)) Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_3d_mhd_dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_RWI_2D.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_VSI.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_dust_diffusion.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_dust_drift.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_multiple_planet_dust_cylindrical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_multiple_planets_dust_cylindrical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_planet_dust_cylindrical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_planet_dust_spherical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_streaming_cylindrical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	disk_streaming_spherical.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dmr.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dmr_dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_NSH.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_collision.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_collision_different_Ts.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_diffusion.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_inelastic_collision.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dust_squaredrag.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dusty_kh.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dusty_shock.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dusty_soundwave.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dusty_wave.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	dusty_wave_1d.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	field_loop_poles.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	from_array.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	gr_bondi.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	gr_geodesic_infall.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	gr_linear_wave.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	gr_mhd_inflow.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	gr_torus.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	hb3.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	hgb.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	inject_pebble_3D.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	jeans.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	jet.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	jgg.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	kh.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	kh_dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	linear_wave.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	magnoh.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	mignone_advection.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	noh.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	poisson.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	resist.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	rt.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	scalar_diff.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	shk_cloud.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	slotted_cylinder.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	ssheet.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	ssheet_RWI_dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	ssheet_planet_dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	strat.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	streaming_eigen.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	streaming_eigen_2dust.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	streaming_nonlinear.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	streaming_stratified.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	turb.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	visc.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	visc_dustfluids.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitUserMeshData	visc_scalars.cpp	/^void Mesh::InitUserMeshData(ParameterInput *pin) {$/;"	f	class:Mesh
InitialCosineProfile	mignone_advection.cpp	/^Real InitialCosineProfile(Real x2) {$/;"	f	namespace:__anon115
InitialCosineSphericalIntegrand	mignone_advection.cpp	/^Real InitialCosineSphericalIntegrand(Real x2) {$/;"	f	namespace:__anon115
InitialGaussianCylindricalIntegrand	mignone_advection.cpp	/^Real InitialGaussianCylindricalIntegrand(Real x1) {$/;"	f	namespace:__anon115
InitialGaussianProfile	mignone_advection.cpp	/^Real InitialGaussianProfile(Real x1) {$/;"	f	namespace:__anon115
InitialGaussianSphericalIntegrand	mignone_advection.cpp	/^Real InitialGaussianSphericalIntegrand(Real x1) {$/;"	f	namespace:__anon115
InnerWaveDamping	disk_multiple_planet_dust_cylindrical.cpp	/^void InnerWaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDamping	disk_multiple_planets_dust_cylindrical.cpp	/^void InnerWaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingDust	disk_VSI.cpp	/^void InnerWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingDust	disk_multiple_planet_dust_cylindrical.cpp	/^void InnerWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingDust	disk_multiple_planets_dust_cylindrical.cpp	/^void InnerWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingGas	disk_VSI.cpp	/^void InnerWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingGas	disk_planet_dust_cylindrical.cpp	/^void InnerWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWaveDampingGas	disk_planet_dust_spherical.cpp	/^void InnerWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
InnerWavedamping	disk_dust_diffusion.cpp	/^void InnerWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
InnerWavedamping	disk_dust_drift.cpp	/^void InnerWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon30
InnerWavedamping	disk_streaming_cylindrical.cpp	/^void InnerWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon20
InnerWavedamping	disk_streaming_spherical.cpp	/^void InnerWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon41
InnerWavedamping	dust_diffusion.cpp	/^void InnerWavedamping(MeshBlock *pmb, const Real time, const Real dt,$/;"	f	namespace:__anon83
InnerX1_NSH	disk_dust_drift.cpp	/^void InnerX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
InnerX1_NSH	disk_streaming_cylindrical.cpp	/^void InnerX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
InnerX1_NSH	disk_streaming_spherical.cpp	/^void InnerX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
InnerX2_NSH	disk_streaming_spherical.cpp	/^void InnerX2_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
Inner_Dust_Damping_Flag	disk_VSI.cpp	/^Inner_Dust_Damping_Flag, Outer_Dust_Damping_Flag,$/;"	m	namespace:__anon98	file:
Inner_Gas_Damping_Flag	disk_VSI.cpp	/^bool Inner_Gas_Damping_Flag, Outer_Gas_Damping_Flag, Theta_Gas_Damping_Flag,$/;"	m	namespace:__anon98	file:
IntegrandFinal	mignone_advection.cpp	/^Real (*IntegrandFinal)(Real x1);$/;"	m	namespace:__anon114	file:
IntegrandInitial	mignone_advection.cpp	/^Real (*IntegrandInitial)(Real x1);$/;"	m	namespace:__anon114	file:
IntegratedA1	gr_torus.cpp	/^Real IntegratedA1(Real x1_m, Real x1_p, Real x2, Real x3) {$/;"	f	namespace:__anon14
IntegratedA2	gr_torus.cpp	/^Real IntegratedA2(Real x1, Real x2_m, Real x2_p, Real x3) {$/;"	f	namespace:__anon15
IntegratedA3	gr_torus.cpp	/^Real IntegratedA3(Real x1, Real x2, Real x3_m, Real x3_p) {$/;"	f	namespace:__anon16
IsBigEndianOutput	disk_VSI.cpp	/^int IsBigEndianOutput() {$/;"	f
Isothermal_Flag	disk_RWI_2D.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon66	file:
Isothermal_Flag	disk_VSI.cpp	/^Isothermal_Flag, RadiativeConduction_Flag;$/;"	m	namespace:__anon98	file:
Isothermal_Flag	disk_dust_diffusion.cpp	/^bool Damping_Flag, Isothermal_Flag, Bump_Flag;$/;"	m	namespace:__anon35	file:
Isothermal_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon33	file:
Isothermal_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon74	file:
Isothermal_Flag	disk_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon64	file:
Isothermal_Flag	disk_planet_dust_spherical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon78	file:
Isothermal_Flag	dust_diffusion.cpp	/^bool Damping_Flag, Isothermal_Flag;$/;"	m	namespace:__anon82	file:
JetInnerX1	jet.cpp	/^void JetInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
K_para	dusty_shock.cpp	/^Real K_para[NDUSTFLUIDS];$/;"	m	namespace:__anon85	file:
Kai0	dust_NSH.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon68	file:
Kai0	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
Kai0	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
Kai0	streaming_eigen.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon31	file:
Kai0	streaming_eigen_2dust.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon110	file:
Kai0	streaming_nonlinear.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon100	file:
Kai0	streaming_stratified.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon119	file:
Keplerian_interpolate	disk_dust_drift.cpp	/^void Keplerian_interpolate(const Real r_active, const Real r_ghost,$/;"	f	namespace:__anon30
Keplerian_interpolate	disk_streaming_cylindrical.cpp	/^void Keplerian_interpolate(const Real r_active, const Real r_ghost,$/;"	f	namespace:__anon20
Keplerian_interpolate	disk_streaming_spherical.cpp	/^void Keplerian_interpolate(const Real r_active, const Real r_ghost,$/;"	f	namespace:__anon41
Keplerian_velocity	disk_RWI_2D.cpp	/^Real Keplerian_velocity(const Real rad) {$/;"	f	namespace:__anon67
Keplerian_velocity	disk_dust_diffusion.cpp	/^Real Keplerian_velocity(const Real rad) {$/;"	f	namespace:__anon36
Keplerian_velocity	disk_dust_drift.cpp	/^Real Keplerian_velocity(const Real rad) {$/;"	f	namespace:__anon30
Keplerian_velocity	disk_streaming_cylindrical.cpp	/^Real Keplerian_velocity(const Real rad) {$/;"	f	namespace:__anon20
Keplerian_velocity	disk_streaming_spherical.cpp	/^Real Keplerian_velocity(const Real rad) {$/;"	f	namespace:__anon41
Kpar	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
Kpar	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
Linearinterpolate	dust_diffusion.cpp	/^void Linearinterpolate(const Real x_ac0, const Real x_ac1, const Real y_ac0, const Real y_ac1,$/;"	f	namespace:__anon83
LocalIsothermalEOS	disk_RWI_2D.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_VSI.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_dust_diffusion.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
LocalIsothermalEOS	disk_dust_drift.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon30
LocalIsothermalEOS	disk_multiple_planet_dust_cylindrical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_multiple_planets_dust_cylindrical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_planet_dust_cylindrical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_planet_dust_spherical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, int il, int iu, int jl,$/;"	f
LocalIsothermalEOS	disk_streaming_cylindrical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon20
LocalIsothermalEOS	disk_streaming_spherical.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon41
LocalIsothermalEOS	dust_diffusion.cpp	/^void LocalIsothermalEOS(MeshBlock *pmb, const Real time, const Real dt,$/;"	f	namespace:__anon83
LogHAux	gr_torus.cpp	/^Real LogHAux(Real r, Real sth) {$/;"	f	namespace:__anon11
LoopInnerX1	field_loop_poles.cpp	/^void LoopInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,FaceField &b,$/;"	f
LoopInnerX2	field_loop_poles.cpp	/^void LoopInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,FaceField &b,$/;"	f
LoopOuterX1	field_loop_poles.cpp	/^void LoopOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,FaceField &b,$/;"	f
LoopOuterX2	field_loop_poles.cpp	/^void LoopOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,FaceField &b,$/;"	f
LowerWaveDampingGas	disk_VSI.cpp	/^void LowerWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
LowerZ	streaming_stratified.cpp	/^void LowerZ(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f	namespace:__anon120
Lx	hgb.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon80	file:
Lx	jgg.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon88	file:
Ly	hgb.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon80	file:
Ly	jgg.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon88	file:
Lz	hgb.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon80	file:
Lz	jgg.cpp	/^Real Lx, Ly, Lz; \/\/ root grid size, global to share with output functions$/;"	m	namespace:__anon88	file:
MagneticFieldConfigs	gr_torus.cpp	/^enum class MagneticFieldConfigs {density, loops};$/;"	c	file:
MassTransferWithinHill	disk_multiple_planet_dust_cylindrical.cpp	/^void MassTransferWithinHill(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon34
MassTransferWithinHill	disk_multiple_planets_dust_cylindrical.cpp	/^void MassTransferWithinHill(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon75
MassTransferWithinHill	disk_planet_dust_cylindrical.cpp	/^void MassTransferWithinHill(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon65
MassTransferWithinHill	disk_planet_dust_spherical.cpp	/^void MassTransferWithinHill(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon79
MassTransfer_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon33	file:
MassTransfer_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon74	file:
MassTransfer_Flag	disk_planet_dust_cylindrical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon64	file:
MassTransfer_Flag	disk_planet_dust_spherical.cpp	/^bool Damping_Flag, Isothermal_Flag, MassTransfer_Flag,$/;"	m	namespace:__anon78	file:
MaxV2	dusty_wave.cpp	/^Real MaxV2(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon52
MaxV2	linear_wave.cpp	/^Real MaxV2(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon91
MyDustDiffusivity	disk_RWI_2D.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon67
MyDustDiffusivity	disk_VSI.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon99
MyDustDiffusivity	disk_dust_diffusion.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon36
MyDustDiffusivity	disk_multiple_planet_dust_cylindrical.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon34
MyDustDiffusivity	disk_multiple_planets_dust_cylindrical.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon75
MyDustDiffusivity	disk_planet_dust_cylindrical.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon65
MyDustDiffusivity	disk_planet_dust_spherical.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon79
MyDustDiffusivity	dmr_dust.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f
MyDustDiffusivity	dust_diffusion.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon83
MyDustDiffusivity	inject_pebble_3D.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon28
MyDustDiffusivity	ssheet_RWI_dust.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon56
MyDustDiffusivity	ssheet_planet_dust.cpp	/^void MyDustDiffusivity(DustFluids *pdf, MeshBlock *pmb,$/;"	f	namespace:__anon77
MyMeshSpacingX1	inject_pebble_3D.cpp	/^Real MyMeshSpacingX1(Real x, RegionSize rs){$/;"	f	namespace:__anon28
MySource	disk_3d_mhd_dust.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon26
MySource	disk_RWI_2D.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon67
MySource	disk_VSI.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon99
MySource	disk_dust_diffusion.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
MySource	disk_dust_drift.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon30
MySource	disk_multiple_planet_dust_cylindrical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon34
MySource	disk_multiple_planets_dust_cylindrical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon75
MySource	disk_planet_dust_cylindrical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon65
MySource	disk_planet_dust_spherical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon79
MySource	disk_streaming_cylindrical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon20
MySource	disk_streaming_spherical.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon41
MySource	dust_diffusion.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt,$/;"	f	namespace:__anon83
MySource	inject_pebble_3D.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon28
MySource	ssheet_RWI_dust.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon56
MySource	ssheet_planet_dust.cpp	/^void MySource(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
MyStoppingTime	disk_3d_mhd_dust.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon26
MyStoppingTime	disk_RWI_2D.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon67
MyStoppingTime	disk_VSI.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon99
MyStoppingTime	disk_dust_diffusion.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
MyStoppingTime	disk_multiple_planet_dust_cylindrical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon34
MyStoppingTime	disk_multiple_planets_dust_cylindrical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon75
MyStoppingTime	disk_planet_dust_cylindrical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon65
MyStoppingTime	disk_planet_dust_spherical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon79
MyStoppingTime	disk_streaming_cylindrical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon20
MyStoppingTime	disk_streaming_spherical.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon41
MyStoppingTime	dust_NSH.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon69
MyStoppingTime	dusty_shock.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon86
MyStoppingTime	inject_pebble_3D.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon28
MyStoppingTime	ssheet_RWI_dust.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon56
MyStoppingTime	ssheet_planet_dust.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
MyStoppingTime	streaming_eigen.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon32
MyStoppingTime	streaming_eigen_2dust.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon111
MyStoppingTime	streaming_nonlinear.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon101
MyStoppingTime	streaming_stratified.cpp	/^void MyStoppingTime(MeshBlock *pmb, const Real time, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon120
MyTimeStep	disk_3d_mhd_dust.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon26
MyTimeStep	disk_dust_drift.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon30
MyTimeStep	disk_streaming_cylindrical.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon20
MyTimeStep	disk_streaming_spherical.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon41
MyTimeStep	dust_collision.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon118
MyTimeStep	dust_collision_different_Ts.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon97
MyTimeStep	dust_diffusion.cpp	/^Real MyTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon83
MyTimeStep	dust_inelastic_collision.cpp	/^Real MyTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon109
MyTimeStep	dust_squaredrag.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon107
MyTimeStep	dusty_shock.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon86
MyTimeStep	dusty_soundwave.cpp	/^Real MyTimeStep(MeshBlock *pmb)$/;"	f	namespace:__anon71
N_gl	mignone_advection.cpp	/^constexpr int N_gl = 12;$/;"	m	namespace:__anon114	file:
N_gl	slotted_cylinder.cpp	/^constexpr int N_gl = 12;$/;"	m	namespace:__anon47	file:
Noh3DOuterX1	noh.cpp	/^void Noh3DOuterX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
Noh3DOuterX2	noh.cpp	/^void Noh3DOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
Noh3DOuterX3	noh.cpp	/^void Noh3DOuterX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, FaceField &b,$/;"	f
Omega0	disk.cpp	/^Real Omega0;$/;"	m	namespace:__anon1	file:
Omega0	disk_RWI_2D.cpp	/^dfloor, dffloor, Omega0, user_dt, phi_vortex,$/;"	m	namespace:__anon66	file:
Omega0	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
Omega0	disk_dust_diffusion.cpp	/^Real dfloor, dffloor, Omega0, user_dt;$/;"	m	namespace:__anon35	file:
Omega0	disk_dust_drift.cpp	/^Real Omega0;$/;"	m	namespace:__anon29	file:
Omega0	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
Omega0	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
Omega0	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
Omega0	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
Omega0	disk_streaming_cylindrical.cpp	/^Real Omega0;$/;"	m	namespace:__anon19	file:
Omega0	disk_streaming_spherical.cpp	/^Real Omega0;$/;"	m	namespace:__anon40	file:
Omega0	dust_diffusion.cpp	/^Real Omega0;$/;"	m	namespace:__anon82	file:
Omega0	jgg.cpp	/^Real qshear, Omega0;$/;"	m	namespace:__anon88	file:
Omega0	ssheet.cpp	/^Real qshear, Omega0;$/;"	m	namespace:__anon60	file:
Omega0	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
Omega0	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
Omega_0	dust_NSH.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon68	file:
Omega_0	hb3.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon23	file:
Omega_0	hgb.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon80	file:
Omega_0	strat.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon92	file:
Omega_0	streaming_eigen.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon31	file:
Omega_0	streaming_eigen_2dust.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon110	file:
Omega_0	streaming_nonlinear.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon100	file:
Omega_0	streaming_stratified.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon119	file:
OuterWaveDamping	disk_multiple_planet_dust_cylindrical.cpp	/^void OuterWaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDamping	disk_multiple_planets_dust_cylindrical.cpp	/^void OuterWaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingDust	disk_VSI.cpp	/^void OuterWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingDust	disk_multiple_planet_dust_cylindrical.cpp	/^void OuterWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingDust	disk_multiple_planets_dust_cylindrical.cpp	/^void OuterWaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingGas	disk_VSI.cpp	/^void OuterWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingGas	disk_planet_dust_cylindrical.cpp	/^void OuterWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWaveDampingGas	disk_planet_dust_spherical.cpp	/^void OuterWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
OuterWavedamping	disk_dust_diffusion.cpp	/^void OuterWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
OuterWavedamping	disk_dust_drift.cpp	/^void OuterWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon30
OuterWavedamping	disk_streaming_cylindrical.cpp	/^void OuterWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon20
OuterWavedamping	disk_streaming_spherical.cpp	/^void OuterWavedamping(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon41
OuterWavedamping	dust_diffusion.cpp	/^void OuterWavedamping(MeshBlock *pmb, const Real time, const Real dt,$/;"	f	namespace:__anon83
OuterX1_NSH	disk_dust_drift.cpp	/^void OuterX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
OuterX1_NSH	disk_streaming_cylindrical.cpp	/^void OuterX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
OuterX1_NSH	disk_streaming_spherical.cpp	/^void OuterX1_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
OuterX2_NSH	disk_streaming_spherical.cpp	/^void OuterX2_NSH(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
Outer_Dust_Damping_Flag	disk_VSI.cpp	/^Inner_Dust_Damping_Flag, Outer_Dust_Damping_Flag,$/;"	m	namespace:__anon98	file:
Outer_Gas_Damping_Flag	disk_VSI.cpp	/^bool Inner_Gas_Damping_Flag, Outer_Gas_Damping_Flag, Theta_Gas_Damping_Flag,$/;"	m	namespace:__anon98	file:
OutflowBoundary	gr_torus.cpp	/^void OutflowBoundary(MeshBlock *pmb, Coordinates *pcoord, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
P0	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
PassiveDyeEntropy	kh.cpp	/^Real PassiveDyeEntropy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon63
PassiveDyeEntropy	kh_dust.cpp	/^Real PassiveDyeEntropy(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon73
PertEven	streaming_eigen.cpp	/^Real PertEven(const Real fR, const Real fI, const Real x, const Real z, const Real t) {$/;"	f	namespace:__anon32
PertEven	streaming_eigen_2dust.cpp	/^Real PertEven(const Real fR, const Real fI, const Real x, const Real z, const Real t) {$/;"	f	namespace:__anon111
PertOdd	streaming_eigen.cpp	/^Real PertOdd(const Real fR, const Real fI, const Real x, const Real z, const Real t) {$/;"	f	namespace:__anon32
PertOdd	streaming_eigen_2dust.cpp	/^Real PertOdd(const Real fR, const Real fI, const Real x, const Real z, const Real t) {$/;"	f	namespace:__anon111
PlanetaryGravity	disk_dust_diffusion.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
PlanetaryGravity	disk_multiple_planet_dust_cylindrical.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon34
PlanetaryGravity	disk_multiple_planets_dust_cylindrical.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon75
PlanetaryGravity	disk_planet_dust_cylindrical.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon65
PlanetaryGravity	disk_planet_dust_spherical.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon79
PlanetaryGravity	inject_pebble_3D.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon28
PlanetaryGravity	ssheet_planet_dust.cpp	/^void PlanetaryGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
PlanetaryGravityOrder	disk_multiple_planet_dust_cylindrical.cpp	/^int PlanetaryGravityOrder[10];$/;"	m	namespace:__anon33	file:
PlanetaryGravityOrder	disk_multiple_planets_dust_cylindrical.cpp	/^int PlanetaryGravityOrder[10];$/;"	m	namespace:__anon74	file:
PlanetaryGravityOrder	disk_planet_dust_cylindrical.cpp	/^int PlanetaryGravityOrder;$/;"	m	namespace:__anon64	file:
PlanetaryGravityOrder	disk_planet_dust_spherical.cpp	/^int PlanetaryGravityOrder;$/;"	m	namespace:__anon78	file:
PlanetaryGravityOrder	ssheet_planet_dust.cpp	/^int PlanetaryGravityOrder;$/;"	m	namespace:__anon76	file:
PoverR	disk.cpp	/^Real PoverR(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon2
PoverR	disk_dust_drift.cpp	/^Real PoverR(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon30
PoverRho	disk_RWI_2D.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon67
PoverRho	disk_VSI.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon99
PoverRho	disk_dust_diffusion.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon36
PoverRho	disk_multiple_planet_dust_cylindrical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon34
PoverRho	disk_multiple_planets_dust_cylindrical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon75
PoverRho	disk_planet_dust_cylindrical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon65
PoverRho	disk_planet_dust_spherical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon79
PoverRho	disk_streaming_cylindrical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon20
PoverRho	disk_streaming_spherical.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon41
PoverRho	dust_diffusion.cpp	/^Real PoverRho(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon83
PressureGradient	dust_NSH.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon69
PressureGradient	ssheet_RWI_dust.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon56
PressureGradient	ssheet_planet_dust.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
PressureGradient	streaming_eigen.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon32
PressureGradient	streaming_eigen_2dust.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon111
PressureGradient	streaming_nonlinear.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon101
PressureGradient	streaming_stratified.cpp	/^void PressureGradient(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon120
ProblemGenerator	blast.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	cpaw.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	default_pgen.cpp	/^void __attribute__((weak)) MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_3d_mhd_dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin)$/;"	f	class:MeshBlock
ProblemGenerator	disk_RWI_2D.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_VSI.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_dust_diffusion.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_dust_drift.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_multiple_planet_dust_cylindrical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_multiple_planets_dust_cylindrical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_planet_dust_cylindrical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_planet_dust_spherical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_streaming_cylindrical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	disk_streaming_spherical.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dmr.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dmr_dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_NSH.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_collision.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_collision_different_Ts.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_diffusion.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_inelastic_collision.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dust_squaredrag.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dusty_kh.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dusty_shock.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dusty_soundwave.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dusty_wave.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	dusty_wave_1d.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	eos_test.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	fft.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	field_loop.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	field_loop_poles.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	from_array.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_blast.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_bondi.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_geodesic_infall.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_linear_wave.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_mhd_inflow.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_shock_tube.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	gr_torus.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	hb3.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	hgb.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	inject_pebble_3D.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	jeans.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	jet.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	jgg.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	kh.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	kh_dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	linear_wave.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	lw_implode.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	magnoh.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	mignone_advection.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	noh.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	orszag_tang.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	poisson.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	quirk.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	resist.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	rotor.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	rt.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	scalar_diff.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	shk_cloud.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	shock_tube.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	shu_osher.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	slotted_cylinder.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	ssheet.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	ssheet_RWI_dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	ssheet_planet_dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	strat.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	streaming_eigen.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	streaming_eigen_2dust.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	streaming_nonlinear.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	streaming_stratified.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	turb.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	twoibw.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	visc.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	visc_dustfluids.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProblemGenerator	visc_scalars.cpp	/^void MeshBlock::ProblemGenerator(ParameterInput *pin) {$/;"	f	class:MeshBlock
ProjectPressureInnerX2	rt.cpp	/^void ProjectPressureInnerX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
ProjectPressureInnerX3	rt.cpp	/^void ProjectPressureInnerX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
ProjectPressureOuterX2	rt.cpp	/^void ProjectPressureOuterX2(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
ProjectPressureOuterX3	rt.cpp	/^void ProjectPressureOuterX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
Psi	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
QuadraticRoot	gr_linear_wave.cpp	/^Real QuadraticRoot(Real a1, Real a0, bool greater_root) {$/;"	f	namespace:__anon50
QuarticRoots	gr_linear_wave.cpp	/^void QuarticRoots(Real a3, Real a2, Real a1, Real a0, Real *px1, Real *px2,$/;"	f	namespace:__anon50
R0	disk_3d_mhd_dust.cpp	/^Real GM = 1.0, R0 = 1.0;$/;"	m	namespace:__anon25	file:
RBmin	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
RK4_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon33	file:
RK4_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, Gap_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon74	file:
RadialD2G	disk_dust_drift.cpp	/^Real RadialD2G(const Real rad, const Real initial_dust2gas, const Real slope)$/;"	f	namespace:__anon30
RadialD2G	disk_streaming_cylindrical.cpp	/^Real RadialD2G(const Real rad, const Real initial_dust2gas, const Real slope)$/;"	f	namespace:__anon20
RadialD2G	disk_streaming_spherical.cpp	/^Real RadialD2G(const Real rad, const Real initial_dust2gas, const Real slope)$/;"	f	namespace:__anon41
RadialD2G	dust_diffusion.cpp	/^Real RadialD2G(const Real rad, const Real initial_dust2gas, const Real slope) {$/;"	f	namespace:__anon83
RadiativeConduction_Flag	disk_VSI.cpp	/^Isothermal_Flag, RadiativeConduction_Flag;$/;"	m	namespace:__anon98	file:
RadiativeConduction_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon33	file:
RadiativeConduction_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, Gap_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon74	file:
RadiativeConduction_Flag	disk_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag;$/;"	m	namespace:__anon64	file:
RadiativeConduction_Flag	disk_planet_dust_spherical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag;$/;"	m	namespace:__anon78	file:
RadiativeCondution	disk_VSI.cpp	/^void RadiativeCondution(HydroDiffusion *phdif, MeshBlock *pmb,$/;"	f	namespace:__anon99
RadiativeCondution	disk_multiple_planet_dust_cylindrical.cpp	/^void RadiativeCondution(HydroDiffusion *phdif, MeshBlock *pmb,$/;"	f	namespace:__anon34
RadiativeCondution	disk_multiple_planets_dust_cylindrical.cpp	/^void RadiativeCondution(HydroDiffusion *phdif, MeshBlock *pmb,$/;"	f	namespace:__anon75
RadiativeCondution	disk_planet_dust_cylindrical.cpp	/^void RadiativeCondution(HydroDiffusion *phdif, MeshBlock *pmb,$/;"	f	namespace:__anon65
RadiativeCondution	disk_planet_dust_spherical.cpp	/^void RadiativeCondution(HydroDiffusion *phdif, MeshBlock *pmb,$/;"	f	namespace:__anon79
Rbuf	disk_3d_mhd_dust.cpp	/^Real Rbuf, rho_floor, time_drag;$/;"	m	namespace:__anon25	file:
RefinementCondition	blast.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	disk_RWI_2D.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon67
RefinementCondition	disk_VSI.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon99
RefinementCondition	disk_dust_diffusion.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon36
RefinementCondition	disk_multiple_planet_dust_cylindrical.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon34
RefinementCondition	disk_multiple_planets_dust_cylindrical.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon75
RefinementCondition	disk_planet_dust_cylindrical.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon65
RefinementCondition	disk_planet_dust_spherical.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f	namespace:__anon79
RefinementCondition	dmr.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	dmr_dust.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	dusty_kh.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	dusty_wave.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	field_loop_poles.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	kh.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	kh_dust.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	linear_wave.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	resist.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	rt.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	scalar_diff.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	slotted_cylinder.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RefinementCondition	visc.cpp	/^int RefinementCondition(MeshBlock *pmb) {$/;"	f
RungeKutta	disk_multiple_planet_dust_cylindrical.cpp	/^void RungeKutta(Real *q0, Real dt, Real *gmasses, Real *q1, int n, bool *feelothers) {$/;"	f
RungeKutta	disk_multiple_planets_dust_cylindrical.cpp	/^void RungeKutta(Real *q0, Real dt, Real *gmasses, Real *q1, int n, bool *feelothers) {$/;"	f
ShBoxCoord	dust_NSH.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon68	file:
ShBoxCoord	hb3.cpp	/^int ShBoxCoord, ipert,ifield; \/\/ initial pattern$/;"	m	namespace:__anon23	file:
ShBoxCoord	ssheet_RWI_dust.cpp	/^int ShBoxCoord;$/;"	m	namespace:__anon55	file:
ShBoxCoord	streaming_eigen.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon31	file:
ShBoxCoord	streaming_eigen_2dust.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon110	file:
ShBoxCoord	streaming_nonlinear.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon100	file:
ShBoxCoord	streaming_stratified.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon119	file:
ShockCloudInnerX1	shk_cloud.cpp	/^void ShockCloudInnerX1(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
ShockInnerX1	dusty_shock.cpp	/^void ShockInnerX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
ShockOuterX1	dusty_shock.cpp	/^void ShockOuterX1(MeshBlock *pmb,Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df,$/;"	f
SlottedCylinderProfile	slotted_cylinder.cpp	/^Real SlottedCylinderProfile(Real x1, Real x2) {$/;"	f	namespace:__anon48
Sph2Car	inject_pebble_3D.cpp	/^void Sph2Car(Real rad, Real theta,Real phi, Real &vx, Real &vy, Real &vz, Real v1, Real v2, Real v3) {$/;"	f	namespace:__anon28
SsheetLowerX3	ssheet_RWI_dust.cpp	/^void SsheetLowerX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
SsheetLowerX3	ssheet_planet_dust.cpp	/^void SsheetLowerX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
SsheetUpperX3	ssheet_RWI_dust.cpp	/^void SsheetUpperX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
SsheetUpperX3	ssheet_planet_dust.cpp	/^void SsheetUpperX3(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim,$/;"	f
Stokes_number	disk_3d_mhd_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon25	file:
Stokes_number	disk_RWI_2D.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon66	file:
Stokes_number	disk_VSI.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon98	file:
Stokes_number	disk_dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon35	file:
Stokes_number	disk_dust_drift.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon29	file:
Stokes_number	disk_multiple_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon33	file:
Stokes_number	disk_multiple_planets_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon74	file:
Stokes_number	disk_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon64	file:
Stokes_number	disk_planet_dust_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon78	file:
Stokes_number	disk_streaming_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon19	file:
Stokes_number	disk_streaming_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon40	file:
Stokes_number	dust_NSH.cpp	/^Real Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon68	file:
Stokes_number	dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], nu_dust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon82	file:
Stokes_number	inject_pebble_3D.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], boundary_D2G[NDUSTFLUIDS], const_stopping_time[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
Stokes_number	ssheet_RWI_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon55	file:
Stokes_number	ssheet_planet_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon76	file:
Stokes_number	streaming_eigen.cpp	/^Real Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
Stokes_number	streaming_eigen_2dust.cpp	/^Real Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
Stokes_number	streaming_nonlinear.cpp	/^Real Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon100	file:
Stokes_number	streaming_stratified.cpp	/^Real Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon119	file:
StratOutflowInnerX3	strat.cpp	/^void StratOutflowInnerX3(MeshBlock *pmb, Coordinates *pco,$/;"	f
StratOutflowOuterX3	strat.cpp	/^void StratOutflowOuterX3(MeshBlock *pmb, Coordinates *pco,$/;"	f
Swap4Bytes	disk_VSI.cpp	/^void Swap4Bytes(void *vdat) {$/;"	f	namespace:__anon99
TemperatureBisect	gr_bondi.cpp	/^Real TemperatureBisect(Real r, Real t_min, Real t_max) {$/;"	f	namespace:__anon46
TemperatureMin	gr_bondi.cpp	/^Real TemperatureMin(Real r, Real t_min, Real t_max) {$/;"	f	namespace:__anon46
TemperatureResidual	gr_bondi.cpp	/^Real TemperatureResidual(Real t, Real r) {$/;"	f	namespace:__anon46
ThermalRelaxation	disk_RWI_2D.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon67
ThermalRelaxation	disk_VSI.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon99
ThermalRelaxation	disk_dust_diffusion.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon36
ThermalRelaxation	disk_multiple_planet_dust_cylindrical.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon34
ThermalRelaxation	disk_multiple_planets_dust_cylindrical.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon75
ThermalRelaxation	disk_planet_dust_cylindrical.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon65
ThermalRelaxation	disk_planet_dust_spherical.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon79
ThermalRelaxation	ssheet_RWI_dust.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon56
ThermalRelaxation	ssheet_planet_dust.cpp	/^void ThermalRelaxation(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
ThetaGrid	gr_torus.cpp	/^Real ThetaGrid(Real x2, RegionSize rs) {$/;"	f
Theta_Gas_Damping_Flag	disk_VSI.cpp	/^bool Inner_Gas_Damping_Flag, Outer_Gas_Damping_Flag, Theta_Gas_Damping_Flag,$/;"	m	namespace:__anon98	file:
TotalMomentum1	dust_diffusion.cpp	/^Real TotalMomentum1(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon83
TotalMomentum2	dust_diffusion.cpp	/^Real TotalMomentum2(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon83
TotalMomentum3	dust_diffusion.cpp	/^Real TotalMomentum3(MeshBlock *pmb, int iout) {$/;"	f	namespace:__anon83
TransferFeedback_Flag	disk_multiple_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon33	file:
TransferFeedback_Flag	disk_multiple_planets_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, Gap_Flag, TransferFeedback_Flag, RK4_Flag, FeelOthers_Flag[11];$/;"	m	namespace:__anon74	file:
TransferFeedback_Flag	disk_planet_dust_cylindrical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag;$/;"	m	namespace:__anon64	file:
TransferFeedback_Flag	disk_planet_dust_spherical.cpp	/^     RadiativeConduction_Flag, TransferFeedback_Flag;$/;"	m	namespace:__anon78	file:
TransformContravariantFromBoyerLindquist	gr_torus.cpp	/^void TransformContravariantFromBoyerLindquist(Real at_bl, Real ar_bl, Real ath_bl,$/;"	f	namespace:__anon7
TransformCovariantFromKerrSchild	gr_torus.cpp	/^void TransformCovariantFromKerrSchild(Real a_r, Real a_th, Real a_ph, Real x1, Real x2,$/;"	f	namespace:__anon8
TransformVector	gr_blast.cpp	/^void TransformVector(Real at, Real ax, Real ay, Real az, Real x, Real y, Real z,$/;"	f	namespace:__anon44
TransformVector	gr_bondi.cpp	/^void TransformVector(Real a0_bl, Real a1_bl, Real a2_bl, Real a3_bl, Real r,$/;"	f	namespace:__anon46
TransformVector	gr_linear_wave.cpp	/^void TransformVector(Real at, Real ax, Real ay, Real az, Real x, Real y, Real z,$/;"	f	namespace:__anon50
TransformVector	gr_mhd_inflow.cpp	/^void TransformVector(Real a0_bl, Real a1_bl, Real a2_bl, Real a3_bl, Real r,$/;"	f	namespace:__anon38
TransformVector	gr_shock_tube.cpp	/^void TransformVector(Real at, Real ax, Real ay, Real az, Real x, Real y, Real z,$/;"	f	namespace:__anon59
TranslatePlanetRK4	disk_multiple_planet_dust_cylindrical.cpp	/^void TranslatePlanetRK4(Real *qold, Real c1, Real c2, Real c3, Real *qnew, int n) {$/;"	f
TranslatePlanetRK4	disk_multiple_planets_dust_cylindrical.cpp	/^void TranslatePlanetRK4(Real *qold, Real c1, Real c2, Real c3, Real *qnew, int n) {$/;"	f
UpperWaveDampingGas	disk_VSI.cpp	/^void UpperWaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
UpperZ	streaming_stratified.cpp	/^void UpperZ(MeshBlock *pmb, Coordinates *pco, AthenaArray<Real> &prim, AthenaArray<Real> &prim_df, FaceField &b,$/;"	f	namespace:__anon120
UserOrbitalVelocity	disk_dust_diffusion.cpp	/^Real UserOrbitalVelocity(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon36
UserOrbitalVelocity	disk_multiple_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon34
UserOrbitalVelocity	disk_multiple_planets_dust_cylindrical.cpp	/^Real UserOrbitalVelocity(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon75
UserOrbitalVelocity	disk_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon65
UserOrbitalVelocity_r	disk_dust_diffusion.cpp	/^Real UserOrbitalVelocity_r(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon36
UserOrbitalVelocity_r	disk_multiple_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_r(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon34
UserOrbitalVelocity_r	disk_multiple_planets_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_r(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon75
UserOrbitalVelocity_r	disk_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_r(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon65
UserOrbitalVelocity_z	disk_dust_diffusion.cpp	/^Real UserOrbitalVelocity_z(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon36
UserOrbitalVelocity_z	disk_multiple_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_z(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon34
UserOrbitalVelocity_z	disk_multiple_planets_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_z(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon75
UserOrbitalVelocity_z	disk_planet_dust_cylindrical.cpp	/^Real UserOrbitalVelocity_z(OrbitalAdvection *porb, Real x1, Real x2, Real x3) {$/;"	f	namespace:__anon65
UserTimeStep	dust_NSH.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon69
UserTimeStep	ssheet_RWI_dust.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon56
UserTimeStep	ssheet_planet_dust.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon77
UserTimeStep	streaming_eigen.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon32
UserTimeStep	streaming_eigen_2dust.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon111
UserTimeStep	streaming_nonlinear.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon101
UserTimeStep	streaming_stratified.cpp	/^Real UserTimeStep(MeshBlock *pmb) {$/;"	f	namespace:__anon120
UserWorkAfterLoop	blast.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	cpaw.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	default_pgen.cpp	/^void __attribute__((weak)) Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	dusty_wave.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	eos_test.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	fft.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	gr_linear_wave.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	gr_torus.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	jeans.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	jgg.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	linear_wave.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	mignone_advection.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	poisson.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	quirk.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	shock_tube.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	slotted_cylinder.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	strat.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkAfterLoop	turb.cpp	/^void Mesh::UserWorkAfterLoop(ParameterInput *pin) {$/;"	f	class:Mesh
UserWorkBeforeOutput	default_pgen.cpp	/^void __attribute__((weak)) MeshBlock::UserWorkBeforeOutput(ParameterInput *pin) {$/;"	f	class:MeshBlock
UserWorkBeforeOutput	dusty_wave.cpp	/^void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin) {$/;"	f	class:MeshBlock
UserWorkBeforeOutput	gr_torus.cpp	/^void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin) {$/;"	f	class:MeshBlock
UserWorkBeforeOutput	inject_pebble_3D.cpp	/^void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin){$/;"	f	class:MeshBlock
UserWorkBeforeOutput	linear_wave.cpp	/^void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin) {$/;"	f	class:MeshBlock
UserWorkBeforeOutput	strat.cpp	/^void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin) {$/;"	f	class:MeshBlock
UserWorkInLoop	default_pgen.cpp	/^void __attribute__((weak)) Mesh::UserWorkInLoop() {$/;"	f	class:Mesh
UserWorkInLoop	default_pgen.cpp	/^void __attribute__((weak)) MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_3d_mhd_dust.cpp	/^void MeshBlock::UserWorkInLoop()$/;"	f	class:MeshBlock
UserWorkInLoop	disk_RWI_2D.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_VSI.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_multiple_planet_dust_cylindrical.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_multiple_planets_dust_cylindrical.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_planet_dust_cylindrical.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	disk_planet_dust_spherical.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	dusty_wave_1d.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	gr_torus.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	hb3.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	jgg.cpp	/^void Mesh::UserWorkInLoop() {$/;"	f	class:Mesh
UserWorkInLoop	poisson.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	ssheet.cpp	/^void Mesh::UserWorkInLoop() {$/;"	f	class:Mesh
UserWorkInLoop	ssheet_RWI_dust.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	ssheet_planet_dust.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
UserWorkInLoop	strat.cpp	/^void MeshBlock::UserWorkInLoop() {$/;"	f	class:MeshBlock
VectorPotential	gr_torus.cpp	/^void VectorPotential(Real x1, Real x2, Real x3, Real *p_a_1, Real *p_a_2, Real *p_a_3) {$/;"	f	namespace:__anon17
VelProfileCyl	disk.cpp	/^Real VelProfileCyl(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon2
VelProfileCyl	field_loop_poles.cpp	/^void VelProfileCyl(const Real x1, const Real x2, const Real x3,$/;"	f	namespace:__anon22
VelProfileCyl_Dust	disk_streaming_cylindrical.cpp	/^Real VelProfileCyl_Dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon20
VelProfileCyl_Dust	disk_streaming_spherical.cpp	/^Real VelProfileCyl_Dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon41
VelProfileCyl_Gas	disk_streaming_cylindrical.cpp	/^Real VelProfileCyl_Gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon20
VelProfileCyl_Gas	disk_streaming_spherical.cpp	/^Real VelProfileCyl_Gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon41
VelProfileCyl_bump	disk_RWI_2D.cpp	/^Real VelProfileCyl_bump(const Real rad, const Real phi, const Real z, const Real diff) {$/;"	f	namespace:__anon67
VelProfileCyl_bump	disk_dust_diffusion.cpp	/^Real VelProfileCyl_bump(const Real rad, const Real phi, const Real z, const Real diff) {$/;"	f	namespace:__anon36
VelProfileCyl_dust	disk_RWI_2D.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon67
VelProfileCyl_dust	disk_VSI.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon99
VelProfileCyl_dust	disk_dust_diffusion.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon36
VelProfileCyl_dust	disk_multiple_planet_dust_cylindrical.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon34
VelProfileCyl_dust	disk_multiple_planets_dust_cylindrical.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon75
VelProfileCyl_dust	disk_planet_dust_cylindrical.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon65
VelProfileCyl_dust	disk_planet_dust_spherical.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon79
VelProfileCyl_dust	dust_diffusion.cpp	/^Real VelProfileCyl_dust(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon83
VelProfileCyl_gap	disk_multiple_planet_dust_cylindrical.cpp	/^Real VelProfileCyl_gap(const Real rad, const Real phi, const Real z, const Real diff) {$/;"	f	namespace:__anon34
VelProfileCyl_gap	disk_multiple_planets_dust_cylindrical.cpp	/^Real VelProfileCyl_gap(const Real rad, const Real phi, const Real z, const Real diff) {$/;"	f	namespace:__anon75
VelProfileCyl_gas	disk_RWI_2D.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon67
VelProfileCyl_gas	disk_VSI.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon99
VelProfileCyl_gas	disk_dust_diffusion.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon36
VelProfileCyl_gas	disk_multiple_planet_dust_cylindrical.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon34
VelProfileCyl_gas	disk_multiple_planets_dust_cylindrical.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon75
VelProfileCyl_gas	disk_planet_dust_cylindrical.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon65
VelProfileCyl_gas	disk_planet_dust_spherical.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon79
VelProfileCyl_gas	dust_diffusion.cpp	/^Real VelProfileCyl_gas(const Real rad, const Real phi, const Real z) {$/;"	f	namespace:__anon83
VertGrav	strat.cpp	/^void VertGrav(MeshBlock *pmb, const Real time, const Real dt,$/;"	f
VerticalGravity	ssheet_RWI_dust.cpp	/^void VerticalGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon56
VerticalGravity	ssheet_planet_dust.cpp	/^void VerticalGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon77
VerticalGravity	streaming_stratified.cpp	/^void VerticalGravity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon120
Vr_Mdot	disk_VSI.cpp	/^void Vr_Mdot(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon99
Vr_constMdot	dust_diffusion.cpp	/^void Vr_constMdot(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon83
Vr_interpolate_inner_nomatter	disk_dust_drift.cpp	/^void Vr_interpolate_inner_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon30
Vr_interpolate_inner_nomatter	disk_streaming_cylindrical.cpp	/^void Vr_interpolate_inner_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon20
Vr_interpolate_inner_nomatter	disk_streaming_spherical.cpp	/^void Vr_interpolate_inner_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon41
Vr_interpolate_nomatter	disk_RWI_2D.cpp	/^void Vr_interpolate_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon67
Vr_interpolate_nomatter	disk_dust_diffusion.cpp	/^void Vr_interpolate_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon36
Vr_interpolate_outer_nomatter	disk_dust_drift.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon30
Vr_interpolate_outer_nomatter	disk_multiple_planet_dust_cylindrical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon34
Vr_interpolate_outer_nomatter	disk_multiple_planets_dust_cylindrical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon75
Vr_interpolate_outer_nomatter	disk_planet_dust_cylindrical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon65
Vr_interpolate_outer_nomatter	disk_planet_dust_spherical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon79
Vr_interpolate_outer_nomatter	disk_streaming_cylindrical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon20
Vr_interpolate_outer_nomatter	disk_streaming_spherical.cpp	/^void Vr_interpolate_outer_nomatter(const Real r_active, const Real r_ghost, const Real sigma_active,$/;"	f	namespace:__anon41
Vr_outflow	disk_VSI.cpp	/^void Vr_outflow(const Real r_active, const Real r_ghost, const Real rho_active,$/;"	f	namespace:__anon99
WaveDamping	ssheet_RWI_dust.cpp	/^void WaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
WaveDamping	ssheet_planet_dust.cpp	/^void WaveDamping(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
WaveDampingDust	disk_RWI_2D.cpp	/^void WaveDampingDust(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
WaveDampingGas	disk_RWI_2D.cpp	/^void WaveDampingGas(MeshBlock *pmb, const Real time, const Real dt, int il, int iu,$/;"	f
a	gr_bondi.cpp	/^Real m, a;          \/\/ black hole mass and spin$/;"	m	namespace:__anon45	file:
a	gr_mhd_inflow.cpp	/^Real a;                           \/\/ spin of black hole (0 <= a < M)$/;"	m	namespace:__anon37	file:
a	gr_torus.cpp	/^Real m, a;                                    \/\/ black hole parameters$/;"	m	namespace:__anon4	file:
a_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10], a_orbit[10], e_orbit[10],$/;"	m	namespace:__anon33	file:
a_width	mignone_advection.cpp	/^Real a_width, b_center, alpha;$/;"	m	namespace:__anon114	file:
accretion_radius	disk_multiple_planet_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon33	file:
accretion_radius	disk_multiple_planets_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon74	file:
accretion_radius	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
accretion_radius	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
accretion_rate	disk_multiple_planet_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon33	file:
accretion_rate	disk_multiple_planets_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon74	file:
accretion_rate	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
accretion_rate	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
ad_hyp	disk_3d_mhd_dust.cpp	/^bool ad_hyp, ad_lin, ad_log;$/;"	m	namespace:__anon25	file:
ad_lin	disk_3d_mhd_dust.cpp	/^bool ad_hyp, ad_lin, ad_log;$/;"	m	namespace:__anon25	file:
ad_log	disk_3d_mhd_dust.cpp	/^bool ad_hyp, ad_lin, ad_log;$/;"	m	namespace:__anon25	file:
alpha	disk_3d_mhd_dust.cpp	/^Real rho0, alpha, HoR0, HoRc, theta_trans;$/;"	m	namespace:__anon25	file:
alpha	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
alpha	mignone_advection.cpp	/^Real a_width, b_center, alpha;$/;"	m	namespace:__anon114	file:
amp	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
amp	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
amp	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
amp	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
amp	dust_NSH.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon68	file:
amp	dust_diffusion.cpp	/^Real nuiso, iso_cs, amp;$/;"	m	namespace:__anon82	file:
amp	dusty_soundwave.cpp	/^Real amp, lambda, k_par;              \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon70	file:
amp	dusty_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon51	file:
amp	dusty_wave_1d.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon102	file:
amp	gr_linear_wave.cpp	/^Real amp;                     \/\/ amplitude of wave$/;"	m	namespace:__anon49	file:
amp	hb3.cpp	/^Real amp, nwx, nwy; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon23	file:
amp	hgb.cpp	/^Real amp, beta;$/;"	m	namespace:__anon80	file:
amp	jeans.cpp	/^Real amp, njeans, lambda, kwave; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon84	file:
amp	jgg.cpp	/^Real amp, beta;$/;"	m	namespace:__anon88	file:
amp	linear_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon90	file:
amp	ssheet.cpp	/^Real amp; \/\/ amplitude$/;"	m	namespace:__anon60	file:
amp	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
amp	streaming_eigen.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon31	file:
amp	streaming_eigen_2dust.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon110	file:
amp	streaming_nonlinear.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon100	file:
amp	streaming_stratified.cpp	/^Real amp, nwx, nwy, nwz, sigma_g0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon119	file:
ang_2	cpaw.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon53	file:
ang_2	dusty_wave.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon51	file:
ang_2	jeans.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon84	file:
ang_2	linear_wave.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon90	file:
ang_2_vert	dusty_wave.cpp	/^bool ang_2_vert, ang_3_vert; \/\/ Switches to set ang_2 and\/or ang_3 to pi\/2$/;"	m	namespace:__anon51	file:
ang_2_vert	linear_wave.cpp	/^bool ang_2_vert, ang_3_vert; \/\/ Switches to set ang_2 and\/or ang_3 to pi\/2$/;"	m	namespace:__anon90	file:
ang_3	cpaw.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon53	file:
ang_3	dusty_wave.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon51	file:
ang_3	jeans.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon84	file:
ang_3	linear_wave.cpp	/^Real ang_2, ang_3; \/\/ Rotation angles about the y and z' axis$/;"	m	namespace:__anon90	file:
ang_3_vert	dusty_wave.cpp	/^bool ang_2_vert, ang_3_vert; \/\/ Switches to set ang_2 and\/or ang_3 to pi\/2$/;"	m	namespace:__anon51	file:
ang_3_vert	linear_wave.cpp	/^bool ang_2_vert, ang_3_vert; \/\/ Switches to set ang_2 and\/or ang_3 to pi\/2$/;"	m	namespace:__anon90	file:
b	gr_linear_wave.cpp	/^Real u[4], b[4];              \/\/ contravariant quantities$/;"	m	namespace:__anon49	file:
b0	field_loop_poles.cpp	/^Real xc, yc, zc, beta, b0;$/;"	m	namespace:__anon21	file:
b0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
b_center	mignone_advection.cpp	/^Real a_width, b_center, alpha;$/;"	m	namespace:__anon114	file:
b_par	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
b_perp	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
basename	disk_VSI.cpp	/^std::string basename;$/;"	m	namespace:__anon98	file:
bcc	gr_linear_wave.cpp	/^AthenaArray<Real> bcc;        \/\/ cell-centered initial magnetic fields$/;"	v
beta	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
beta	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
beta	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
beta	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
beta	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
beta	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
beta	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
beta	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
beta	field_loop_poles.cpp	/^Real xc, yc, zc, beta, b0;$/;"	m	namespace:__anon21	file:
beta	hb3.cpp	/^Real beta, B0;$/;"	m	namespace:__anon23	file:
beta	hgb.cpp	/^Real amp, beta;$/;"	m	namespace:__anon80	file:
beta	jgg.cpp	/^Real amp, beta;$/;"	m	namespace:__anon88	file:
beta	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
beta	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
beta	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
beta_gas	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
beta_gas	disk_dust_diffusion.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon35	file:
beta_gas	disk_dust_drift.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon29	file:
beta_gas	disk_streaming_cylindrical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon19	file:
beta_gas	disk_streaming_spherical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon40	file:
boundary_D2G	inject_pebble_3D.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], boundary_D2G[NDUSTFLUIDS], const_stopping_time[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
bphi0	magnoh.cpp	/^Real bphi0, bz;$/;"	m	namespace:__anon57	file:
bsq_over_rho	gr_bondi.cpp	/^Real bsq_over_rho;  \/\/ b^2\/rho at inner radius$/;"	m	namespace:__anon45	file:
bx	gr_linear_wave.cpp	/^Real bx;                      \/\/ longitudinal magnetic field$/;"	m	namespace:__anon49	file:
bx0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
bx0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
bx0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
bx0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
bx_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
bx_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
bxl	shk_cloud.cpp	/^Real bxl, byl, bzl;$/;"	m	namespace:__anon39	file:
by0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
by0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
by0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
by0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
by_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
by_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
byl	shk_cloud.cpp	/^Real bxl, byl, bzl;$/;"	m	namespace:__anon39	file:
bz	magnoh.cpp	/^Real bphi0, bz;$/;"	m	namespace:__anon57	file:
bz0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
bz0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
bz0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
bz0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
bz_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
bz_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
bzl	shk_cloud.cpp	/^Real bxl, byl, bzl;$/;"	m	namespace:__anon39	file:
c1	gr_bondi.cpp	/^Real c1, c2;        \/\/ useful constants$/;"	m	namespace:__anon45	file:
c2	gr_bondi.cpp	/^Real c1, c2;        \/\/ useful constants$/;"	m	namespace:__anon45	file:
cen1	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
cen1	visc_dustfluids.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2;$/;"	m	namespace:__anon116	file:
cen2	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
cen2	visc_dustfluids.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2;$/;"	m	namespace:__anon116	file:
center_x1	slotted_cylinder.cpp	/^Real s_width, s_height, center_x1, center_x2;$/;"	m	namespace:__anon47	file:
center_x2	slotted_cylinder.cpp	/^Real s_width, s_height, center_x1, center_x2;$/;"	m	namespace:__anon47	file:
compute_error	gr_linear_wave.cpp	/^bool compute_error;           \/\/ flag indicating L1 errors should be computed and saved$/;"	m	namespace:__anon49	file:
const_nu_dust	inject_pebble_3D.cpp	/^Real const_nu_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
const_stopping_time	inject_pebble_3D.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], boundary_D2G[NDUSTFLUIDS], const_stopping_time[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
copy_velocity	inject_pebble_3D.cpp	/^void copy_velocity(MeshBlock *pmb, const Real time, const Real dt, const AthenaArray<Real> &prim,$/;"	f	namespace:__anon28
cos_a2	cpaw.cpp	/^Real fac, sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon53	file:
cos_a2	dusty_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon51	file:
cos_a2	jeans.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon84	file:
cos_a2	linear_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon90	file:
cos_a3	cpaw.cpp	/^Real fac, sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon53	file:
cos_a3	dusty_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon51	file:
cos_a3	jeans.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon84	file:
cos_a3	linear_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon90	file:
cos_tilt	gr_torus.cpp	/^Real sin_tilt, cos_tilt;                      \/\/ calculated tilt parameters$/;"	m	namespace:__anon4	file:
cs2	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
cs2_0	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
cs_planet	disk_multiple_planet_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10], a_orbit[10], e_orbit[10],$/;"	m	namespace:__anon33	file:
cs_planet	disk_multiple_planets_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10],$/;"	m	namespace:__anon74	file:
cs_planet	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
cs_planet	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
curr_time	disk_VSI.cpp	/^prev_time, curr_time, next_time, edt;$/;"	m	namespace:__anon98	file:
d0	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
d0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
d0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
d0	hgb.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon80	file:
d0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
d0	jgg.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon88	file:
d0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
d0	mignone_advection.cpp	/^constexpr Real d0 = 1.0;$/;"	m	namespace:__anon114	file:
d0	slotted_cylinder.cpp	/^constexpr Real d0 = 1.0;$/;"	m	namespace:__anon47	file:
d0	ssheet.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon60	file:
d0	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
d0	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
d_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
d_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
damping_rate	disk_RWI_2D.cpp	/^tau_damping, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon66	file:
damping_rate	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
damping_rate	disk_dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon35	file:
damping_rate	disk_dust_drift.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon29	file:
damping_rate	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
damping_rate	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
damping_rate	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
damping_rate	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
damping_rate	disk_streaming_cylindrical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon19	file:
damping_rate	disk_streaming_spherical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon40	file:
damping_rate	dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon82	file:
damping_rate	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
damping_rate	ssheet_planet_dust.cpp	/^x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon76	file:
dby	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
dby	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
dby	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
dby	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
dbz	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
dbz	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
dbz	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
dbz	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
delta_b	gr_linear_wave.cpp	/^Real delta_u[4], delta_b[4];  \/\/ perturbations to contravariant quantities$/;"	m	namespace:__anon49	file:
delta_pgas	gr_linear_wave.cpp	/^Real delta_rho, delta_pgas;   \/\/ perturbations to thermodynamic quantities$/;"	m	namespace:__anon49	file:
delta_rho	gr_linear_wave.cpp	/^Real delta_rho, delta_pgas;   \/\/ perturbations to thermodynamic quantities$/;"	m	namespace:__anon49	file:
delta_rho_dust_imag	dusty_soundwave.cpp	/^Real delta_rho_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon70	file:
delta_rho_dust_real	dusty_soundwave.cpp	/^Real delta_rho_dust_real[NDUSTFLUIDS];$/;"	m	namespace:__anon70	file:
delta_rho_gas_imag	dusty_soundwave.cpp	/^Real delta_rho_gas_real, delta_rho_gas_imag;$/;"	m	namespace:__anon70	file:
delta_rho_gas_imag	dusty_wave_1d.cpp	/^Real delta_rho_gas_real, delta_rho_gas_imag;$/;"	m	namespace:__anon102	file:
delta_rho_gas_real	dusty_soundwave.cpp	/^Real delta_rho_gas_real, delta_rho_gas_imag;$/;"	m	namespace:__anon70	file:
delta_rho_gas_real	dusty_wave_1d.cpp	/^Real delta_rho_gas_real, delta_rho_gas_imag;$/;"	m	namespace:__anon102	file:
delta_u	gr_linear_wave.cpp	/^Real delta_u[4], delta_b[4];  \/\/ perturbations to contravariant quantities$/;"	m	namespace:__anon49	file:
delta_v	gr_linear_wave.cpp	/^Real delta_v[4];              \/\/ perturbations to 3-velocity$/;"	m	namespace:__anon49	file:
delta_vel_dust_imag	dusty_soundwave.cpp	/^Real delta_vel_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon70	file:
delta_vel_dust_real	dusty_soundwave.cpp	/^Real delta_vel_dust_real[NDUSTFLUIDS];$/;"	m	namespace:__anon70	file:
delta_vel_gas_imag	dusty_soundwave.cpp	/^Real delta_vel_gas_real, delta_vel_gas_imag;$/;"	m	namespace:__anon70	file:
delta_vel_gas_imag	dusty_wave_1d.cpp	/^Real delta_vel_gas_real, delta_vel_gas_imag;$/;"	m	namespace:__anon102	file:
delta_vel_gas_real	dusty_soundwave.cpp	/^Real delta_vel_gas_real, delta_vel_gas_imag;$/;"	m	namespace:__anon70	file:
delta_vel_gas_real	dusty_wave_1d.cpp	/^Real delta_vel_gas_real, delta_vel_gas_imag;$/;"	m	namespace:__anon102	file:
den	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
density	gr_torus.cpp	/^enum class MagneticFieldConfigs {density, loops};$/;"	m	class:MagneticFieldConfigs	file:
derefine_factor	disk_RWI_2D.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon66	file:
derefine_factor	disk_planet_dust_cylindrical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon64	file:
derefine_factor	disk_planet_dust_spherical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon78	file:
dffloor	disk_RWI_2D.cpp	/^dfloor, dffloor, Omega0, user_dt, phi_vortex,$/;"	m	namespace:__anon66	file:
dffloor	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
dffloor	disk_dust_diffusion.cpp	/^Real dfloor, dffloor, Omega0, user_dt;$/;"	m	namespace:__anon35	file:
dffloor	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
dffloor	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
dffloor	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
dffloor	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
dffloor	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
dffloor	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
dffloor	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
dffloor	dusty_kh.cpp	/^Real dffloor;$/;"	m	namespace:__anon94	file:
dffloor	kh_dust.cpp	/^Real dffloor;$/;"	m	namespace:__anon72	file:
dfloor	disk.cpp	/^Real dfloor;$/;"	m	namespace:__anon1	file:
dfloor	disk_RWI_2D.cpp	/^dfloor, dffloor, Omega0, user_dt, phi_vortex,$/;"	m	namespace:__anon66	file:
dfloor	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
dfloor	disk_dust_diffusion.cpp	/^Real dfloor, dffloor, Omega0, user_dt;$/;"	m	namespace:__anon35	file:
dfloor	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
dfloor	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
dfloor	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
dfloor	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
dfloor	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
dfloor	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
dfloor	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
dfloor	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
dfloor	inject_pebble_3D.cpp	/^Real dfloor, pfloor, float_min;$/;"	m	namespace:__anon27	file:
dfloor	strat.cpp	/^Real dfloor, pfloor;$/;"	m	namespace:__anon92	file:
dl	shk_cloud.cpp	/^Real gmma1, dl, pl, ul;$/;"	m	namespace:__anon39	file:
dowrite	disk_VSI.cpp	/^int n0, nvar, dowrite, file_number, out_level;$/;"	m	namespace:__anon98	file:
dslope	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
dslope	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
dslope	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
dslope	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
dslope	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
dslope	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
dslope	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
dslope	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
dslope	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
dslope	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
dslope	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
dust_dens_slope	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
dust_dens_slope	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
dust_dens_slope	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
dust_dens_slope	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
dust_start_injection	inject_pebble_3D.cpp	/^Real min_tol, max_dfvdt, dust_start_injection, injection_Tsoft;$/;"	m	namespace:__anon27	file:
dwidth	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
dwidth	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
dwidth	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
dwidth	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
e_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10], a_orbit[10], e_orbit[10],$/;"	m	namespace:__anon33	file:
edt	disk_VSI.cpp	/^prev_time, curr_time, next_time, edt;$/;"	m	namespace:__anon98	file:
error_output	jgg.cpp	/^bool error_output;$/;"	m	namespace:__anon88	file:
error_output	ssheet.cpp	/^bool error_output;$/;"	m	namespace:__anon60	file:
etaVk	dust_NSH.cpp	/^Real etaVk; \/\/ The amplitude of pressure gradient force$/;"	m	namespace:__anon68	file:
etaVk	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
etaVk	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
etaVk	streaming_eigen.cpp	/^Real etaVk; \/\/ The amplitude of pressure gradient force$/;"	m	namespace:__anon31	file:
etaVk	streaming_eigen_2dust.cpp	/^Real etaVk; \/\/ The amplitude of pressure gradient force$/;"	m	namespace:__anon110	file:
etaVk	streaming_nonlinear.cpp	/^Real etaVk; \/\/ The amplitude of pressure gradient force$/;"	m	namespace:__anon100	file:
etaVk	streaming_stratified.cpp	/^Real etaVk; \/\/ The amplitude of pressure gradient force$/;"	m	namespace:__anon119	file:
eta_gas	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
eta_gas	disk_dust_diffusion.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon35	file:
eta_gas	disk_dust_drift.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon29	file:
eta_gas	disk_streaming_cylindrical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon19	file:
eta_gas	disk_streaming_spherical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon40	file:
eta_ofac_in	disk_3d_mhd_dust.cpp	/^Real eta_ofac_in, eta_ofac_mid, theta_Rin, theta_Rout, fcool;$/;"	m	namespace:__anon25	file:
eta_ofac_mid	disk_3d_mhd_dust.cpp	/^Real eta_ofac_in, eta_ofac_mid, theta_Rin, theta_Rout, fcool;$/;"	m	namespace:__anon25	file:
ev	dusty_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon51	file:
ev	linear_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon90	file:
f_ICE_inter0	inject_pebble_3D.cpp	/^Real f_ICE_inter0, m_p0, rho_sil_inter, rho_ice_inter;$/;"	m	namespace:__anon27	file:
fac	cpaw.cpp	/^Real fac, sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon53	file:
fcool	disk_3d_mhd_dust.cpp	/^Real eta_ofac_in, eta_ofac_mid, theta_Rin, theta_Rout, fcool;$/;"	m	namespace:__anon25	file:
fft_data	jgg.cpp	/^  fftw_complex *fft_data;$/;"	m	namespace:__anon88	file:
field_config	gr_torus.cpp	/^MagneticFieldConfigs field_config;            \/\/ type of magnetic field$/;"	m	namespace:__anon4	file:
file_number	disk_VSI.cpp	/^int n0, nvar, dowrite, file_number, out_level;$/;"	m	namespace:__anon98	file:
finest_lev	disk_3d_mhd_dust.cpp	/^int  finest_lev;$/;"	m	namespace:__anon25	file:
float_min	inject_pebble_3D.cpp	/^Real dfloor, pfloor, float_min;$/;"	m	namespace:__anon27	file:
flux_radii	gr_torus.cpp	/^Real *flux_radii;                             \/\/ locations to calculate fluxes$/;"	m	namespace:__anon4	file:
fplan	jgg.cpp	/^  fftw_plan fplan;$/;"	m	namespace:__anon88	file:
gMth	disk_multiple_planet_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon33	file:
gMth	disk_multiple_planets_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon74	file:
gMth	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
gMth	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
gMth	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
gam	dusty_soundwave.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon70	file:
gam	dusty_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon51	file:
gam	dusty_wave_1d.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon102	file:
gam	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
gam	linear_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon90	file:
gamma1	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
gamma_adi	gr_torus.cpp	/^Real gamma_adi;                               \/\/ adiabatic index$/;"	m	namespace:__anon4	file:
gamma_adi_red	gr_linear_wave.cpp	/^Real gamma_adi_red;           \/\/ reduced adiabatic index \\Gamma\/(\\Gamma-1)$/;"	m	namespace:__anon49	file:
gamma_gas	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
gamma_gas	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
gamma_gas	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
gamma_gas	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
gamma_gas	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
gamma_gas	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
gamma_gas	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
gamma_gas	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
gamma_gas	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
gamma_gas	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
gamma_gas	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
gamma_gas	dusty_shock.cpp	/^Real user_dt, iso_cs, xshock, gamma_gas, vel_right;$/;"	m	namespace:__anon85	file:
gamma_gas	field_loop_poles.cpp	/^Real vy0, rho0, isocs2, gamma_gas;$/;"	m	namespace:__anon21	file:
gamma_gas	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
gconst	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
get_a_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^Real get_a_orbit(int num) {$/;"	f
get_e_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^Real get_e_orbit(int num) {$/;"	f
get_omega_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^Real get_omega_orbit(int num) {$/;"	f
get_phi_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^Real get_phi_orbit(int num) {$/;"	f
gm	quirk.cpp	/^Real gm;$/;"	m	namespace:__anon105	file:
gm0	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
gm0	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
gm0	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
gm0	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
gm0	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
gm0	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
gm0	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
gm0	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
gm0	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
gm0	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
gm0	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
gm0	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
gm0	visc_dustfluids.cpp	/^Real nuiso, gm0;$/;"	m	namespace:__anon116	file:
gm0	visc_scalars.cpp	/^Real nuiso, gm0;$/;"	m	namespace:__anon18	file:
gm1	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
gm1	dust_NSH.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon68	file:
gm1	dusty_soundwave.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon70	file:
gm1	dusty_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon51	file:
gm1	dusty_wave_1d.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon102	file:
gm1	hb3.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon23	file:
gm1	hgb.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon80	file:
gm1	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
gm1	jet.cpp	/^Real gm1, x2_0, x3_0;$/;"	m	namespace:__anon42	file:
gm1	jgg.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon88	file:
gm1	linear_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon90	file:
gm1	magnoh.cpp	/^Real gm1;$/;"	m	namespace:__anon57	file:
gm1	ssheet.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon60	file:
gm1	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
gm1	streaming_eigen.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon31	file:
gm1	streaming_eigen_2dust.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon110	file:
gm1	streaming_nonlinear.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon100	file:
gm1	streaming_stratified.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon119	file:
gm_cur	disk_multiple_planet_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon33	file:
gm_cur	disk_multiple_planets_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon74	file:
gmma	noh.cpp	/^Real gmma, gmma1;$/;"	m	namespace:__anon112	file:
gmma1	noh.cpp	/^Real gmma, gmma1;$/;"	m	namespace:__anon112	file:
gmma1	shk_cloud.cpp	/^Real gmma1, dl, pl, ul;$/;"	m	namespace:__anon39	file:
gmp	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
gmp	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
gmp	disk_multiple_planet_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon33	file:
gmp	disk_multiple_planets_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon74	file:
gmp	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
gmp	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
gmp	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
gmp	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
gmp	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
gmp	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
gmstar	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
gmstar	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
gmstar	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
grav_acc	rt.cpp	/^Real grav_acc;$/;"	m	namespace:__anon87	file:
h_grid	gr_torus.cpp	/^Real h_grid;                                  \/\/ grid compression parameter$/;"	m	namespace:__anon4	file:
hst_dt	jgg.cpp	/^Real hst_dt, hst_next_time;$/;"	m	namespace:__anon88	file:
hst_dt	ssheet.cpp	/^Real hst_dt, hst_next_time;$/;"	m	namespace:__anon60	file:
hst_next_time	jgg.cpp	/^Real hst_dt, hst_next_time;$/;"	m	namespace:__anon88	file:
hst_next_time	ssheet.cpp	/^Real hst_dt, hst_next_time;$/;"	m	namespace:__anon60	file:
ifield	dust_NSH.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon68	file:
ifield	hb3.cpp	/^int ShBoxCoord, ipert,ifield; \/\/ initial pattern$/;"	m	namespace:__anon23	file:
ifield	streaming_eigen.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon31	file:
ifield	streaming_eigen_2dust.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon110	file:
ifield	streaming_nonlinear.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon100	file:
ifield	streaming_stratified.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon119	file:
initial	gr_linear_wave.cpp	/^AthenaArray<Real> initial;    \/\/ initial conditions$/;"	v
initial_D2G	disk_3d_mhd_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon25	file:
initial_D2G	disk_RWI_2D.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon66	file:
initial_D2G	disk_VSI.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon98	file:
initial_D2G	disk_dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon35	file:
initial_D2G	disk_dust_drift.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon29	file:
initial_D2G	disk_multiple_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon33	file:
initial_D2G	disk_multiple_planets_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon74	file:
initial_D2G	disk_planet_dust_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon64	file:
initial_D2G	disk_planet_dust_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon78	file:
initial_D2G	disk_streaming_cylindrical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon19	file:
initial_D2G	disk_streaming_spherical.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon40	file:
initial_D2G	dmr_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon113	file:
initial_D2G	dust_NSH.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon68	file:
initial_D2G	dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], nu_dust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon82	file:
initial_D2G	dusty_shock.cpp	/^Real initial_D2G;$/;"	m	namespace:__anon85	file:
initial_D2G	dusty_soundwave.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon70	file:
initial_D2G	inject_pebble_3D.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], boundary_D2G[NDUSTFLUIDS], const_stopping_time[NDUSTFLUIDS];$/;"	m	namespace:__anon27	file:
initial_D2G	kh_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon72	file:
initial_D2G	ssheet_RWI_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon55	file:
initial_D2G	ssheet_planet_dust.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS];$/;"	m	namespace:__anon76	file:
initial_D2G	streaming_eigen.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
initial_D2G	streaming_eigen_2dust.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
initial_D2G	streaming_nonlinear.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon100	file:
initial_D2G	streaming_stratified.cpp	/^Real initial_D2G[NDUSTFLUIDS];$/;"	m	namespace:__anon119	file:
injection_Tsoft	inject_pebble_3D.cpp	/^Real min_tol, max_dfvdt, dust_start_injection, injection_Tsoft;$/;"	m	namespace:__anon27	file:
inner_ratio_region	disk_RWI_2D.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon66	file:
inner_ratio_region	disk_VSI.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon98	file:
inner_ratio_region	disk_dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon35	file:
inner_ratio_region	disk_dust_drift.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon29	file:
inner_ratio_region	disk_multiple_planet_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon33	file:
inner_ratio_region	disk_multiple_planets_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon74	file:
inner_ratio_region	disk_planet_dust_cylindrical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon64	file:
inner_ratio_region	disk_planet_dust_spherical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon78	file:
inner_ratio_region	disk_streaming_cylindrical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon19	file:
inner_ratio_region	disk_streaming_spherical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon40	file:
inner_ratio_region	dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon82	file:
inner_ratio_region	ssheet_RWI_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon55	file:
inner_ratio_region	ssheet_planet_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon76	file:
inner_width_damping	disk_RWI_2D.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon66	file:
inner_width_damping	disk_VSI.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon98	file:
inner_width_damping	disk_dust_diffusion.cpp	/^    inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon35	file:
inner_width_damping	disk_dust_drift.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon29	file:
inner_width_damping	disk_multiple_planet_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon33	file:
inner_width_damping	disk_multiple_planets_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon74	file:
inner_width_damping	disk_planet_dust_cylindrical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon64	file:
inner_width_damping	disk_planet_dust_spherical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon78	file:
inner_width_damping	disk_streaming_cylindrical.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon19	file:
inner_width_damping	disk_streaming_spherical.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon40	file:
inner_width_damping	dust_diffusion.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon82	file:
inner_width_damping	ssheet_RWI_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon55	file:
inner_width_damping	ssheet_planet_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon76	file:
interp_values	gr_mhd_inflow.cpp	/^AthenaArray<Real> interp_values;  \/\/ table for analytic solution$/;"	m	namespace:__anon37	file:
inv_gm1	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
inv_gm1	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
inv_omega_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
inv_omega_planet	disk_multiple_planet_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10], a_orbit[10], e_orbit[10],$/;"	m	namespace:__anon33	file:
inv_omega_planet	disk_multiple_planets_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10],$/;"	m	namespace:__anon74	file:
inv_omega_planet	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
inv_omega_planet	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
inv_sqrt2gmp	disk_multiple_planet_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon33	file:
inv_sqrt2gmp	disk_multiple_planets_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon74	file:
inv_sqrt2gmp	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
inv_sqrt2gmp	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
ipert	dust_NSH.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon68	file:
ipert	hb3.cpp	/^int ShBoxCoord, ipert,ifield; \/\/ initial pattern$/;"	m	namespace:__anon23	file:
ipert	hgb.cpp	/^int ipert;$/;"	m	namespace:__anon80	file:
ipert	jgg.cpp	/^int ipert;$/;"	m	namespace:__anon88	file:
ipert	ssheet.cpp	/^int ipert; \/\/ initial pattern$/;"	m	namespace:__anon60	file:
ipert	streaming_eigen.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon31	file:
ipert	streaming_eigen_2dust.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon110	file:
ipert	streaming_nonlinear.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon100	file:
ipert	streaming_stratified.cpp	/^int ShBoxCoord, ipert, ifield; \/\/ initial pattern$/;"	m	namespace:__anon119	file:
iprob	dust_diffusion.cpp	/^int iprob;$/;"	m	namespace:__anon82	file:
iprob	dust_inelastic_collision.cpp	/^int iprob;$/;"	m	namespace:__anon108	file:
iprob	dusty_kh.cpp	/^int iprob;$/;"	m	namespace:__anon94	file:
iprob	kh.cpp	/^int iprob;$/;"	m	namespace:__anon62	file:
iprob	kh_dust.cpp	/^int iprob;$/;"	m	namespace:__anon72	file:
iprob	mignone_advection.cpp	/^int iprob;$/;"	m	namespace:__anon114	file:
iprob	visc_dustfluids.cpp	/^int iprob;$/;"	m	namespace:__anon116	file:
iprob	visc_scalars.cpp	/^int iprob;$/;"	m	namespace:__anon18	file:
ishock	quirk.cpp	/^int ishock;$/;"	m	namespace:__anon105	file:
iso_cs	dust_NSH.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon68	file:
iso_cs	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
iso_cs	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
iso_cs	dust_diffusion.cpp	/^Real nuiso, iso_cs, amp;$/;"	m	namespace:__anon82	file:
iso_cs	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
iso_cs	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
iso_cs	dusty_shock.cpp	/^Real user_dt, iso_cs, xshock, gamma_gas, vel_right;$/;"	m	namespace:__anon85	file:
iso_cs	dusty_soundwave.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon70	file:
iso_cs	dusty_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon51	file:
iso_cs	dusty_wave_1d.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon102	file:
iso_cs	hb3.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon23	file:
iso_cs	hgb.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon80	file:
iso_cs	jgg.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon88	file:
iso_cs	linear_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon90	file:
iso_cs	mignone_advection.cpp	/^Real iso_cs;$/;"	m	namespace:__anon114	file:
iso_cs	slotted_cylinder.cpp	/^Real radius, omega_x1, omega_x2, omega, iso_cs;$/;"	m	namespace:__anon47	file:
iso_cs	ssheet.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon60	file:
iso_cs	streaming_eigen.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon31	file:
iso_cs	streaming_eigen_2dust.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon110	file:
iso_cs	streaming_nonlinear.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon100	file:
iso_cs	streaming_stratified.cpp	/^Real gm1, iso_cs;$/;"	m	namespace:__anon119	file:
iso_cs2_r0	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
iso_cs2_r0	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
isocs2	field_loop_poles.cpp	/^Real vy0, rho0, isocs2, gamma_gas;$/;"	m	namespace:__anon21	file:
k1	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
k1	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
k2	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
k2	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
k3	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
k3	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
k4	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
k4	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
k_adi	gr_bondi.cpp	/^Real n_adi, k_adi;  \/\/ hydro parameters$/;"	m	namespace:__anon45	file:
k_par	cpaw.cpp	/^Real lambda, k_par; \/\/ Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon53	file:
k_par	dusty_soundwave.cpp	/^Real amp, lambda, k_par;              \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon70	file:
k_par	dusty_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon51	file:
k_par	dusty_wave_1d.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon102	file:
k_par	linear_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon90	file:
kappap	dust_NSH.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon68	file:
kappap	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
kappap	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
kappap	streaming_eigen.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon31	file:
kappap	streaming_eigen_2dust.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon110	file:
kappap	streaming_nonlinear.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon100	file:
kappap	streaming_stratified.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon119	file:
kappap2	dust_NSH.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon68	file:
kappap2	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
kappap2	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
kappap2	streaming_eigen.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon31	file:
kappap2	streaming_eigen_2dust.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon110	file:
kappap2	streaming_nonlinear.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon100	file:
kappap2	streaming_stratified.cpp	/^Real kappap, kappap2, AN(0.0), BN(0.0), Psi(0.0), Kai0;$/;"	m	namespace:__anon119	file:
ks_gas	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
ks_gas	disk_dust_diffusion.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon35	file:
ks_gas	disk_dust_drift.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon29	file:
ks_gas	disk_streaming_cylindrical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon19	file:
ks_gas	disk_streaming_spherical.cpp	/^Real eta_gas, beta_gas, ks_gas;$/;"	m	namespace:__anon40	file:
kwave	jeans.cpp	/^Real amp, njeans, lambda, kwave; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon84	file:
kx	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
kx	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
ky	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
ky	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
kz	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
kz	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
l	gr_torus.cpp	/^Real r_edge, r_peak, l, r_peak_max, rho_max;  \/\/ torus parameters$/;"	m	namespace:__anon4	file:
lambda	cpaw.cpp	/^Real lambda, k_par; \/\/ Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon53	file:
lambda	dusty_soundwave.cpp	/^Real amp, lambda, k_par;              \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon70	file:
lambda	dusty_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon51	file:
lambda	dusty_wave_1d.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon102	file:
lambda	gr_linear_wave.cpp	/^Real lambda;                  \/\/ wavespeed$/;"	m	namespace:__anon49	file:
lambda	jeans.cpp	/^Real amp, njeans, lambda, kwave; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon84	file:
lambda	linear_wave.cpp	/^Real amp, lambda, k_par; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon90	file:
lem	dusty_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon51	file:
lem	linear_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon90	file:
log_h_edge	gr_torus.cpp	/^Real log_h_edge, log_h_peak;                  \/\/ calculated torus parameters$/;"	m	namespace:__anon4	file:
log_h_peak	gr_torus.cpp	/^Real log_h_edge, log_h_peak;                  \/\/ calculated torus parameters$/;"	m	namespace:__anon4	file:
lower_altitude_damping	disk_VSI.cpp	/^theta_upper_damping, theta_lower_damping, upper_altitude_damping, lower_altitude_damping,$/;"	m	namespace:__anon98	file:
m	gr_bondi.cpp	/^Real m, a;          \/\/ black hole mass and spin$/;"	m	namespace:__anon45	file:
m	gr_mhd_inflow.cpp	/^Real m;                           \/\/ mass M of black hole$/;"	m	namespace:__anon37	file:
m	gr_torus.cpp	/^Real m, a;                                    \/\/ black hole parameters$/;"	m	namespace:__anon4	file:
m_coord	mignone_advection.cpp	/^int m_coord;$/;"	m	namespace:__anon114	file:
m_p0	inject_pebble_3D.cpp	/^Real f_ICE_inter0, m_p0, rho_sil_inter, rho_ice_inter;$/;"	m	namespace:__anon27	file:
max_dfvdt	inject_pebble_3D.cpp	/^Real min_tol, max_dfvdt, dust_start_injection, injection_Tsoft;$/;"	m	namespace:__anon27	file:
min_tol	inject_pebble_3D.cpp	/^Real min_tol, max_dfvdt, dust_start_injection, injection_Tsoft;$/;"	m	namespace:__anon27	file:
mom_correct_Flag	inject_pebble_3D.cpp	/^bool size_change, mom_correct_Flag;$/;"	m	namespace:__anon27	file:
mphi	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
mplanet	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
mu	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
n0	disk_VSI.cpp	/^int n0, nvar, dowrite, file_number, out_level;$/;"	m	namespace:__anon98	file:
n_adi	gr_bondi.cpp	/^Real n_adi, k_adi;  \/\/ hydro parameters$/;"	m	namespace:__anon45	file:
next_time	disk_VSI.cpp	/^prev_time, curr_time, next_time, edt;$/;"	m	namespace:__anon98	file:
njeans	jeans.cpp	/^Real amp, njeans, lambda, kwave; \/\/ amplitude, Wavelength, 2*PI\/wavelength$/;"	m	namespace:__anon84	file:
nu_alpha	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
nu_alpha	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
nu_alpha	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
nu_alpha	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
nu_alpha	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
nu_alpha	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
nu_alpha	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
nu_dust	dmr_dust.cpp	/^Real nu_dust;$/;"	m	namespace:__anon113	file:
nu_dust	dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], nu_dust[NDUSTFLUIDS], Hratio[NDUSTFLUIDS];$/;"	m	namespace:__anon82	file:
nuiso	dust_diffusion.cpp	/^Real nuiso, iso_cs, amp;$/;"	m	namespace:__anon82	file:
nuiso	visc_dustfluids.cpp	/^Real nuiso, gm0;$/;"	m	namespace:__anon116	file:
nuiso	visc_scalars.cpp	/^Real nuiso, gm0;$/;"	m	namespace:__anon18	file:
num_flux_radii	gr_torus.cpp	/^int num_flux_radii;                           \/\/ number of spheres to use$/;"	m	namespace:__anon4	file:
num_lines	gr_mhd_inflow.cpp	/^int num_lines;                    \/\/ number of lines in table$/;"	m	namespace:__anon37	file:
nvar	disk_VSI.cpp	/^int n0, nvar, dowrite, file_number, out_level;$/;"	m	namespace:__anon98	file:
nwx	dust_NSH.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon68	file:
nwx	hb3.cpp	/^Real amp, nwx, nwy; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon23	file:
nwx	hgb.cpp	/^Real nwx, nwy; \/\/ Wavenumbers$/;"	m	namespace:__anon80	file:
nwx	jgg.cpp	/^Real nwx, nwy, nwz; \/\/ Wavenumbers$/;"	m	namespace:__anon88	file:
nwx	ssheet.cpp	/^int nwx, nwy; \/\/ Wavenumbers$/;"	m	namespace:__anon60	file:
nwx	streaming_eigen.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon31	file:
nwx	streaming_eigen_2dust.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon110	file:
nwx	streaming_nonlinear.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon100	file:
nwx	streaming_stratified.cpp	/^Real amp, nwx, nwy, nwz, sigma_g0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon119	file:
nwy	dust_NSH.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon68	file:
nwy	hb3.cpp	/^Real amp, nwx, nwy; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon23	file:
nwy	hgb.cpp	/^Real nwx, nwy; \/\/ Wavenumbers$/;"	m	namespace:__anon80	file:
nwy	jgg.cpp	/^Real nwx, nwy, nwz; \/\/ Wavenumbers$/;"	m	namespace:__anon88	file:
nwy	ssheet.cpp	/^int nwx, nwy; \/\/ Wavenumbers$/;"	m	namespace:__anon60	file:
nwy	streaming_eigen.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon31	file:
nwy	streaming_eigen_2dust.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon110	file:
nwy	streaming_nonlinear.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon100	file:
nwy	streaming_stratified.cpp	/^Real amp, nwx, nwy, nwz, sigma_g0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon119	file:
nwz	dust_NSH.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon68	file:
nwz	jgg.cpp	/^Real nwx, nwy, nwz; \/\/ Wavenumbers$/;"	m	namespace:__anon88	file:
nwz	streaming_eigen.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon31	file:
nwz	streaming_eigen_2dust.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon110	file:
nwz	streaming_nonlinear.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon100	file:
nwz	streaming_stratified.cpp	/^Real amp, nwx, nwy, nwz, sigma_g0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon119	file:
nx1	inject_pebble_3D.cpp	/^int nx1, nx2, nx3;$/;"	m	namespace:__anon27	file:
nx2	inject_pebble_3D.cpp	/^int nx1, nx2, nx3;$/;"	m	namespace:__anon27	file:
nx3	inject_pebble_3D.cpp	/^int nx1, nx2, nx3;$/;"	m	namespace:__anon27	file:
offset	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
omega	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
omega	slotted_cylinder.cpp	/^Real radius, omega_x1, omega_x2, omega, iso_cs;$/;"	m	namespace:__anon47	file:
omega2	jeans.cpp	/^Real cs2, gam, gm1, omega, omega2, gconst;$/;"	m	namespace:__anon84	file:
omega_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^omega_orbit[10], p_orbit[10], phi_orbit[10],$/;"	m	namespace:__anon33	file:
omega_p	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
omega_p	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
omega_p	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
omega_p	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
omega_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
omega_planet	disk_multiple_planet_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10], a_orbit[10], e_orbit[10],$/;"	m	namespace:__anon33	file:
omega_planet	disk_multiple_planets_dust_cylindrical.cpp	/^omega_planet[10], inv_omega_planet[10], cs_planet[10],$/;"	m	namespace:__anon74	file:
omega_planet	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
omega_planet	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
omega_x1	slotted_cylinder.cpp	/^Real radius, omega_x1, omega_x2, omega, iso_cs;$/;"	m	namespace:__anon47	file:
omega_x2	slotted_cylinder.cpp	/^Real radius, omega_x1, omega_x2, omega, iso_cs;$/;"	m	namespace:__anon47	file:
omg_osi	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
omg_osi	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
orbit1_aHST	disk_multiple_planet_dust_cylindrical.cpp	/^Real orbit1_aHST(MeshBlock *pmb, int iout) {$/;"	f
orbit1_eHST	disk_multiple_planet_dust_cylindrical.cpp	/^Real orbit1_eHST(MeshBlock *pmb, int iout) {$/;"	f
orbit1_omegaHST	disk_multiple_planet_dust_cylindrical.cpp	/^Real orbit1_omegaHST(MeshBlock *pmb, int iout) {$/;"	f
orbit1_phiHST	disk_multiple_planet_dust_cylindrical.cpp	/^Real orbit1_phiHST(MeshBlock *pmb, int iout) {$/;"	f
out_level	disk_VSI.cpp	/^int n0, nvar, dowrite, file_number, out_level;$/;"	m	namespace:__anon98	file:
outer_ratio_region	disk_RWI_2D.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon66	file:
outer_ratio_region	disk_VSI.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon98	file:
outer_ratio_region	disk_dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon35	file:
outer_ratio_region	disk_dust_drift.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon29	file:
outer_ratio_region	disk_multiple_planet_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon33	file:
outer_ratio_region	disk_multiple_planets_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon74	file:
outer_ratio_region	disk_planet_dust_cylindrical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon64	file:
outer_ratio_region	disk_planet_dust_spherical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon78	file:
outer_ratio_region	disk_streaming_cylindrical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon19	file:
outer_ratio_region	disk_streaming_spherical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon40	file:
outer_ratio_region	dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon82	file:
outer_ratio_region	ssheet_RWI_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon55	file:
outer_ratio_region	ssheet_planet_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon76	file:
outer_width_damping	disk_RWI_2D.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon66	file:
outer_width_damping	disk_VSI.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon98	file:
outer_width_damping	disk_dust_diffusion.cpp	/^    inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon35	file:
outer_width_damping	disk_dust_drift.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon29	file:
outer_width_damping	disk_multiple_planet_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon33	file:
outer_width_damping	disk_multiple_planets_dust_cylindrical.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon74	file:
outer_width_damping	disk_planet_dust_cylindrical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon64	file:
outer_width_damping	disk_planet_dust_spherical.cpp	/^outer_ratio_region, inner_width_damping, outer_width_damping,$/;"	m	namespace:__anon78	file:
outer_width_damping	disk_streaming_cylindrical.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon19	file:
outer_width_damping	disk_streaming_spherical.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon40	file:
outer_width_damping	dust_diffusion.cpp	/^     inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon82	file:
outer_width_damping	ssheet_RWI_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon55	file:
outer_width_damping	ssheet_planet_dust.cpp	/^inner_ratio_region, outer_ratio_region, inner_width_damping, outer_width_damping;$/;"	m	namespace:__anon76	file:
p0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
p0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
p0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
p0	hgb.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon80	file:
p0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
p0	jgg.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon88	file:
p0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
p0	ssheet.cpp	/^Real iso_cs, gm1, d0, p0;$/;"	m	namespace:__anon60	file:
p0_over_r0	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
p0_over_r0	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
p0_over_r0	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
p0_over_r0	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
p0_over_r0	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
p0_over_r0	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
p0_over_r0	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
p0_over_r0	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
p0_over_r0	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
p0_over_r0	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
p0_over_r0	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
p_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
p_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
p_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^omega_orbit[10], p_orbit[10], phi_orbit[10],$/;"	m	namespace:__anon33	file:
pcoeff	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
pert_amp	gr_torus.cpp	/^Real pert_amp, pert_kr, pert_kz;              \/\/ initial perturbations parameters$/;"	m	namespace:__anon4	file:
pert_kr	gr_torus.cpp	/^Real pert_amp, pert_kr, pert_kz;              \/\/ initial perturbations parameters$/;"	m	namespace:__anon4	file:
pert_kz	gr_torus.cpp	/^Real pert_amp, pert_kr, pert_kz;              \/\/ initial perturbations parameters$/;"	m	namespace:__anon4	file:
perturb	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
pfloor	inject_pebble_3D.cpp	/^Real dfloor, pfloor, float_min;$/;"	m	namespace:__anon27	file:
pfloor	strat.cpp	/^Real dfloor, pfloor;$/;"	m	namespace:__anon92	file:
pgas	gr_linear_wave.cpp	/^Real rho, pgas;               \/\/ thermodynamic quantities$/;"	m	namespace:__anon49	file:
pgas_min	gr_torus.cpp	/^Real rho_min, rho_pow, pgas_min, pgas_pow;    \/\/ background parameters$/;"	m	namespace:__anon4	file:
pgas_over_rho_peak	gr_torus.cpp	/^Real pgas_over_rho_peak, rho_amp;             \/\/ calculated torus parameters$/;"	m	namespace:__anon4	file:
pgas_pow	gr_torus.cpp	/^Real rho_min, rho_pow, pgas_min, pgas_pow;    \/\/ background parameters$/;"	m	namespace:__anon4	file:
phase_trans	inject_pebble_3D.cpp	/^void phase_trans(Real rhoe, Real rho_g, AthenaArray<Real> rho_I, Real rho_v, Real &drho){$/;"	f	namespace:__anon28
phi_orbit	disk_multiple_planet_dust_cylindrical.cpp	/^omega_orbit[10], p_orbit[10], phi_orbit[10],$/;"	m	namespace:__anon33	file:
phi_planet	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
phi_planet	disk_multiple_planet_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon33	file:
phi_planet	disk_multiple_planets_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon74	file:
phi_planet	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
phi_planet	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
phi_planet	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
phi_planet_0	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
phi_planet_0	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
phi_planet_0	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
phi_vortex	disk_RWI_2D.cpp	/^dfloor, dffloor, Omega0, user_dt, phi_vortex,$/;"	m	namespace:__anon66	file:
pl	shk_cloud.cpp	/^Real gmma1, dl, pl, ul;$/;"	m	namespace:__anon39	file:
planets_number	disk_multiple_planet_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon33	file:
planets_number	disk_multiple_planets_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon74	file:
pot_amp	gr_torus.cpp	/^Real pot_amp;                                 \/\/ vector potential amplitude$/;"	m	namespace:__anon4	file:
pot_pgas_cutoff	gr_torus.cpp	/^Real pot_pgas_pow, pot_pgas_cutoff;           \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_pgas_pow	gr_torus.cpp	/^Real pot_pgas_pow, pot_pgas_cutoff;           \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_r_max	gr_torus.cpp	/^Real pot_r_min, pot_r_max, pot_r_num;         \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_r_min	gr_torus.cpp	/^Real pot_r_min, pot_r_max, pot_r_num;         \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_r_num	gr_torus.cpp	/^Real pot_r_min, pot_r_max, pot_r_num;         \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_r_pow	gr_torus.cpp	/^Real pot_r_pow;                               \/\/ density vector potential parameters$/;"	m	namespace:__anon4	file:
pot_rho_cutoff	gr_torus.cpp	/^Real pot_rho_pow, pot_rho_cutoff;             \/\/ density vector potential parameters$/;"	m	namespace:__anon4	file:
pot_rho_pow	gr_torus.cpp	/^Real pot_rho_pow, pot_rho_cutoff;             \/\/ density vector potential parameters$/;"	m	namespace:__anon4	file:
pot_samples	gr_torus.cpp	/^Real pot_samples;                             \/\/ number of sample points for integrating$/;"	m	namespace:__anon4	file:
pot_theta_min	gr_torus.cpp	/^Real pot_theta_min, pot_theta_num;            \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pot_theta_num	gr_torus.cpp	/^Real pot_theta_min, pot_theta_num;            \/\/ loops vector potential parameters$/;"	m	namespace:__anon4	file:
pres	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
press	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
press	dusty_shock.cpp	/^Real press(Real rho, Real T) {$/;"	f
press	shock_tube.cpp	/^Real press(Real rho, Real T) {$/;"	f
prev_time	disk_VSI.cpp	/^prev_time, curr_time, next_time, edt;$/;"	m	namespace:__anon98	file:
prograde	gr_torus.cpp	/^bool prograde;                                \/\/ flag indicating disk is prograde$/;"	m	namespace:__anon4	file:
pslope	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
pslope	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
pslope	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
pslope	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
pslope	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
pslope	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
pslope	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
pslope	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
pslope	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
pslope	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
pslope	dust_NSH.cpp	/^Real pslope;$/;"	m	namespace:__anon68	file:
pslope	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
pslope	streaming_eigen.cpp	/^Real pslope;$/;"	m	namespace:__anon31	file:
pslope	streaming_eigen_2dust.cpp	/^Real pslope;$/;"	m	namespace:__anon110	file:
pslope	streaming_nonlinear.cpp	/^Real pslope;$/;"	m	namespace:__anon100	file:
pslope	streaming_stratified.cpp	/^Real pslope;$/;"	m	namespace:__anon119	file:
pvalue	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
q0	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
q0	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
q1	disk_multiple_planet_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon33	file:
q1	disk_multiple_planets_dust_cylindrical.cpp	/^static Real q0[60], q1[60], Dist[60], k1[60], k2[60], k3[60], k4[60];\/\/RK4 parameters$/;"	m	namespace:__anon74	file:
qshear	dust_NSH.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon68	file:
qshear	hb3.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon23	file:
qshear	hgb.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon80	file:
qshear	jgg.cpp	/^Real qshear, Omega0;$/;"	m	namespace:__anon88	file:
qshear	ssheet.cpp	/^Real qshear, Omega0;$/;"	m	namespace:__anon60	file:
qshear	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
qshear	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
qshear	strat.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon92	file:
qshear	streaming_eigen.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon31	file:
qshear	streaming_eigen_2dust.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon110	file:
qshear	streaming_nonlinear.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon100	file:
qshear	streaming_stratified.cpp	/^Real Omega_0, qshear;$/;"	m	namespace:__anon119	file:
qvalue	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
r0	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
r0	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
r0	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
r0	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
r0	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
r0	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
r0	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
r0	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
r0	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
r0	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
r0	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
r0	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
r0_bump	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
r0_bump	disk_dust_diffusion.cpp	/^Real A_bump, sigma_bump, r0_bump;$/;"	m	namespace:__anon35	file:
r0_vortex	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
r_crit	gr_bondi.cpp	/^Real r_crit;        \/\/ sonic point radius$/;"	m	namespace:__anon45	file:
r_edge	gr_torus.cpp	/^Real r_edge, r_peak, l, r_peak_max, rho_max;  \/\/ torus parameters$/;"	m	namespace:__anon4	file:
r_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
r_peak	gr_torus.cpp	/^Real r_edge, r_peak, l, r_peak_max, rho_max;  \/\/ torus parameters$/;"	m	namespace:__anon4	file:
r_peak_max	gr_torus.cpp	/^Real r_edge, r_peak, l, r_peak_max, rho_max;  \/\/ torus parameters$/;"	m	namespace:__anon4	file:
rad_cor	disk_multiple_planet_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon33	file:
rad_cor	disk_multiple_planets_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon74	file:
rad_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
rad_planet	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
rad_planet	disk_multiple_planet_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon33	file:
rad_planet	disk_multiple_planets_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon74	file:
rad_planet	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
rad_planet	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
rad_planet	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
rad_planet	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
rad_planet	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
rad_soft	disk_multiple_planet_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon33	file:
rad_soft	disk_multiple_planets_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon74	file:
rad_soft	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
rad_soft	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
radius	slotted_cylinder.cpp	/^Real radius, omega_x1, omega_x2, omega, iso_cs;$/;"	m	namespace:__anon47	file:
radius_inner_damping	disk_RWI_2D.cpp	/^tau_damping, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon66	file:
radius_inner_damping	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
radius_inner_damping	disk_dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon35	file:
radius_inner_damping	disk_dust_drift.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon29	file:
radius_inner_damping	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
radius_inner_damping	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
radius_inner_damping	disk_planet_dust_cylindrical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon64	file:
radius_inner_damping	disk_planet_dust_spherical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon78	file:
radius_inner_damping	disk_streaming_cylindrical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon19	file:
radius_inner_damping	disk_streaming_spherical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon40	file:
radius_inner_damping	dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon82	file:
radius_inner_damping	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
radius_inner_damping	ssheet_planet_dust.cpp	/^x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon76	file:
radius_outer_damping	disk_RWI_2D.cpp	/^tau_damping, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon66	file:
radius_outer_damping	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
radius_outer_damping	disk_dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon35	file:
radius_outer_damping	disk_dust_drift.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon29	file:
radius_outer_damping	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
radius_outer_damping	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
radius_outer_damping	disk_planet_dust_cylindrical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon64	file:
radius_outer_damping	disk_planet_dust_spherical.cpp	/^radius_inner_damping, radius_outer_damping, inner_ratio_region,$/;"	m	namespace:__anon78	file:
radius_outer_damping	disk_streaming_cylindrical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon19	file:
radius_outer_damping	disk_streaming_spherical.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon40	file:
radius_outer_damping	dust_diffusion.cpp	/^Real radius_inner_damping, radius_outer_damping, inner_ratio_region, outer_ratio_region,$/;"	m	namespace:__anon82	file:
radius_outer_damping	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
radius_outer_damping	ssheet_planet_dust.cpp	/^x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon76	file:
rand_amp	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
rand_amp	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
rand_amp	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
rand_amp	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
refine_factor	disk_RWI_2D.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon66	file:
refine_factor	disk_planet_dust_cylindrical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon64	file:
refine_factor	disk_planet_dust_spherical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon78	file:
refine_r_max	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
refine_r_min	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
refine_rad_max	disk_RWI_2D.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon66	file:
refine_rad_max	disk_planet_dust_cylindrical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon64	file:
refine_rad_max	disk_planet_dust_spherical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon78	file:
refine_rad_min	disk_RWI_2D.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon66	file:
refine_rad_min	disk_planet_dust_cylindrical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon64	file:
refine_rad_min	disk_planet_dust_spherical.cpp	/^refine_factor, derefine_factor, refine_rad_min, refine_rad_max;$/;"	m	namespace:__anon78	file:
refine_theta_lower	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
refine_theta_upper	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
rem	dusty_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon51	file:
rem	linear_wave.cpp	/^Real ev[NWAVE], rem[NWAVE][NWAVE], lem[NWAVE][NWAVE];$/;"	m	namespace:__anon90	file:
rho	gr_linear_wave.cpp	/^Real rho, pgas;               \/\/ thermodynamic quantities$/;"	m	namespace:__anon49	file:
rho0	disk.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas;$/;"	m	namespace:__anon1	file:
rho0	disk_3d_mhd_dust.cpp	/^Real rho0, alpha, HoR0, HoRc, theta_trans;$/;"	m	namespace:__anon25	file:
rho0	disk_RWI_2D.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha,$/;"	m	namespace:__anon66	file:
rho0	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
rho0	disk_dust_diffusion.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, beta, nu_alpha;$/;"	m	namespace:__anon35	file:
rho0	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
rho0	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
rho0	disk_planet_dust_cylindrical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon64	file:
rho0	disk_planet_dust_spherical.cpp	/^gm0, r0, rho0, dslope, p0_over_r0, pslope, beta, gMth, nu_alpha,$/;"	m	namespace:__anon78	file:
rho0	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
rho0	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
rho0	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
rho0	field_loop_poles.cpp	/^Real vy0, rho0, isocs2, gamma_gas;$/;"	m	namespace:__anon21	file:
rho0	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
rho_0	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
rho_amp	gr_torus.cpp	/^Real pgas_over_rho_peak, rho_amp;             \/\/ calculated torus parameters$/;"	m	namespace:__anon4	file:
rho_dust_imag	streaming_eigen.cpp	/^Real rho_dust_real[NDUSTFLUIDS],  rho_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
rho_dust_imag	streaming_eigen_2dust.cpp	/^Real rho_dust_real[NDUSTFLUIDS],  rho_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
rho_dust_real	streaming_eigen.cpp	/^Real rho_dust_real[NDUSTFLUIDS],  rho_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
rho_dust_real	streaming_eigen_2dust.cpp	/^Real rho_dust_real[NDUSTFLUIDS],  rho_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
rho_floor	disk_3d_mhd_dust.cpp	/^Real Rbuf, rho_floor, time_drag;$/;"	m	namespace:__anon25	file:
rho_floor	disk_VSI.cpp	/^Real gm0, r0, rho0, pvalue, cs2_0, qvalue, beta, nu_alpha, dfloor, dffloor, rho_floor, Omega0,$/;"	m	namespace:__anon98	file:
rho_g0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
rho_gas_imag	streaming_eigen.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon31	file:
rho_gas_imag	streaming_eigen_2dust.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon110	file:
rho_gas_real	streaming_eigen.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon31	file:
rho_gas_real	streaming_eigen_2dust.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon110	file:
rho_ice_inter	inject_pebble_3D.cpp	/^Real f_ICE_inter0, m_p0, rho_sil_inter, rho_ice_inter;$/;"	m	namespace:__anon27	file:
rho_max	gr_torus.cpp	/^Real r_edge, r_peak, l, r_peak_max, rho_max;  \/\/ torus parameters$/;"	m	namespace:__anon4	file:
rho_min	gr_torus.cpp	/^Real rho_min, rho_pow, pgas_min, pgas_pow;    \/\/ background parameters$/;"	m	namespace:__anon4	file:
rho_pow	gr_torus.cpp	/^Real rho_min, rho_pow, pgas_min, pgas_pow;    \/\/ background parameters$/;"	m	namespace:__anon4	file:
rho_sil_inter	inject_pebble_3D.cpp	/^Real f_ICE_inter0, m_p0, rho_sil_inter, rho_ice_inter;$/;"	m	namespace:__anon27	file:
rhog0	dust_NSH.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon68	file:
rhog0	streaming_eigen.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon31	file:
rhog0	streaming_eigen_2dust.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon110	file:
rhog0	streaming_nonlinear.cpp	/^Real amp, nwx, nwy, nwz, rhog0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon100	file:
ring_D2G	disk_RWI_2D.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon66	file:
ring_D2G	disk_dust_diffusion.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS],$/;"	m	namespace:__anon35	file:
rn	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
rn	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
rn	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
rn	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
rs	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
rs	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
rs	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
rs	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
rs	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
rs	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
rsoft	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
s_grow	streaming_eigen.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon31	file:
s_grow	streaming_eigen_2dust.cpp	/^Real Kpar, kx, ky, kz, omg_osi, s_grow;$/;"	m	namespace:__anon110	file:
s_height	slotted_cylinder.cpp	/^Real s_width, s_height, center_x1, center_x2;$/;"	m	namespace:__anon47	file:
s_width	slotted_cylinder.cpp	/^Real s_width, s_height, center_x1, center_x2;$/;"	m	namespace:__anon47	file:
sig	visc_scalars.cpp	/^Real A0, sig;$/;"	m	namespace:__anon18	file:
sig_x1	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
sig_x1	visc_dustfluids.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2;$/;"	m	namespace:__anon116	file:
sig_x2	dust_diffusion.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2, offset;$/;"	m	namespace:__anon82	file:
sig_x2	visc_dustfluids.cpp	/^Real A0, sig_x1, sig_x2, cen1, cen2;$/;"	m	namespace:__anon116	file:
sigma_bump	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
sigma_bump	disk_dust_diffusion.cpp	/^Real A_bump, sigma_bump, r0_bump;$/;"	m	namespace:__anon35	file:
sigma_bump	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
sigma_g0	streaming_stratified.cpp	/^Real amp, nwx, nwy, nwz, sigma_g0; \/\/ amplitude, Wavenumbers$/;"	m	namespace:__anon119	file:
sin_a2	cpaw.cpp	/^Real fac, sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon53	file:
sin_a2	dusty_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon51	file:
sin_a2	jeans.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon84	file:
sin_a2	linear_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon90	file:
sin_a3	cpaw.cpp	/^Real fac, sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon53	file:
sin_a3	dusty_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon51	file:
sin_a3	jeans.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon84	file:
sin_a3	linear_wave.cpp	/^Real sin_a2, cos_a2, sin_a3, cos_a3;$/;"	m	namespace:__anon90	file:
sin_tilt	gr_torus.cpp	/^Real sin_tilt, cos_tilt;                      \/\/ calculated tilt parameters$/;"	m	namespace:__anon4	file:
size_change	inject_pebble_3D.cpp	/^bool size_change, mom_correct_Flag;$/;"	m	namespace:__anon27	file:
sound_speed	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
sound_speed	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
t0	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
t0	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
t0	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
t0	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
t0	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
t0	visc_dustfluids.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon116	file:
t0	visc_scalars.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon18	file:
t0_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
t0_planet	disk_multiple_planet_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon33	file:
t0_planet	disk_multiple_planets_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon74	file:
t0_planet	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
t0_planet	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
t0pot	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
t0pot	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
t0pot	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
t0pot	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
t_end_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
t_final	mignone_advection.cpp	/^Real t_final;$/;"	m	namespace:__anon114	file:
t_planet_growth	disk_multiple_planet_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon33	file:
t_planet_growth	disk_multiple_planets_dust_cylindrical.cpp	/^gMth[10], t_planet_growth[10], Hill_radius[10], accretion_radius[10],$/;"	m	namespace:__anon74	file:
t_planet_growth	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
t_planet_growth	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
t_planet_growth	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
taddBp	disk_3d_mhd_dust.cpp	/^Real beta, mu, Am_in, Am0, Bz0, A30, RBmin, taddBp;$/;"	m	namespace:__anon25	file:
tau_damping	disk_RWI_2D.cpp	/^tau_damping, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon66	file:
tau_damping	disk_dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon35	file:
tau_damping	disk_dust_drift.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon29	file:
tau_damping	disk_streaming_cylindrical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon19	file:
tau_damping	disk_streaming_spherical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon40	file:
tau_damping	dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon82	file:
tau_relax	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
tau_relax	disk_dust_drift.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon29	file:
tau_relax	disk_multiple_planet_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon33	file:
tau_relax	disk_multiple_planets_dust_cylindrical.cpp	/^Real tau_relax[10], rad_soft[10], gmp[10], inv_sqrt2gmp[10], rad_planet[10],$/;"	m	namespace:__anon74	file:
tau_relax	disk_streaming_cylindrical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon19	file:
tau_relax	disk_streaming_spherical.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, A0, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon40	file:
tau_relax	dust_diffusion.cpp	/^Real tau_relax, rs, gmp, rad_planet, phi_planet, t0pot, omega_p, Bump_flag, dwidth, rn, rand_amp, dust_dens_slope;$/;"	m	namespace:__anon82	file:
temperature	gr_mhd_inflow.cpp	/^Real temperature;                 \/\/ temperature pgas\/rho$/;"	m	namespace:__anon37	file:
theta_Rin	disk_3d_mhd_dust.cpp	/^Real eta_ofac_in, eta_ofac_mid, theta_Rin, theta_Rout, fcool;$/;"	m	namespace:__anon25	file:
theta_Rout	disk_3d_mhd_dust.cpp	/^Real eta_ofac_in, eta_ofac_mid, theta_Rin, theta_Rout, fcool;$/;"	m	namespace:__anon25	file:
theta_lower_damping	disk_VSI.cpp	/^theta_upper_damping, theta_lower_damping, upper_altitude_damping, lower_altitude_damping,$/;"	m	namespace:__anon98	file:
theta_trans	disk_3d_mhd_dust.cpp	/^Real rho0, alpha, HoR0, HoRc, theta_trans;$/;"	m	namespace:__anon25	file:
theta_upper_damping	disk_VSI.cpp	/^theta_upper_damping, theta_lower_damping, upper_altitude_damping, lower_altitude_damping,$/;"	m	namespace:__anon98	file:
threshold	blast.cpp	/^Real threshold;$/;"	v
threshold	resist.cpp	/^Real threshold;$/;"	v
threshold	scalar_diff.cpp	/^Real threshold;$/;"	v
threshold	visc.cpp	/^Real threshold;$/;"	v
tilt	gr_torus.cpp	/^Real tilt;                                    \/\/ tilt angle$/;"	m	namespace:__anon4	file:
time_drag	disk_3d_mhd_dust.cpp	/^Real Rbuf, rho_floor, time_drag;$/;"	m	namespace:__anon25	file:
time_drag	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
time_drag	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
time_drag	disk_multiple_planet_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon33	file:
time_drag	disk_multiple_planets_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon74	file:
time_drag	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
time_drag	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
time_drag	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
time_drag	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
time_refine	disk_VSI.cpp	/^amp, time_drag, time_refine, refine_theta_upper, refine_theta_lower, refine_r_min, refine_r_max,$/;"	m	namespace:__anon98	file:
tsoft	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
u	gr_linear_wave.cpp	/^Real u[4], b[4];              \/\/ contravariant quantities$/;"	m	namespace:__anon49	file:
u0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
u0	dusty_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon51	file:
u0	dusty_wave_1d.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon102	file:
u0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
u0	linear_wave.cpp	/^Real d0, p0, u0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon90	file:
ul	shk_cloud.cpp	/^Real gmma1, dl, pl, ul;$/;"	m	namespace:__anon39	file:
upper_altitude_damping	disk_VSI.cpp	/^theta_upper_damping, theta_lower_damping, upper_altitude_damping, lower_altitude_damping,$/;"	m	namespace:__anon98	file:
use_gl_quadrature	mignone_advection.cpp	/^constexpr bool use_gl_quadrature = true;$/;"	m	namespace:__anon114	file:
use_gl_quadrature	slotted_cylinder.cpp	/^constexpr bool use_gl_quadrature = true;$/;"	m	namespace:__anon47	file:
user_dt	disk_3d_mhd_dust.cpp	/^Real user_dt;$/;"	m	namespace:__anon25	file:
user_dt	disk_RWI_2D.cpp	/^dfloor, dffloor, Omega0, user_dt, phi_vortex,$/;"	m	namespace:__anon66	file:
user_dt	disk_dust_diffusion.cpp	/^Real dfloor, dffloor, Omega0, user_dt;$/;"	m	namespace:__anon35	file:
user_dt	disk_dust_drift.cpp	/^Real gm0, r0, rho_0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon29	file:
user_dt	disk_multiple_planet_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon33	file:
user_dt	disk_multiple_planets_dust_cylindrical.cpp	/^nu_alpha, dfloor, dffloor, Omega0, user_dt, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon74	file:
user_dt	disk_planet_dust_cylindrical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon64	file:
user_dt	disk_planet_dust_spherical.cpp	/^t_planet_growth, dfloor, dffloor, Omega0, user_dt, A_gap,$/;"	m	namespace:__anon78	file:
user_dt	disk_streaming_cylindrical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon19	file:
user_dt	disk_streaming_spherical.cpp	/^Real gm0, r0, rho0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, amp;$/;"	m	namespace:__anon40	file:
user_dt	dust_NSH.cpp	/^Real user_dt;$/;"	m	namespace:__anon68	file:
user_dt	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
user_dt	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
user_dt	dust_diffusion.cpp	/^Real gm0, r0, dslope, p0_over_r0, pslope, gamma_gas, dfloor, dffloor, user_dt, iso_cs2_r0;$/;"	m	namespace:__anon82	file:
user_dt	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
user_dt	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
user_dt	dusty_shock.cpp	/^Real user_dt, iso_cs, xshock, gamma_gas, vel_right;$/;"	m	namespace:__anon85	file:
user_dt	dusty_soundwave.cpp	/^Real user_dt;$/;"	m	namespace:__anon70	file:
user_dt	dusty_wave.cpp	/^Real user_dt;$/;"	m	namespace:__anon51	file:
user_dt	dusty_wave_1d.cpp	/^Real user_dt;$/;"	m	namespace:__anon102	file:
user_dt	ssheet_RWI_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN(0.0), BN(0.0), Psi(0.0), user_dt, time_drag, beta,$/;"	m	namespace:__anon55	file:
user_dt	ssheet_planet_dust.cpp	/^kappap, kappap2, Kai0, etaVk, AN, BN, Psi, time_drag, user_dt, rs, gmp, gMth, t_planet_growth,$/;"	m	namespace:__anon76	file:
user_dt	streaming_eigen.cpp	/^Real user_dt;$/;"	m	namespace:__anon31	file:
user_dt	streaming_eigen_2dust.cpp	/^Real user_dt;$/;"	m	namespace:__anon110	file:
user_dt	streaming_nonlinear.cpp	/^Real user_dt;$/;"	m	namespace:__anon100	file:
user_dt	streaming_stratified.cpp	/^Real user_dt;$/;"	m	namespace:__anon119	file:
v0	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
v0	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
v0	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
v0	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
v0	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
v0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
v0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
v0	visc_dustfluids.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon116	file:
v0	visc_scalars.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon18	file:
v1	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
v2	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
v3	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
v_par	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
v_perp	cpaw.cpp	/^Real den, pres, gm1, b_par, b_perp, v_perp, v_par;$/;"	m	namespace:__anon53	file:
va	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
vel_right	dusty_shock.cpp	/^Real user_dt, iso_cs, xshock, gamma_gas, vel_right;$/;"	m	namespace:__anon85	file:
vel_vortex	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
velx_dust_imag	streaming_eigen.cpp	/^Real velx_dust_real[NDUSTFLUIDS], velx_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
velx_dust_imag	streaming_eigen_2dust.cpp	/^Real velx_dust_real[NDUSTFLUIDS], velx_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
velx_dust_real	streaming_eigen.cpp	/^Real velx_dust_real[NDUSTFLUIDS], velx_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
velx_dust_real	streaming_eigen_2dust.cpp	/^Real velx_dust_real[NDUSTFLUIDS], velx_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
velx_gas_imag	streaming_eigen.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon31	file:
velx_gas_imag	streaming_eigen_2dust.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon110	file:
velx_gas_real	streaming_eigen.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon31	file:
velx_gas_real	streaming_eigen_2dust.cpp	/^Real rho_gas_real,  rho_gas_imag,  velx_gas_real, velx_gas_imag;$/;"	m	namespace:__anon110	file:
vely_dust_imag	streaming_eigen.cpp	/^Real vely_dust_real[NDUSTFLUIDS], vely_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
vely_dust_imag	streaming_eigen_2dust.cpp	/^Real vely_dust_real[NDUSTFLUIDS], vely_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
vely_dust_real	streaming_eigen.cpp	/^Real vely_dust_real[NDUSTFLUIDS], vely_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
vely_dust_real	streaming_eigen_2dust.cpp	/^Real vely_dust_real[NDUSTFLUIDS], vely_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
vely_gas_imag	streaming_eigen.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon31	file:
vely_gas_imag	streaming_eigen_2dust.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon110	file:
vely_gas_real	streaming_eigen.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon31	file:
vely_gas_real	streaming_eigen_2dust.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon110	file:
velz_dust_imag	streaming_eigen.cpp	/^Real velz_dust_real[NDUSTFLUIDS], velz_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
velz_dust_imag	streaming_eigen_2dust.cpp	/^Real velz_dust_real[NDUSTFLUIDS], velz_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
velz_dust_real	streaming_eigen.cpp	/^Real velz_dust_real[NDUSTFLUIDS], velz_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon31	file:
velz_dust_real	streaming_eigen_2dust.cpp	/^Real velz_dust_real[NDUSTFLUIDS], velz_dust_imag[NDUSTFLUIDS];$/;"	m	namespace:__anon110	file:
velz_gas_imag	streaming_eigen.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon31	file:
velz_gas_imag	streaming_eigen_2dust.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon110	file:
velz_gas_real	streaming_eigen.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon31	file:
velz_gas_real	streaming_eigen_2dust.cpp	/^Real vely_gas_real, vely_gas_imag, velz_gas_real, velz_gas_imag;$/;"	m	namespace:__anon110	file:
vflow	dusty_kh.cpp	/^Real vflow;$/;"	m	namespace:__anon94	file:
vflow	dusty_soundwave.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon70	file:
vflow	dusty_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon51	file:
vflow	dusty_wave_1d.cpp	/^Real gam, gm1, iso_cs, vflow;$/;"	m	namespace:__anon102	file:
vflow	kh.cpp	/^Real vflow;$/;"	m	namespace:__anon62	file:
vflow	kh_dust.cpp	/^Real vflow;$/;"	m	namespace:__anon72	file:
vflow	linear_wave.cpp	/^Real gam,gm1,iso_cs,vflow;$/;"	m	namespace:__anon90	file:
vk_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
vk_planet	disk_multiple_planet_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon33	file:
vk_planet	disk_multiple_planets_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon74	file:
vk_planet	disk_planet_dust_cylindrical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon64	file:
vk_planet	disk_planet_dust_spherical.cpp	/^t0_planet, time_drag, vk_planet, omega_planet, inv_omega_planet, cs_planet,$/;"	m	namespace:__anon78	file:
volume	gr_linear_wave.cpp	/^AthenaArray<Real> volume;     \/\/ 1D array of volumes$/;"	v
volume	hb3.cpp	/^AthenaArray<Real> volume; \/\/ 1D array of volumes$/;"	m	namespace:__anon23	file:
vr	magnoh.cpp	/^Real alpha, beta, rho0, P0, pcoeff, vr, perturb, mphi;$/;"	m	namespace:__anon57	file:
vx	gr_linear_wave.cpp	/^Real vx, vy, vz;              \/\/ 3-velocity components$/;"	m	namespace:__anon49	file:
vx_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vx_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vx_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
vx_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vx_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vx_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
vx_planet	disk_multiple_planet_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon33	file:
vx_planet	disk_multiple_planets_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon74	file:
vy	gr_linear_wave.cpp	/^Real vx, vy, vz;              \/\/ 3-velocity components$/;"	m	namespace:__anon49	file:
vy0	field_loop_poles.cpp	/^Real vy0, rho0, isocs2, gamma_gas;$/;"	m	namespace:__anon21	file:
vy_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vy_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vy_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
vy_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vy_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vy_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
vy_planet	disk_multiple_planet_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon33	file:
vy_planet	disk_multiple_planets_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon74	file:
vz	gr_linear_wave.cpp	/^Real vx, vy, vz;              \/\/ 3-velocity components$/;"	m	namespace:__anon49	file:
vz_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vz_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vz_amb	jet.cpp	/^Real d_amb, p_amb, vx_amb, vy_amb, vz_amb, bx_amb, by_amb, bz_amb;$/;"	m	namespace:__anon42	file:
vz_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
vz_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
vz_jet	jet.cpp	/^Real r_jet, d_jet, p_jet, vx_jet, vy_jet, vz_jet, bx_jet, by_jet, bz_jet;$/;"	m	namespace:__anon42	file:
vz_planet	disk_multiple_planet_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon33	file:
vz_planet	disk_multiple_planets_dust_cylindrical.cpp	/^vy_planet[10], vz_planet[10], gm_cur[11], rad_cor[10], planets_number;$/;"	m	namespace:__anon74	file:
w0	dusty_soundwave.cpp	/^Real rho_g0, p0, u0, v0, w0, bx0, by0, bz0, dby, dbz;$/;"	m	namespace:__anon70	file:
w0	jeans.cpp	/^Real d0, p0, v0, u0, w0, va, b0;$/;"	m	namespace:__anon84	file:
wave_flag	dusty_wave.cpp	/^int wave_flag;$/;"	m	namespace:__anon51	file:
wave_flag	linear_wave.cpp	/^int wave_flag;$/;"	m	namespace:__anon90	file:
wavenumber	gr_linear_wave.cpp	/^Real wavenumber;              \/\/ wavenumber$/;"	m	namespace:__anon49	file:
weight_dust	disk_3d_mhd_dust.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon25	file:
weight_dust	disk_RWI_2D.cpp	/^Real initial_D2G[NDUSTFLUIDS], ring_D2G[NDUSTFLUIDS], Stokes_number[NDUSTFLUIDS], Hratio[NDUSTFLUIDS], weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon66	file:
weight_dust	disk_VSI.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon98	file:
weight_dust	disk_dust_diffusion.cpp	/^weight_dust[NDUSTFLUIDS], Dd[NDUSTFLUIDS];$/;"	m	namespace:__anon35	file:
weight_dust	disk_multiple_planet_dust_cylindrical.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon33	file:
weight_dust	disk_multiple_planets_dust_cylindrical.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon74	file:
weight_dust	disk_planet_dust_cylindrical.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon64	file:
weight_dust	disk_planet_dust_spherical.cpp	/^weight_dust[NDUSTFLUIDS];$/;"	m	namespace:__anon78	file:
width_vortex	disk_RWI_2D.cpp	/^A_bump, sigma_bump, r0_bump, width_vortex, eta_gas, beta_gas, ks_gas,$/;"	m	namespace:__anon66	file:
wl	dusty_shock.cpp	/^Real wl[NHYDRO];$/;"	m	namespace:__anon85	file:
wl_d	dusty_shock.cpp	/^Real wl_d[4];$/;"	m	namespace:__anon85	file:
wr	dusty_shock.cpp	/^Real wr[NHYDRO];$/;"	m	namespace:__anon85	file:
wr_d	dusty_shock.cpp	/^Real wr_d[4];$/;"	m	namespace:__anon85	file:
x0	dust_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon117	file:
x0	dust_collision_different_Ts.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon96	file:
x0	dust_diffusion.cpp	/^Real v0, t0, x0, d0, rho0, v1, v2, v3;$/;"	m	namespace:__anon82	file:
x0	dust_inelastic_collision.cpp	/^Real v0, t0, x0, user_dt, iso_cs, press, gamma_gas;$/;"	m	namespace:__anon108	file:
x0	dust_squaredrag.cpp	/^Real v0, t0, x0, user_dt, iso_cs, gamma_gas;$/;"	m	namespace:__anon106	file:
x0	visc_dustfluids.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon116	file:
x0	visc_scalars.cpp	/^Real v0, t0, x0;$/;"	m	namespace:__anon18	file:
x0_vortex	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
x1max	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
x1max	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
x1max	disk_dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon35	file:
x1max	disk_dust_drift.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon29	file:
x1max	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
x1max	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
x1max	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
x1max	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
x1max	disk_streaming_cylindrical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon19	file:
x1max	disk_streaming_spherical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon40	file:
x1max	dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon82	file:
x1max	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
x1max	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
x1max	ssheet_planet_dust.cpp	/^x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon76	file:
x1min	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
x1min	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
x1min	disk_dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon35	file:
x1min	disk_dust_drift.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon29	file:
x1min	disk_multiple_planet_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon33	file:
x1min	disk_multiple_planets_dust_cylindrical.cpp	/^Real x1min, x1max, damping_rate, gm0, r0, rho0, dslope, p0_over_r0, pslope, beta,$/;"	m	namespace:__anon74	file:
x1min	disk_planet_dust_cylindrical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon64	file:
x1min	disk_planet_dust_spherical.cpp	/^x1min, x1max, damping_rate, Hill_radius, accretion_radius, accretion_rate,$/;"	m	namespace:__anon78	file:
x1min	disk_streaming_cylindrical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon19	file:
x1min	disk_streaming_spherical.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon40	file:
x1min	dust_diffusion.cpp	/^Real x1min, x1max, tau_damping, damping_rate;$/;"	m	namespace:__anon82	file:
x1min	inject_pebble_3D.cpp	/^Real mplanet, tsoft, rsoft, gamma_gas, x1min, x1max;$/;"	m	namespace:__anon27	file:
x1min	ssheet_RWI_dust.cpp	/^A_bump, sigma_bump, x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon55	file:
x1min	ssheet_planet_dust.cpp	/^x1min, x1max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon76	file:
x1size	dust_NSH.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon68	file:
x1size	hb3.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon23	file:
x1size	ssheet.cpp	/^Real x1size,x2size,x3size;$/;"	m	namespace:__anon60	file:
x1size	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
x1size	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
x1size	streaming_eigen.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon31	file:
x1size	streaming_eigen_2dust.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon110	file:
x1size	streaming_nonlinear.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon100	file:
x1size	streaming_stratified.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon119	file:
x2_0	jet.cpp	/^Real gm1, x2_0, x3_0;$/;"	m	namespace:__anon42	file:
x2max	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
x2min	disk_VSI.cpp	/^x1min, x1max, x2min, x2max, damping_rate, radius_inner_damping, radius_outer_damping,$/;"	m	namespace:__anon98	file:
x2size	dust_NSH.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon68	file:
x2size	hb3.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon23	file:
x2size	ssheet.cpp	/^Real x1size,x2size,x3size;$/;"	m	namespace:__anon60	file:
x2size	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
x2size	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
x2size	streaming_eigen.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon31	file:
x2size	streaming_eigen_2dust.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon110	file:
x2size	streaming_nonlinear.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon100	file:
x2size	streaming_stratified.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon119	file:
x3_0	jet.cpp	/^Real gm1, x2_0, x3_0;$/;"	m	namespace:__anon42	file:
x3size	dust_NSH.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon68	file:
x3size	hb3.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon23	file:
x3size	ssheet.cpp	/^Real x1size,x2size,x3size;$/;"	m	namespace:__anon60	file:
x3size	ssheet_RWI_dust.cpp	/^Real sound_speed, gamma1, inv_gm1, d0, amp, x1size, x2size, x3size, qshear, Omega0,$/;"	m	namespace:__anon55	file:
x3size	ssheet_planet_dust.cpp	/^Real x1size, x2size, x3size, sound_speed, gm1, inv_gm1, d0, qshear, Omega0, beta,$/;"	m	namespace:__anon76	file:
x3size	streaming_eigen.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon31	file:
x3size	streaming_eigen_2dust.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon110	file:
x3size	streaming_nonlinear.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon100	file:
x3size	streaming_stratified.cpp	/^Real x1size, x2size, x3size;$/;"	m	namespace:__anon119	file:
x_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
x_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
x_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
x_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
x_planet	disk_multiple_planet_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon33	file:
x_planet	disk_multiple_planets_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon74	file:
xc	field_loop_poles.cpp	/^Real xc, yc, zc, beta, b0;$/;"	m	namespace:__anon21	file:
xshock	dusty_shock.cpp	/^Real user_dt, iso_cs, xshock, gamma_gas, vel_right;$/;"	m	namespace:__anon85	file:
y0_vortex	disk_RWI_2D.cpp	/^vel_vortex, r0_vortex, x0_vortex, y0_vortex, amp, time_drag, x1min, x1max,$/;"	m	namespace:__anon66	file:
y_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
y_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
y_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
y_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
y_planet	disk_multiple_planet_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon33	file:
y_planet	disk_multiple_planets_dust_cylindrical.cpp	/^accretion_rate[10], x_planet[10], y_planet[10], vx_planet[10],$/;"	m	namespace:__anon74	file:
yc	field_loop_poles.cpp	/^Real xc, yc, zc, beta, b0;$/;"	m	namespace:__anon21	file:
z_0	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
z_0	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
z_cur	disk_multiple_planet_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon33	file:
z_cur	disk_multiple_planets_dust_cylindrical.cpp	/^Real gmstar, x_0, y_0, z_0, vx_0, vy_0, vz_0, x_cur, y_cur, z_cur, vx_cur, vy_cur, vz_cur;$/;"	m	namespace:__anon74	file:
z_planet	disk_dust_diffusion.cpp	/^Real tau_relax, rs, gmstar, gmp, rad_planet, phi_planet_0, z_planet, t0_planet, t_end_planet, vk_planet, omega_planet, inv_omega_planet;$/;"	m	namespace:__anon35	file:
z_planet	disk_multiple_planet_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon33	file:
z_planet	disk_multiple_planets_dust_cylindrical.cpp	/^phi_planet[10], z_planet[10], t0_planet[10], time_drag, vk_planet[10],$/;"	m	namespace:__anon74	file:
z_planet	disk_planet_dust_cylindrical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon64	file:
z_planet	disk_planet_dust_spherical.cpp	/^Real rad_soft, gmp, inv_sqrt2gmp, rad_planet, phi_planet_0, z_planet,$/;"	m	namespace:__anon78	file:
zc	field_loop_poles.cpp	/^Real xc, yc, zc, beta, b0;$/;"	m	namespace:__anon21	file:
