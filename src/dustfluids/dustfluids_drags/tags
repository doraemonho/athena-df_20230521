!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Add	addition.cpp	/^void DustGasDrag::Add(AthenaArray<Real> &a_matrix, const Real b_num,$/;"	f	class:DustGasDrag
Add	addition.cpp	/^void DustGasDrag::Add(const AthenaArray<Real> &a_matrix, const Real b_num,$/;"	f	class:DustGasDrag
Add	addition.cpp	/^void DustGasDrag::Add(const Real a_num, const Real b_num,$/;"	f	class:DustGasDrag
BackwardEulerFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::BackwardEulerFeedback(const int stage,$/;"	f	class:DustGasDrag
BackwardEulerNoFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::BackwardEulerNoFeedback(const int stage,$/;"	f	class:DustGasDrag
DRAG_DUSTGAS_HPP_	dust_gas_drag.hpp	/^#define DRAG_DUSTGAS_HPP_$/;"	d
Dissipation_Flag	dust_gas_drag.hpp	/^  bool Dissipation_Flag;   \/\/ true or false, the flag of energy dissipation term$/;"	m	class:DustGasDrag
DragIntegrate	dust_gas_drag.cpp	/^void DustGasDrag::DragIntegrate(const int stage, const Real dt,$/;"	f	class:DustGasDrag
DustFeedback_Flag	dust_gas_drag.hpp	/^  bool DustFeedback_Flag;  \/\/ true or false, the flag of dust feedback term$/;"	m	class:DustGasDrag
DustGasDrag	dust_gas_drag.cpp	/^DustGasDrag::DustGasDrag(DustFluids *pdf, ParameterInput *pin) :$/;"	f	class:DustGasDrag
DustGasDrag	dust_gas_drag.hpp	/^class DustGasDrag {$/;"	c
ExplicitFeedback	explicit_integrator.cpp	/^void DustGasDrag::ExplicitFeedback(const int stage,$/;"	f	class:DustGasDrag
ExplicitNoFeedback	explicit_integrator.cpp	/^void DustGasDrag::ExplicitNoFeedback(const int stage,$/;"	f	class:DustGasDrag
Inverse	inversion.cpp	/^void DustGasDrag::Inverse(const AthenaArray<Real> &index_vector, const AthenaArray<Real> &lu_matrix,$/;"	f	class:DustGasDrag
LUdecompose	inversion.cpp	/^void DustGasDrag::LUdecompose(const AthenaArray<Real> &a_matrix,$/;"	f	class:DustGasDrag
Multiply	multiplication.cpp	/^void DustGasDrag::Multiply(const AthenaArray<Real> &a_matrix,$/;"	f	class:DustGasDrag
Multiply	multiplication.cpp	/^void DustGasDrag::Multiply(const Real a_num, AthenaArray<Real> &b_matrix) {$/;"	f	class:DustGasDrag
Multiply	multiplication.cpp	/^void DustGasDrag::Multiply(const Real a_num, const AthenaArray<Real> &b_matrix,$/;"	f	class:DustGasDrag
MultiplyVector	multiplication.cpp	/^void DustGasDrag::MultiplyVector(const AthenaArray<Real> &a_matrix,$/;"	f	class:DustGasDrag
RK2BackwardEulerFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::RK2BackwardEulerFeedback(const int stage,$/;"	f	class:DustGasDrag
RK2BackwardEulerNoFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::RK2BackwardEulerNoFeedback(const int stage,$/;"	f	class:DustGasDrag
RK2ExplicitFeedback	explicit_integrator.cpp	/^void DustGasDrag::RK2ExplicitFeedback(const int stage,$/;"	f	class:DustGasDrag
RK2ImplicitFeedback	rk2implicit_integrator.cpp	/^void DustGasDrag::RK2ImplicitFeedback(const int stage,$/;"	f	class:DustGasDrag
RK2ImplicitNoFeedback	rk2implicit_integrator.cpp	/^void DustGasDrag::RK2ImplicitNoFeedback(const int stage,$/;"	f	class:DustGasDrag
SolveLinearEquation	inversion.cpp	/^void DustGasDrag::SolveLinearEquation(const AthenaArray<Real> &index_vector,$/;"	f	class:DustGasDrag
SolveMultipleLinearEquation	inversion.cpp	/^void DustGasDrag::SolveMultipleLinearEquation(const AthenaArray<Real> &index_vector,$/;"	f	class:DustGasDrag
TRBDF2Feedback	trbdf2_integrator.cpp	/^void DustGasDrag::TRBDF2Feedback(const int stage,$/;"	f	class:DustGasDrag
TRBDF2NoFeedback	trbdf2_integrator.cpp	/^void DustGasDrag::TRBDF2NoFeedback(const int stage,$/;"	f	class:DustGasDrag
TrapezoidFeedback	trapezoid_integrator.cpp	/^void DustGasDrag::TrapezoidFeedback(const int stage,$/;"	f	class:DustGasDrag
TrapezoidNoFeedback	trapezoid_integrator.cpp	/^void DustGasDrag::TrapezoidNoFeedback(const int stage,$/;"	f	class:DustGasDrag
VL2BackwardEulerFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::VL2BackwardEulerFeedback(const int stage,$/;"	f	class:DustGasDrag
VL2BackwardEulerNoFeedback	backwardEuler_integrator.cpp	/^void DustGasDrag::VL2BackwardEulerNoFeedback(const int stage,$/;"	f	class:DustGasDrag
VL2ImplicitFeedback	vl2implicit_integrator.cpp	/^void DustGasDrag::VL2ImplicitFeedback(const int stage,$/;"	f	class:DustGasDrag
VL2ImplicitNoFeedback	vl2implicit_integrator.cpp	/^void DustGasDrag::VL2ImplicitNoFeedback(const int stage,$/;"	f	class:DustGasDrag
alpha	dust_gas_drag.hpp	/^  AthenaArray<Real> alpha, alpha_n;$/;"	m	class:DustGasDrag
alpha_n	dust_gas_drag.hpp	/^  AthenaArray<Real> alpha, alpha_n;$/;"	m	class:DustGasDrag
biggest_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> biggest_arr, temp_arr;$/;"	m	class:DustGasDrag
delta_mom1	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1,       delta_mom2,       delta_mom3;$/;"	m	class:DustGasDrag
delta_mom1_im	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im,    delta_mom2_im,    delta_mom3_im;$/;"	m	class:DustGasDrag
delta_mom1_im_II	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im_II, delta_mom2_im_II, delta_mom3_im_II;$/;"	m	class:DustGasDrag
delta_mom1_src	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_src,   delta_mom2_src,   delta_mom3_src;$/;"	m	class:DustGasDrag
delta_mom2	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1,       delta_mom2,       delta_mom3;$/;"	m	class:DustGasDrag
delta_mom2_im	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im,    delta_mom2_im,    delta_mom3_im;$/;"	m	class:DustGasDrag
delta_mom2_im_II	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im_II, delta_mom2_im_II, delta_mom3_im_II;$/;"	m	class:DustGasDrag
delta_mom2_src	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_src,   delta_mom2_src,   delta_mom3_src;$/;"	m	class:DustGasDrag
delta_mom3	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1,       delta_mom2,       delta_mom3;$/;"	m	class:DustGasDrag
delta_mom3_im	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im,    delta_mom2_im,    delta_mom3_im;$/;"	m	class:DustGasDrag
delta_mom3_im_II	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_im_II, delta_mom2_im_II, delta_mom3_im_II;$/;"	m	class:DustGasDrag
delta_mom3_src	dust_gas_drag.hpp	/^  AthenaArray<Real> delta_mom1_src,   delta_mom2_src,   delta_mom3_src;$/;"	m	class:DustGasDrag
det_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> det_arr, scale_arr;$/;"	m	class:DustGasDrag
drag_method	dust_gas_drag.hpp	/^  std::string drag_method; \/\/ Drag methods$/;"	m	class:DustGasDrag
epsilon	dust_gas_drag.hpp	/^  AthenaArray<Real> epsilon, epsilon_n;$/;"	m	class:DustGasDrag
epsilon_n	dust_gas_drag.hpp	/^  AthenaArray<Real> epsilon, epsilon_n;$/;"	m	class:DustGasDrag
force_x1	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1, force_x2, force_x3;$/;"	m	class:DustGasDrag
force_x1_n	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1_n, force_x2_n, force_x3_n;$/;"	m	class:DustGasDrag
force_x2	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1, force_x2, force_x3;$/;"	m	class:DustGasDrag
force_x2_n	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1_n, force_x2_n, force_x3_n;$/;"	m	class:DustGasDrag
force_x3	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1, force_x2, force_x3;$/;"	m	class:DustGasDrag
force_x3_n	dust_gas_drag.hpp	/^  AthenaArray<Real> force_x1_n, force_x2_n, force_x3_n;$/;"	m	class:DustGasDrag
idx_vector	dust_gas_drag.hpp	/^  AthenaArray<Real> idx_vector, lu_matrix;$/;"	m	class:DustGasDrag
integrator_	dust_gas_drag.hpp	/^  std::string integrator_;        \/\/ Time Integrator$/;"	m	class:DustGasDrag
inv_gas_rho	dust_gas_drag.hpp	/^  AthenaArray<Real> inv_gas_rho, inv_gas_rho_n;$/;"	m	class:DustGasDrag
inv_gas_rho_n	dust_gas_drag.hpp	/^  AthenaArray<Real> inv_gas_rho, inv_gas_rho_n;$/;"	m	class:DustGasDrag
jacobi	dust_gas_drag.hpp	/^  AthenaArray<Real> jacobi, jacobi_n, product, lambda, lambda_inv;$/;"	m	class:DustGasDrag
jacobi_n	dust_gas_drag.hpp	/^  AthenaArray<Real> jacobi, jacobi_n, product, lambda, lambda_inv;$/;"	m	class:DustGasDrag
lambda	dust_gas_drag.hpp	/^  AthenaArray<Real> jacobi, jacobi_n, product, lambda, lambda_inv;$/;"	m	class:DustGasDrag
lambda_inv	dust_gas_drag.hpp	/^  AthenaArray<Real> jacobi, jacobi_n, product, lambda, lambda_inv;$/;"	m	class:DustGasDrag
lu_matrix	dust_gas_drag.hpp	/^  AthenaArray<Real> idx_vector, lu_matrix;$/;"	m	class:DustGasDrag
method_id_	dust_gas_drag.hpp	/^  int         method_id_;         \/\/ The integrator method id$/;"	m	class:DustGasDrag
mmax_arr	dust_gas_drag.hpp	/^  AthenaArray<int>  mmax_arr;$/;"	m	class:DustGasDrag
mom1_prim	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim,   mom2_prim,   mom3_prim;$/;"	m	class:DustGasDrag
mom1_prim_n	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim_n, mom2_prim_n, mom3_prim_n;$/;"	m	class:DustGasDrag
mom2_prim	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim,   mom2_prim,   mom3_prim;$/;"	m	class:DustGasDrag
mom2_prim_n	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim_n, mom2_prim_n, mom3_prim_n;$/;"	m	class:DustGasDrag
mom3_prim	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim,   mom2_prim,   mom3_prim;$/;"	m	class:DustGasDrag
mom3_prim_n	dust_gas_drag.hpp	/^  AthenaArray<Real> mom1_prim_n, mom2_prim_n, mom3_prim_n;$/;"	m	class:DustGasDrag
orb_advection_	dust_gas_drag.hpp	/^  int         orb_advection_;     \/\/ Orbital Advection$/;"	m	class:DustGasDrag
pco_	dust_gas_drag.hpp	/^  Coordinates *pco_;              \/\/ ptr to coordinates class$/;"	m	class:DustGasDrag
pmb_	dust_gas_drag.hpp	/^  MeshBlock   *pmb_;              \/\/ ptr to meshblock containing this DustGasDrag$/;"	m	class:DustGasDrag
pmy_dustfluids_	dust_gas_drag.hpp	/^  DustFluids  *pmy_dustfluids_;   \/\/ ptr to DustFluids containing this DustGasDrag$/;"	m	class:DustGasDrag
pmy_hydro_	dust_gas_drag.hpp	/^  Hydro       *pmy_hydro_;        \/\/ ptr to hydro class$/;"	m	class:DustGasDrag
product	dust_gas_drag.hpp	/^  AthenaArray<Real> jacobi, jacobi_n, product, lambda, lambda_inv;$/;"	m	class:DustGasDrag
qvalue	dust_gas_drag.hpp	/^  AthenaArray<Real> qvalue, weight_gas, weight_dust;$/;"	m	class:DustGasDrag
scale_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> det_arr, scale_arr;$/;"	m	class:DustGasDrag
sum_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> sum_arr, xx_arr;$/;"	m	class:DustGasDrag
temp_A	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_A, temp_B, temp_C, temp_D;$/;"	m	class:DustGasDrag
temp_B	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_A, temp_B, temp_C, temp_D;$/;"	m	class:DustGasDrag
temp_C	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_A, temp_B, temp_C, temp_D;$/;"	m	class:DustGasDrag
temp_D	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_A, temp_B, temp_C, temp_D;$/;"	m	class:DustGasDrag
temp_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> biggest_arr, temp_arr;$/;"	m	class:DustGasDrag
temp_inv_rho	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_rho, temp_inv_rho;$/;"	m	class:DustGasDrag
temp_mom1	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_mom1, temp_mom2, temp_mom3;$/;"	m	class:DustGasDrag
temp_mom2	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_mom1, temp_mom2, temp_mom3;$/;"	m	class:DustGasDrag
temp_mom3	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_mom1, temp_mom2, temp_mom3;$/;"	m	class:DustGasDrag
temp_rho	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_rho, temp_inv_rho;$/;"	m	class:DustGasDrag
temp_total_vel1	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_total_vel1, temp_total_vel2, temp_total_vel3;$/;"	m	class:DustGasDrag
temp_total_vel2	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_total_vel1, temp_total_vel2, temp_total_vel3;$/;"	m	class:DustGasDrag
temp_total_vel3	dust_gas_drag.hpp	/^  AthenaArray<Real> temp_total_vel1, temp_total_vel2, temp_total_vel3;$/;"	m	class:DustGasDrag
time_drag	dust_gas_drag.hpp	/^  Real time_drag;          \/\/ The time echo when the drags are active$/;"	m	class:DustGasDrag
weight_dust	dust_gas_drag.hpp	/^  AthenaArray<Real> qvalue, weight_gas, weight_dust;$/;"	m	class:DustGasDrag
weight_gas	dust_gas_drag.hpp	/^  AthenaArray<Real> qvalue, weight_gas, weight_dust;$/;"	m	class:DustGasDrag
xx_arr	dust_gas_drag.hpp	/^  AthenaArray<Real> sum_arr, xx_arr;$/;"	m	class:DustGasDrag
